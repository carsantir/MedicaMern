{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carsa\\\\Desktop\\\\pruebaUsuarios\\\\frontend\\\\src\\\\pages\\\\ListaConsulta.jsx\";\nimport React from 'react';\nimport { StyleSheet, Text, View, ActivityIndicator } from 'react';\nimport api from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class ListaConsulta extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      dataSource: null\n    };\n  }\n\n  componentDidMount() {\n    return fetch('http://localhost:5000/enquiries').then(response => response.json()).then(responseJson => {\n      this.setState({\n        isLoading: false,\n        dataSource: responseJson.consultas\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    if (this.state.isLoading) {\n      return /*#__PURE__*/_jsxDEV(View, {\n        children: /*#__PURE__*/_jsxDEV(ActivityIndicator, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this);\n    } else {\n      let consultas = this.state.dataSource.map((val, key) => {\n        return /*#__PURE__*/_jsxDEV(View, {\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            children: val.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 21\n          }, this)\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 24\n        }, this);\n      });\n      return /*#__PURE__*/_jsxDEV(View, {\n        children: consultas\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}","map":{"version":3,"sources":["C:/Users/carsa/Desktop/pruebaUsuarios/frontend/src/pages/ListaConsulta.jsx"],"names":["React","StyleSheet","Text","View","ActivityIndicator","api","ListaConsulta","Component","constructor","props","state","isLoading","dataSource","componentDidMount","fetch","then","response","json","responseJson","setState","consultas","catch","error","console","log","render","map","val","key","title"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,IAArB,EAA2BC,IAA3B,EAAiCC,iBAAjC,QAAyD,OAAzD;AACA,OAAOC,GAAP,MAAgB,QAAhB;;AAEA,eAAe,MAAMC,aAAN,SAA4BN,KAAK,CAACO,SAAlC,CAA2C;AACtDC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,IADF;AAETC,MAAAA,UAAU,EAAE;AAFH,KAAb;AAIH;;AAEDC,EAAAA,iBAAiB,GAAE;AACf,WAAOC,KAAK,CAAC,iCAAD,CAAL,CACNC,IADM,CACAC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADb,EAENF,IAFM,CAEAG,YAAD,IAAkB;AACpB,WAAKC,QAAL,CAAc;AACVR,QAAAA,SAAS,EAAE,KADD;AAEVC,QAAAA,UAAU,EAAEM,YAAY,CAACE;AAFf,OAAd;AAIH,KAPM,EASVC,KATU,CASHC,KAAD,IAAW;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KAXU,CAAP;AAYH;;AAEDG,EAAAA,MAAM,GAAG;AACL,QAAG,KAAKf,KAAL,CAAWC,SAAd,EAAwB;AACpB,0BACI,QAAC,IAAD;AAAA,+BACI,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH,KAND,MAMK;AAED,UAAIS,SAAS,GAAG,KAAKV,KAAL,CAAWE,UAAX,CAAsBc,GAAtB,CAA0B,CAACC,GAAD,EAAKC,GAAL,KAAa;AACnD,4BAAO,QAAC,IAAD;AAAA,iCACH,QAAC,IAAD;AAAA,sBAAOD,GAAG,CAACE;AAAX;AAAA;AAAA;AAAA;AAAA;AADG,WAAWD,GAAX;AAAA;AAAA;AAAA;AAAA,gBAAP;AAGH,OAJe,CAAhB;AAMA,0BACI,QAAC,IAAD;AAAA,kBACKR;AADL;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH;AACJ;;AA7CqD","sourcesContent":["import React from 'react';\nimport { StyleSheet, Text, View, ActivityIndicator} from 'react';\nimport api from '../api';\n\nexport default class ListaConsulta extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            isLoading: true,\n            dataSource: null,\n        }\n    }\n\n    componentDidMount(){\n        return fetch('http://localhost:5000/enquiries')\n        .then((response) => response.json())\n        .then((responseJson) => {\n            this.setState({\n                isLoading: false,\n                dataSource: responseJson.consultas,\n            })\n        })\n\n    .catch((error) => {\n        console.log(error)\n    });\n    }\n\n    render() {\n        if(this.state.isLoading){\n            return (\n                <View>\n                    <ActivityIndicator />\n                </View>\n            )\n        }else{\n\n            let consultas = this.state.dataSource.map((val,key) => {\n                return <View key={key}>\n                    <Text>{val.title}</Text>\n                </View>\n            });\n\n            return (\n                <View>\n                    {consultas}\n                </View>\n            )\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}