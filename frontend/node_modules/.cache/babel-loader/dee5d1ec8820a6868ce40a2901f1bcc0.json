{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carsa\\\\Desktop\\\\pruebaUsuarios\\\\frontend\\\\src\\\\components\\\\citas\\\\Citas.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useEffect, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport moment from 'moment';\nimport api from '../../api';\nimport UserContext from \"../../context/userContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ListaCitas(props) {\n  _s();\n\n  const history = useHistory();\n  const content = props.cita.map(cita => /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"cards\",\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"cita\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Motivo: \", cita.motivo]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Fecha:\", moment(cita.fecha).format('DD/MM/yyyy')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Paciente: \", cita.paciente.nickname]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Ciudad: \", cita.ciudad]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Direcci\\xF3n: \", cita.direccion]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Centro M\\xE9dico: \", cita.centroMedico]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, cita._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [content, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 7\n  }, this);\n}\n\n_s(ListaCitas, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = ListaCitas;\nexport default class Cita extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: this.props.match.params.id,\n      loading: true,\n      consulta: null\n    };\n  }\n\n  async componentWillMount() {\n    const {\n      id\n    } = this.state;\n    const url = await api.getCitaByPacienteId(id); // const response = await fetch(url);\n    // const data = await response.json();\n\n    this.setState({\n      cita: url.data.data,\n      loading: false\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.loading || !this.state.cita ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(ListaCitas, {\n          cita: this.state.cita\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"ListaCitas\");","map":{"version":3,"sources":["C:/Users/carsa/Desktop/pruebaUsuarios/frontend/src/components/citas/Citas.jsx"],"names":["React","Component","useEffect","useContext","useHistory","moment","api","UserContext","ListaCitas","props","history","content","cita","map","motivo","fecha","format","paciente","nickname","ciudad","direccion","centroMedico","_id","Cita","constructor","state","id","match","params","loading","consulta","componentWillMount","url","getCitaByPacienteId","setState","data","render"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,EAAsCC,UAAtC,QAAwD,OAAxD;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACvB,QAAMC,OAAO,GAAGN,UAAU,EAA1B;AACA,QAAMO,OAAO,GAAGF,KAAK,CAACG,IAAN,CAAWC,GAAX,CAAgBD,IAAD,iBAC/B;AAAK,IAAA,KAAK,EAAC,OAAX;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA,YADJ,eAEE;AAAK,MAAA,KAAK,EAAC,MAAX;AAAA,8BACE;AAAA,+BAAYA,IAAI,CAACE,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,6BAAUT,MAAM,CAACO,IAAI,CAACG,KAAN,CAAN,CAAmBC,MAAnB,CAA0B,YAA1B,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,iCAAcJ,IAAI,CAACK,QAAL,CAAcC,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA,+BAAYN,IAAI,CAACO,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAA,qCAAeP,IAAI,CAACQ,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAA,yCAAmBR,IAAI,CAACS,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA,OAAuBT,IAAI,CAACU,GAA5B;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADgB,CAAhB;AAaA,sBACE;AAAA,eACGX,OADH,eAEE;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GArBMH,U;UACWJ,U;;;KADXI,U;AAwBT,eAAe,MAAMe,IAAN,SAAmBvB,KAAK,CAACC,SAAzB,CAAkC;AAC7CuB,EAAAA,WAAW,CAACf,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKgB,KAAL,GAAa;AACTC,MAAAA,EAAE,EAAE,KAAKjB,KAAL,CAAWkB,KAAX,CAAiBC,MAAjB,CAAwBF,EADnB;AAETG,MAAAA,OAAO,EAAE,IAFA;AAGTC,MAAAA,QAAQ,EAAC;AAHA,KAAb;AAKH;;AAEuB,QAAlBC,kBAAkB,GAAE;AACtB,UAAM;AAAEL,MAAAA;AAAF,QAAS,KAAKD,KAApB;AACA,UAAMO,GAAG,GAAG,MAAM1B,GAAG,CAAC2B,mBAAJ,CAAwBP,EAAxB,CAAlB,CAFsB,CAGtB;AACA;;AACA,SAAKQ,QAAL,CAAc;AAACtB,MAAAA,IAAI,EAAEoB,GAAG,CAACG,IAAJ,CAASA,IAAhB;AAAsBN,MAAAA,OAAO,EAAC;AAA9B,KAAd;AACH;;AAGDO,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA,gBACK,KAAKX,KAAL,CAAWI,OAAX,IAAsB,CAAC,KAAKJ,KAAL,CAAWb,IAAlC,gBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,gBAGG;AAAA,+BACI,QAAC,UAAD;AAAY,UAAA,IAAI,EAAE,KAAKa,KAAL,CAAWb;AAA7B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAJR;AAAA;AAAA;AAAA;AAAA,YADJ;AAYH;;AAhC4C","sourcesContent":["import React, { Component, useEffect, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport moment from 'moment';\r\nimport api from '../../api'\r\nimport UserContext from \"../../context/userContext\";\r\n\r\nfunction ListaCitas(props) {\r\n    const history = useHistory();\r\n    const content = props.cita.map((cita) =>\r\n    <div class=\"cards\">\r\n        <br></br>\r\n      <div class=\"cita\" key={cita._id}>\r\n        <p>Motivo: {cita.motivo}</p>\r\n        <p>Fecha:{moment(cita.fecha).format('DD/MM/yyyy')}</p>\r\n        <p>Paciente: {cita.paciente.nickname}</p>\r\n        <p>Ciudad: {cita.ciudad}</p>\r\n        <p>Dirección: {cita.direccion}</p>\r\n        <p>Centro Médico: {cita.centroMedico}</p>\r\n      </div>\r\n      </div>\r\n    );\r\n    return (\r\n      <div>\r\n        {content}\r\n        <br></br>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\nexport default class Cita extends React.Component{\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            loading: true,\r\n            consulta:null,\r\n        }\r\n    }\r\n\r\n    async componentWillMount(){\r\n        const { id } = this.state\r\n        const url = await api.getCitaByPacienteId(id)\r\n        // const response = await fetch(url);\r\n        // const data = await response.json();\r\n        this.setState({cita: url.data.data, loading:false});\r\n    }\r\n    \r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                {this.state.loading || !this.state.cita ? (\r\n                    <div>loading...</div>\r\n                ):(\r\n                    <div>\r\n                        <ListaCitas cita={this.state.cita} />\r\n                        \r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}