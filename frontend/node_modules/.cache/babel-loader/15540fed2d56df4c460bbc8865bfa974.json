{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carsa\\\\Desktop\\\\pruebaUsuarios\\\\frontend\\\\src\\\\components\\\\informes\\\\Informes.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport React, { Component, useEffect, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport moment from 'moment';\nimport api from '../../api';\nimport UserContext from \"../../context/userContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ListaInformes(props) {\n  _s();\n\n  const history = useHistory();\n  let content;\n\n  if (props.rol == \"Paciente\") {\n    content = props.informeSangre.map(informeSangre => /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"cards\",\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"cita\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Tipo de informe: \", informeSangre.tipoInforme]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Fecha:\", moment(informeSangre.fecha).format('DD/MM/yyyy')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Medico: \", informeSangre.medico.nickname]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Observaciones: \", informeSangre.observaciones]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this)]\n      }, informeSangre._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [content, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this);\n  } else {\n    content = props.informeSangre.map(informeSangre => /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"cards\",\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"cita\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Tipo de informe: \", informeSangre.tipoInforme]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Fecha:\", moment(informeSangre.fecha).format('DD/MM/yyyy')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Paciente: \", informeSangre.paciente.nickname]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Observaciones: \", informeSangre.observaciones]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)]\n      }, informeSangre._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [content, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(ListaInformes, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = ListaInformes;\n\nfunction TipoAnalisis(props) {\n  if (props.tipoCita == \"análisis\") {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Tipo de an\\xE1lisis: \", props.cita.tipoAnalisis]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this);\n  }\n}\n\n_c2 = TipoAnalisis;\n\nfunction CrearInforme(props) {\n  _s2();\n\n  const history = useHistory();\n  const {\n    userData\n  } = useContext(UserContext);\n  let crearInforme;\n\n  if (props.tipoCita == \"análisis\" && props.tipoAnalisis == \"sangre\") {\n    crearInforme = () => history.push(\"/\" + props.paciente._id + \"/citas/\" + props.id + \"/\" + props.tipoCita + \"/\" + props.tipoAnalisis + \"/crearInformeSangre\");\n  } else if (props.tipoCita == \"análisis\" && props.tipoAnalisis == \"orina\") {\n    crearInforme = () => history.push(\"/\" + props.paciente._id + \"/citas/\" + props.id + \"/\" + props.tipoCita + \"/\" + props.tipoAnalisis + \"/crearInformeOrina\");\n  } else if (props.tipoCita == \"prueba médica\") {\n    crearInforme = () => history.push(\"/\" + props.paciente._id + \"/citas/\" + props.id + \"/\" + props.tipoCita + \"/crearInformePrueba\");\n  } else if (props.tipoCita == \"presencial\") {\n    crearInforme = () => history.push(\"/\" + props.paciente._id + \"/citas/\" + props.id + \"/\" + props.tipoCita + \"/crearInformePresencial\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"rad-button-2 wwt flat\",\n    onClick: crearInforme,\n    children: \"Crear informe\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 13\n  }, this);\n}\n\n_s2(CrearInforme, \"XPjJz2JXqG70YnNRi1Yn044eAWA=\", false, function () {\n  return [useHistory];\n});\n\n_c3 = CrearInforme;\n\nfunction EditarCita(props) {\n  _s3();\n\n  const history = useHistory();\n  const {\n    userData\n  } = useContext(UserContext);\n\n  const editarCita = () => history.push(\"/\" + userData.user.id + \"/citas/\" + props.id + \"/edit\");\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"rad-button-2 wwt flat\",\n    onClick: editarCita,\n    children: \"Editar cita\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 13\n  }, this);\n}\n\n_s3(EditarCita, \"XPjJz2JXqG70YnNRi1Yn044eAWA=\", false, function () {\n  return [useHistory];\n});\n\n_c4 = EditarCita;\n\nfunction EliminarCita(props) {\n  _s4();\n\n  const history = useHistory();\n\n  const eliminarCita = () => {\n    api.eliminarCita(props.id);\n    window.location.reload();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"rad-button-2 wwt flat\",\n    onClick: eliminarCita,\n    children: \"Eliminar cita\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 13\n  }, this);\n}\n\n_s4(EliminarCita, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c5 = EliminarCita;\nexport default class Informes extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: this.props.match.params.id,\n      rol: this.props.userData.rol\n    };\n  }\n\n  async componentWillMount() {\n    const {\n      id\n    } = this.state;\n    const {\n      rol\n    } = this.state;\n    let url;\n\n    if (rol == \"Paciente\") {\n      url = await api.getInformeAnalisisSangreByPaciente(id);\n    } else {\n      url = await api.getInformeAnalisisSangreByMedico(id);\n    }\n\n    this.setState({\n      informeSangre: url.data.data,\n      loading: false,\n      rol: rol\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.loading || !this.state.informeSangre ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(ListaInformes, {\n          informeSangre: this.state.informeSangre,\n          rol: this.state.rol\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"ListaInformes\");\n$RefreshReg$(_c2, \"TipoAnalisis\");\n$RefreshReg$(_c3, \"CrearInforme\");\n$RefreshReg$(_c4, \"EditarCita\");\n$RefreshReg$(_c5, \"EliminarCita\");","map":{"version":3,"sources":["C:/Users/carsa/Desktop/pruebaUsuarios/frontend/src/components/informes/Informes.jsx"],"names":["React","Component","useEffect","useContext","useHistory","moment","api","UserContext","ListaInformes","props","history","content","rol","informeSangre","map","tipoInforme","fecha","format","medico","nickname","observaciones","_id","paciente","TipoAnalisis","tipoCita","cita","tipoAnalisis","CrearInforme","userData","crearInforme","push","id","EditarCita","editarCita","user","EliminarCita","eliminarCita","window","location","reload","Informes","constructor","state","match","params","componentWillMount","url","getInformeAnalisisSangreByPaciente","getInformeAnalisisSangreByMedico","setState","data","loading","render"],"mappings":"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","sourcesContent":["import React, { Component, useEffect, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport moment from 'moment';\r\nimport api from '../../api'\r\nimport UserContext from \"../../context/userContext\";\r\n\r\nfunction ListaInformes(props) {\r\n    const history = useHistory();\r\n    let content;\r\n    if(props.rol==\"Paciente\"){\r\n        content = props.informeSangre.map((informeSangre) =>\r\n        <div class=\"cards\">\r\n            <br></br>\r\n        <div class=\"cita\" key={informeSangre._id}>\r\n            <p>Tipo de informe: {informeSangre.tipoInforme}</p>\r\n            <p>Fecha:{moment(informeSangre.fecha).format('DD/MM/yyyy')}</p>\r\n            <p>Medico: {informeSangre.medico.nickname}</p>\r\n            <p>Observaciones: {informeSangre.observaciones}</p>\r\n        </div>\r\n        </div>\r\n        );\r\n        return (\r\n        <div>\r\n            {content}\r\n            <br></br>\r\n        </div>\r\n        );\r\n        }else{\r\n            content = props.informeSangre.map((informeSangre) =>\r\n            <div class=\"cards\">\r\n                <br></br>\r\n            <div class=\"cita\" key={informeSangre._id}>\r\n            <p>Tipo de informe: {informeSangre.tipoInforme}</p>\r\n            <p>Fecha:{moment(informeSangre.fecha).format('DD/MM/yyyy')}</p>\r\n            <p>Paciente: {informeSangre.paciente.nickname}</p>\r\n            <p>Observaciones: {informeSangre.observaciones}</p>\r\n                {/* <div class=\"consultaBotones\">\r\n                <EditarCita id={cita._id} />\r\n                </div>\r\n                <div class=\"consultaBotones\">\r\n                <EliminarCita id={cita._id}/>\r\n                </div>\r\n                <div class=\"consultaBotones\">\r\n                <CrearInforme paciente={cita.paciente} id={cita._id} tipoCita={cita.tipoCita} tipoAnalisis={cita.tipoAnalisis}/>\r\n                </div> */}\r\n\r\n            </div>\r\n            </div>\r\n            );\r\n            return (\r\n            <div>\r\n                {content}\r\n                <br></br>\r\n            </div>\r\n            );\r\n        }\r\n  }\r\n\r\n  function TipoAnalisis(props) {\r\n    if(props.tipoCita==\"análisis\"){\r\n    return(\r\n        <p>Tipo de análisis: {props.cita.tipoAnalisis}</p>\r\n    );\r\n    }else{\r\n    return(\r\n        <p></p>\r\n    );  \r\n    }\r\n}\r\n\r\n\r\n    function CrearInforme(props) {\r\n        const history = useHistory();\r\n        const { userData } = useContext(UserContext);\r\n        let crearInforme;\r\n        if(props.tipoCita==\"análisis\" && props.tipoAnalisis==\"sangre\"){\r\n            crearInforme = () => history.push(\"/\"+props.paciente._id+\"/citas/\"+props.id+\"/\"+props.tipoCita+\"/\"+props.tipoAnalisis+\"/crearInformeSangre\");\r\n        }else if(props.tipoCita==\"análisis\" && props.tipoAnalisis==\"orina\"){\r\n            crearInforme = () => history.push(\"/\"+props.paciente._id+\"/citas/\"+props.id+\"/\"+props.tipoCita+\"/\"+props.tipoAnalisis+\"/crearInformeOrina\");\r\n        }else if(props.tipoCita==\"prueba médica\"){\r\n            crearInforme = () => history.push(\"/\"+props.paciente._id+\"/citas/\"+props.id+\"/\"+props.tipoCita+\"/crearInformePrueba\");\r\n        }else if(props.tipoCita==\"presencial\"){\r\n            crearInforme = () => history.push(\"/\"+props.paciente._id+\"/citas/\"+props.id+\"/\"+props.tipoCita+\"/crearInformePresencial\");\r\n        }\r\n        return(\r\n            <button className=\"rad-button-2 wwt flat\" onClick={crearInforme}>Crear informe</button>\r\n        );\r\n    }\r\n\r\n    function EditarCita(props) {\r\n        const history = useHistory();\r\n        const { userData } = useContext(UserContext);\r\n        const editarCita = () => history.push(\"/\"+userData.user.id+\"/citas/\"+props.id+\"/edit\");\r\n        return(\r\n            <button className=\"rad-button-2 wwt flat\" onClick={editarCita}>Editar cita</button>\r\n        );\r\n    }\r\n\r\n    function EliminarCita(props) {\r\n        const history = useHistory();\r\n        const eliminarCita = () => {\r\n            api.eliminarCita(props.id)\r\n            window.location.reload()\r\n        }\r\n        return(\r\n            <button className=\"rad-button-2 wwt flat\" onClick={eliminarCita}>Eliminar cita</button>\r\n        );\r\n    }\r\n\r\n\r\nexport default class Informes extends React.Component{\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            rol: this.props.userData.rol,\r\n        }\r\n    }\r\n\r\n    async componentWillMount(){\r\n        const { id } = this.state\r\n        const { rol } = this.state\r\n        let url;\r\n        if(rol==\"Paciente\"){\r\n            url = await api.getInformeAnalisisSangreByPaciente(id)\r\n        }else{\r\n            url = await api.getInformeAnalisisSangreByMedico(id)\r\n        }\r\n        this.setState({informeSangre: url.data.data, loading:false, rol:rol});\r\n    }\r\n    \r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                {this.state.loading || !this.state.informeSangre ? (\r\n                    <div>loading...</div>\r\n                ):(\r\n                    <div>\r\n                        <ListaInformes informeSangre={this.state.informeSangre} rol={this.state.rol} />\r\n                        \r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}