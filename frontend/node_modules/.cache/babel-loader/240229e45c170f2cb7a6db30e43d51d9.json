{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carsa\\\\Desktop\\\\pruebaUsuarios\\\\frontend\\\\src\\\\components\\\\mensajes\\\\Mensaje.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport React, { Component } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport moment from 'moment';\nimport { useState, useContext } from 'react';\nimport axios from \"axios\";\nimport ErrorNotice from \"../../components/misc/ErrorNotice\";\nimport UserContext from '../../context/userContext';\nimport api from '../../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CrearMensaje() {\n  _s();\n\n  const {\n    userData\n  } = useContext(UserContext);\n  const [mensaje, setMensaje] = useState();\n  const {\n    id\n  } = useParams();\n  const consulta = id;\n  const paciente = userData.user.id;\n  const {\n    idMedico\n  } = useParams();\n  const medico = idMedico;\n  const fecha = new Date();\n  const escritoPor = userData.user.nickname + \" \" + userData.user.rol;\n  const [error, setError] = useState();\n  const history = useHistory();\n\n  const submit = async e => {\n    e.preventDefault();\n\n    try {\n      const newMensaje = {\n        mensaje,\n        consulta,\n        paciente,\n        medico,\n        fecha,\n        escritoPor\n      };\n      await axios.post(\"http://localhost:5000/enquiries/addConsultas\", newMensaje);\n      window.location.reload(false);\n    } catch (err) {\n      err.response.data.msg && setError(err.response.data.msg);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"crearMensaje\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      class: \"mensajeTitulo\",\n      children: \"Crear mensaje\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this), error && /*#__PURE__*/_jsxDEV(ErrorNotice, {\n      message: error,\n      clearError: () => setError(undefined)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"mensaje\",\n        onChange: e => setMensaje(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 73\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"crearMensaje\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Crear\",\n          className: \"rad-button-2 wwt flat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n} // function DivChat(mensajeId){\n//     const { userData } = useContext(UserContext);\n//     let mensajeSp=mensajeId.split(' ')[0]\n//     if(userData.user.nickname == mensajeSp){\n//         return <div class=\"container darker\"></div>;\n//     }else{\n//         return <div class=\"container\"></div>;\n//     }\n// }\n\n\n_s(CrearMensaje, \"dpBt4iDL50L4PuiIS3vQsZNNDUw=\", false, function () {\n  return [useParams, useParams, useHistory];\n});\n\n_c = CrearMensaje;\n\nfunction DivChat(mensajeId) {\n  _s2();\n\n  const {\n    userData\n  } = useContext(UserContext);\n  let mensajeSp = mensajeId.split(' ')[0];\n\n  if (userData.user.nickname != mensajeSp) {\n    return \"container\";\n  } else {\n    return \"container darker\";\n  }\n}\n\n_s2(DivChat, \"xoLxszjNDDSd0+fkXnRWVC+TURs=\");\n\n_c2 = DivChat;\n\nfunction FechaChat(mensajeId) {\n  _s3();\n\n  const {\n    userData\n  } = useContext(UserContext);\n  let mensajeSp = mensajeId.split(' ')[0];\n\n  if (userData.user.nickname != mensajeSp) {\n    return \"time-left\";\n  } else {\n    return \"time-right\";\n  }\n}\n\n_s3(FechaChat, \"xoLxszjNDDSd0+fkXnRWVC+TURs=\");\n\n_c3 = FechaChat;\n\nfunction CerrarDiv() {\n  return '</div>';\n}\n\n_c4 = CerrarDiv;\n\nfunction Prueba(props) {\n  _s4();\n\n  const {\n    userData\n  } = useContext(UserContext);\n  console.log(userData.user.id);\n  const content = props.mensaje.map(mensaje => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: DivChat(mensaje.escritoPor),\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [mensaje.escritoPor, \": \", mensaje.mensaje]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        class: FechaChat(mensaje.escritoPor),\n        children: moment(mensaje.fecha).format('DD/MM/yyyy HH:mm')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }, this)\n  }, mensaje._id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 7\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 7\n  }, this);\n}\n\n_s4(Prueba, \"xoLxszjNDDSd0+fkXnRWVC+TURs=\");\n\n_c5 = Prueba;\nexport default class Mensaje extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true,\n      mensaje: null,\n      id: this.props.match.params.id\n    };\n  }\n\n  async componentWillMount() {\n    const {\n      id\n    } = this.state;\n    const url = await api.getMensajes(id); // const response = await fetch(url);\n    // const data = await response.json();\n\n    this.setState({\n      mensaje: url.data.data,\n      loading: false\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.state.loading || !this.state.mensaje ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Prueba, {\n          mensaje: this.state.mensaje\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(CrearMensaje, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"CrearMensaje\");\n$RefreshReg$(_c2, \"DivChat\");\n$RefreshReg$(_c3, \"FechaChat\");\n$RefreshReg$(_c4, \"CerrarDiv\");\n$RefreshReg$(_c5, \"Prueba\");","map":{"version":3,"sources":["C:/Users/carsa/Desktop/pruebaUsuarios/frontend/src/components/mensajes/Mensaje.jsx"],"names":["React","Component","useHistory","useParams","moment","useState","useContext","axios","ErrorNotice","UserContext","api","CrearMensaje","userData","mensaje","setMensaje","id","consulta","paciente","user","idMedico","medico","fecha","Date","escritoPor","nickname","rol","error","setError","history","submit","e","preventDefault","newMensaje","post","window","location","reload","err","response","data","msg","undefined","target","value","DivChat","mensajeId","mensajeSp","split","FechaChat","CerrarDiv","Prueba","props","console","log","content","map","format","_id","Mensaje","state","loading","match","params","componentWillMount","url","getMensajes","setState","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { useHistory,useParams } from \"react-router-dom\";\r\nimport moment from 'moment';\r\nimport { useState, useContext } from 'react';\r\nimport axios from \"axios\";\r\nimport ErrorNotice from \"../../components/misc/ErrorNotice\";\r\nimport UserContext from '../../context/userContext';\r\nimport api from '../../api'\r\nfunction CrearMensaje () {\r\n    const {userData} = useContext(UserContext);\r\n    const [mensaje, setMensaje] = useState();\r\n    const { id } = useParams()\r\n    const consulta = id;\r\n    const paciente = userData.user.id;\r\n    const { idMedico } = useParams()\r\n    const medico = idMedico;\r\n    const fecha = new Date();\r\n    const escritoPor = userData.user.nickname+\" \"+userData.user.rol;\r\n    const [error, setError] = useState();\r\n    const history = useHistory();\r\n    const submit = async (e) => {\r\n    e.preventDefault();\r\n    try{\r\n    const newMensaje = {mensaje,consulta,paciente,medico,fecha,escritoPor};\r\n    await axios.post(\"http://localhost:5000/enquiries/addConsultas\", newMensaje);\r\n    \r\n    window.location.reload(false);\r\n    } catch(err) {\r\n    err.response.data.msg && setError(err.response.data.msg)\r\n    }\r\n    };\r\n    return (\r\n    <div className=\"crearMensaje\">\r\n    <h2 class=\"mensajeTitulo\">Crear mensaje</h2>\r\n    {error && <ErrorNotice message={error} clearError={() => setError(undefined)} />}\r\n    <form onSubmit={submit}>\r\n    <textarea  id=\"mensaje\" onChange={e => setMensaje(e.target.value)}/><br></br>\r\n    <div class=\"crearMensaje\">\r\n    <input type=\"submit\" value=\"Crear\" className=\"rad-button-2 wwt flat\" />\r\n    </div>\r\n    </form>\r\n    </div>\r\n    );\r\n    }\r\n\r\n// function DivChat(mensajeId){\r\n//     const { userData } = useContext(UserContext);\r\n//     let mensajeSp=mensajeId.split(' ')[0]\r\n//     if(userData.user.nickname == mensajeSp){\r\n//         return <div class=\"container darker\"></div>;\r\n//     }else{\r\n//         return <div class=\"container\"></div>;\r\n//     }\r\n// }\r\n\r\nfunction DivChat(mensajeId){\r\n    const { userData } = useContext(UserContext);\r\n    let mensajeSp=mensajeId.split(' ')[0]\r\n    if(userData.user.nickname != mensajeSp){\r\n        return \"container\";\r\n    }else{\r\n        return \"container darker\";\r\n    }\r\n}\r\n\r\nfunction FechaChat(mensajeId){\r\n    const { userData } = useContext(UserContext);\r\n    let mensajeSp=mensajeId.split(' ')[0]\r\n    if(userData.user.nickname != mensajeSp){\r\n        return \"time-left\";\r\n    }else{\r\n        return \"time-right\";\r\n    }\r\n}\r\n\r\nfunction CerrarDiv(){\r\n    return '</div>';\r\n}\r\n\r\nfunction Prueba(props) {\r\n    const { userData } = useContext(UserContext);\r\n    console.log(userData.user.id)\r\n    const content = props.mensaje.map((mensaje) =>\r\n      <div key={mensaje._id}>\r\n          {/* {DivChat(mensaje.escritoPor)} */}\r\n          <div class={DivChat(mensaje.escritoPor)}>\r\n        {/* <p>ID: {mensaje._id}</p> */}\r\n        <p>{mensaje.escritoPor}: {mensaje.mensaje}</p>\r\n        <span class={FechaChat(mensaje.escritoPor)}>{moment(mensaje.fecha).format('DD/MM/yyyy HH:mm')}</span>\r\n        {/* <p>Escrito por: {mensaje.escritoPor}</p> */}\r\n        <br></br>\r\n       </div>\r\n      </div>\r\n    );\r\n    return (\r\n      <div>\r\n        {content}\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\nexport default class Mensaje extends React.Component{\r\n    state={\r\n        loading: true,\r\n        mensaje:null,\r\n        id: this.props.match.params.id,\r\n    };\r\n\r\n    async componentWillMount(){\r\n        const { id } = this.state\r\n        const url =  await api.getMensajes(id)\r\n        // const response = await fetch(url);\r\n        // const data = await response.json();\r\n        this.setState({mensaje: url.data.data, loading:false});\r\n    }\r\n    \r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                {this.state.loading || !this.state.mensaje ? (\r\n                    <div>loading...</div>\r\n                ):(\r\n                    <div>\r\n                        <Prueba mensaje={this.state.mensaje} />\r\n                    </div>\r\n                )}\r\n                <CrearMensaje />\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}