{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carsa\\\\Desktop\\\\pruebaUsuarios\\\\frontend\\\\src\\\\components\\\\enfermedades\\\\CrearEnfermedad.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport { useHistory, Redirect, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport ErrorNotice from \"../../components/misc/ErrorNotice\";\nimport UserContext from \"../../context/userContext\";\nimport Select from 'react-select';\nimport Async from 'react-async';\nimport api from '../../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CrearEnfermedad() {\n  _s();\n\n  const [tipoEnfermedad, setTipoEnfermedad] = useState();\n  const [nombre, setNombre] = useState();\n  const [descripcion, setDescripcion] = useState();\n  const {\n    userData\n  } = useContext(UserContext);\n  const medico = userData.user.id;\n  const idPaciente = useParams();\n  const paciente = idPaciente.id;\n  const [error, setError] = useState();\n  const history = useHistory();\n\n  const onChange = async selectedOption => {\n    console.log(`Option selected:`, selectedOption);\n    setTipoEnfermedad(selectedOption.val);\n  };\n\n  const submit = async e => {\n    e.preventDefault();\n\n    try {\n      const newUser = {\n        tipoEnfermedad,\n        nombre,\n        descripcion,\n        paciente,\n        medico\n      };\n      await axios.post(\"http://localhost:5000/enfermedades/add\", newUser);\n      history.push(\"/\");\n    } catch (err) {\n      err.response.data.msg && setError(err.response.data.msg);\n    }\n  };\n\n  const sacaTipoEnfermedad = () => api.getTipoEnfermedad().then(res => {\n    return res;\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Crear enfermedad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this), error && /*#__PURE__*/_jsxDEV(ErrorNotice, {\n      message: error,\n      clearError: () => setError(undefined)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"input\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"inputBox\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Nombre: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"nombre\",\n            onChange: e => setNombre(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 79\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"inputBox\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Tipo de enfermedad \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 39\n          }, this), /*#__PURE__*/_jsxDEV(Async, {\n            promiseFn: sacaTipoEnfermedad,\n            children: ({\n              data,\n              err\n            }) => {\n              if (err) return `Something went wrong: ${err.message}`;\n\n              if (data) {\n                const selectTipoEnfermedad = [];\n                data.data.data.map(enfermedad => {\n                  selectTipoEnfermedad.push({\n                    desc: enfermedad,\n                    val: enfermedad\n                  });\n                });\n                return /*#__PURE__*/_jsxDEV(Select, {\n                  options: selectTipoEnfermedad,\n                  getOptionLabel: option => option.desc,\n                  getOptionValue: option => option.val,\n                  id: \"selectTipoEnfermedad\",\n                  placeholder: \"Selecciona un tipo de enfermedad\",\n                  onChange: onChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 17\n                }, this);\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"inputBox\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Descripci\\xF3n: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"descripcion\",\n            onChange: e => setDescripcion(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 89\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"inputBox\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Crear\",\n            className: \"btn btn-primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CrearEnfermedad, \"Mfjzf1eesN6AHhQdEt5vaCeQm/s=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = CrearEnfermedad;\nexport default CrearEnfermedad;\n\nvar _c;\n\n$RefreshReg$(_c, \"CrearEnfermedad\");","map":{"version":3,"sources":["C:/Users/carsa/Desktop/pruebaUsuarios/frontend/src/components/enfermedades/CrearEnfermedad.jsx"],"names":["React","useState","useContext","useEffect","useHistory","Redirect","useParams","axios","ErrorNotice","UserContext","Select","Async","api","CrearEnfermedad","tipoEnfermedad","setTipoEnfermedad","nombre","setNombre","descripcion","setDescripcion","userData","medico","user","id","idPaciente","paciente","error","setError","history","onChange","selectedOption","console","log","val","submit","e","preventDefault","newUser","post","push","err","response","data","msg","sacaTipoEnfermedad","getTipoEnfermedad","then","res","undefined","target","value","message","selectTipoEnfermedad","map","enfermedad","desc","option"],"mappings":"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","sourcesContent":["import React, { useState, useContext,useEffect } from 'react';\r\nimport { useHistory, Redirect,useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport ErrorNotice from \"../../components/misc/ErrorNotice\";\r\nimport UserContext from \"../../context/userContext\";\r\nimport Select from 'react-select';\r\nimport Async from 'react-async';\r\nimport api from '../../api'\r\nfunction CrearEnfermedad () {\r\nconst [tipoEnfermedad, setTipoEnfermedad] = useState();\r\nconst [nombre, setNombre] = useState();\r\nconst [descripcion, setDescripcion] = useState();\r\nconst { userData } = useContext(UserContext);\r\nconst medico = userData.user.id;\r\nconst  idPaciente  = useParams()\r\nconst paciente = idPaciente.id\r\nconst [error, setError] = useState();\r\nconst history = useHistory();\r\nconst onChange = async (selectedOption) => {\r\n\r\n    console.log(`Option selected:`, selectedOption);\r\n    setTipoEnfermedad(selectedOption.val);\r\n    \r\n  };\r\nconst submit = async (e) => {\r\ne.preventDefault();\r\ntry{\r\nconst newUser = {tipoEnfermedad,nombre,descripcion,paciente,medico};\r\nawait axios.post(\"http://localhost:5000/enfermedades/add\", newUser);\r\n\r\nhistory.push(\"/\");\r\n} catch(err) {\r\nerr.response.data.msg && setError(err.response.data.msg)\r\n}\r\n};\r\n    const sacaTipoEnfermedad = () =>\r\n    api.getTipoEnfermedad()\r\n    .then(res => {return res})\r\n\r\n    return (\r\n    <div className=\"form\">\r\n    <h2>Crear enfermedad</h2>\r\n    {error && <ErrorNotice message={error} clearError={() => setError(undefined)} />}\r\n    <form onSubmit={submit}>\r\n    <div class=\"input\">\r\n    <div class=\"inputBox\">\r\n    <label>Nombre: </label><br></br>\r\n    <input type=\"text\" id=\"nombre\" onChange={e => setNombre(e.target.value)}/><br></br>\r\n    </div>\r\n    <div class=\"inputBox\">\r\n    <label>Tipo de enfermedad </label><br></br>\r\n    <Async promiseFn={sacaTipoEnfermedad}>\r\n\r\n{({ data, err }) => {\r\n          if (err) return `Something went wrong: ${err.message}`\r\n\r\n          if (data){\r\n\r\n            const selectTipoEnfermedad = [];\r\n            data.data.data.map((enfermedad) => { selectTipoEnfermedad.push({ desc:enfermedad, val: enfermedad  })});\r\n\r\n            return (\r\n                <Select options={selectTipoEnfermedad} getOptionLabel={(option)=>option.desc}\r\n                getOptionValue={(option)=>option.val } id=\"selectTipoEnfermedad\" placeholder=\"Selecciona un tipo de enfermedad\" onChange={onChange} ></Select>\r\n                \r\n            )}\r\n        }}\r\n</Async>\r\n    </div>\r\n    <div class=\"inputBox\">\r\n    <label>Descripción: </label><br></br>\r\n    <input type=\"text\" id=\"descripcion\" onChange={e => setDescripcion(e.target.value)}/><br></br>\r\n    </div>\r\n    <div class=\"inputBox\">\r\n    <input type=\"submit\" value=\"Crear\" className=\"btn btn-primary\" />\r\n    </div>\r\n    </div>\r\n    </form>\r\n    </div>\r\n    );\r\n}\r\nexport default CrearEnfermedad;"]},"metadata":{},"sourceType":"module"}