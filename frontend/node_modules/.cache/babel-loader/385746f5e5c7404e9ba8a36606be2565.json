{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carsa\\\\Desktop\\\\pruebaUsuarios\\\\frontend\\\\src\\\\components\\\\citas\\\\Citas.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$();\n\nimport React, { Component, useEffect, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport moment from 'moment';\nimport api from '../../api';\nimport UserContext from \"../../context/userContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ListaCitas(props) {\n  _s();\n\n  const history = useHistory();\n  let content;\n  let content2;\n\n  if (props.rol == \"Paciente\") {\n    content = props.cita.map(cita => /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"cards\",\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"cita\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Motivo: \", cita.motivo]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Tipo de cita: \", cita.tipoCita]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TipoAnalisis, {\n          tipoCita: cita.tipoCita,\n          cita: cita\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Fecha:\", moment(cita.fecha).format('DD/MM/yyyy')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Medico: \", cita.medico.nickname]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Ciudad: \", cita.ciudad]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Centro M\\xE9dico: \", cita.centroMedico]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this)]\n      }, cita._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this));\n    content2 = props.citaPcr.map(citaPcr => /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"cards\",\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"cita\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Motivo: \", citaPcr.motivo]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Tipo de cita: \", citaPcr.tipoCita]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Fecha:\", moment(citaPcr.fecha).format('DD/MM/yyyy')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Medico: \", citaPcr.medico.nickname]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Ciudad: \", citaPcr.ciudad]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Centro M\\xE9dico: \", citaPcr.centroMedico]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)]\n      }, citaPcr._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [content2, content, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this);\n  } else {\n    content = props.cita.map(cita => /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"cards\",\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"cita\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Motivo: \", cita.motivo]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Tipo de cita: \", cita.tipoCita]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TipoAnalisis, {\n          tipoCita: cita.tipoCita,\n          cita: cita\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Fecha:\", moment(cita.fecha).format('DD/MM/yyyy')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Paciente: \", cita.paciente.nickname]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Ciudad: \", cita.ciudad]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Centro M\\xE9dico: \", cita.centroMedico]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"consultaBotones\",\n          children: /*#__PURE__*/_jsxDEV(EditarCita, {\n            id: cita._id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"consultaBotones\",\n          children: /*#__PURE__*/_jsxDEV(EliminarCita, {\n            id: cita._id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"consultaBotones\",\n          children: /*#__PURE__*/_jsxDEV(CrearInforme, {\n            paciente: cita.paciente,\n            id: cita._id,\n            tipoCita: cita.tipoCita,\n            tipoAnalisis: cita.tipoAnalisis\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this)]\n      }, cita._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this));\n    content2 = props.citaPcr.map(citaPcr => /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"cards\",\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"cita\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Motivo: \", citaPcr.motivo]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Tipo de cita: \", citaPcr.tipoCita]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Fecha:\", moment(citaPcr.fecha).format('DD/MM/yyyy')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Paciente: \", citaPcr.paciente.nickname]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Ciudad: \", citaPcr.ciudad]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Centro M\\xE9dico: \", citaPcr.centroMedico]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"consultaBotones\",\n          children: /*#__PURE__*/_jsxDEV(CrearInformePcr, {\n            paciente: citaPcr.paciente,\n            id: citaPcr._id,\n            tipoCita: citaPcr.tipoCita\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this)]\n      }, citaPcr._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [content2, content, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(ListaCitas, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = ListaCitas;\n\nfunction TipoAnalisis(props) {\n  if (props.tipoCita == \"análisis\") {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Tipo de an\\xE1lisis: \", props.cita.tipoAnalisis]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this);\n  }\n}\n\n_c2 = TipoAnalisis;\n\nfunction CrearInforme(props) {\n  _s2();\n\n  const history = useHistory();\n  const {\n    userData\n  } = useContext(UserContext);\n  let crearInforme;\n\n  if (props.tipoCita == \"análisis\" && props.tipoAnalisis == \"sangre\") {\n    crearInforme = () => history.push(\"/\" + props.paciente._id + \"/citas/\" + props.id + \"/\" + props.tipoCita + \"/\" + props.tipoAnalisis + \"/crearInformeSangre\");\n  } else if (props.tipoCita == \"análisis\" && props.tipoAnalisis == \"orina\") {\n    crearInforme = () => history.push(\"/\" + props.paciente._id + \"/citas/\" + props.id + \"/\" + props.tipoCita + \"/\" + props.tipoAnalisis + \"/crearInformeOrina\");\n  } else if (props.tipoCita == \"prueba médica\") {\n    crearInforme = () => history.push(\"/\" + props.paciente._id + \"/citas/\" + props.id + \"/\" + props.tipoCita + \"/crearInformePrueba\");\n  } else if (props.tipoCita == \"presencial\") {\n    crearInforme = () => history.push(\"/\" + props.paciente._id + \"/citas/\" + props.id + \"/\" + props.tipoCita + \"/crearInformePresencial\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"rad-button-2 wwt flat\",\n    onClick: crearInforme,\n    children: \"Crear informe\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 13\n  }, this);\n}\n\n_s2(CrearInforme, \"XPjJz2JXqG70YnNRi1Yn044eAWA=\", false, function () {\n  return [useHistory];\n});\n\n_c3 = CrearInforme;\n\nfunction CrearInformePcr(props) {\n  _s3();\n\n  const history = useHistory();\n  const {\n    userData\n  } = useContext(UserContext);\n  let crearInforme;\n\n  crearInforme = () => history.push(\"/\" + props.paciente._id + \"/citas/\" + props.id + \"/PCR/crearInformePcr\");\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"rad-button-2 wwt flat\",\n    onClick: crearInforme,\n    children: \"Crear informe\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 13\n  }, this);\n}\n\n_s3(CrearInformePcr, \"XPjJz2JXqG70YnNRi1Yn044eAWA=\", false, function () {\n  return [useHistory];\n});\n\n_c4 = CrearInformePcr;\n\nfunction EditarCita(props) {\n  _s4();\n\n  const history = useHistory();\n  const {\n    userData\n  } = useContext(UserContext);\n\n  const editarCita = () => history.push(\"/\" + userData.user.id + \"/citas/\" + props.id + \"/edit\");\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"rad-button-2 wwt flat\",\n    onClick: editarCita,\n    children: \"Editar cita\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 13\n  }, this);\n}\n\n_s4(EditarCita, \"XPjJz2JXqG70YnNRi1Yn044eAWA=\", false, function () {\n  return [useHistory];\n});\n\n_c5 = EditarCita;\n\nfunction EliminarCita(props) {\n  _s5();\n\n  const history = useHistory();\n\n  const eliminarCita = () => {\n    api.eliminarCita(props.id);\n    window.location.reload();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"rad-button-2 wwt flat\",\n    onClick: eliminarCita,\n    children: \"Eliminar cita\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 13\n  }, this);\n}\n\n_s5(EliminarCita, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c6 = EliminarCita;\nexport default class Cita extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: this.props.match.params.id,\n      rol: this.props.userData.rol\n    };\n  }\n\n  async componentWillMount() {\n    const {\n      id\n    } = this.state;\n    const {\n      rol\n    } = this.state;\n    let url;\n    let url2;\n\n    if (rol == \"Paciente\") {\n      url = await api.getCitaByPacienteId(id);\n      url2 = await api.getCitasPcrByPacienteId(id);\n    } else {\n      url = await api.getCitaByMedicoId(id);\n      url2 = await api.getCitasPcrByMedicoId(id);\n    }\n\n    this.setState({\n      cita: url.data.data,\n      citaPcr: url2.data.data,\n      loading: false,\n      rol: rol\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.loading || !this.state.cita ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(ListaCitas, {\n          cita: this.state.cita,\n          citaPcr: this.state.citaPcr,\n          rol: this.state.rol\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"ListaCitas\");\n$RefreshReg$(_c2, \"TipoAnalisis\");\n$RefreshReg$(_c3, \"CrearInforme\");\n$RefreshReg$(_c4, \"CrearInformePcr\");\n$RefreshReg$(_c5, \"EditarCita\");\n$RefreshReg$(_c6, \"EliminarCita\");","map":{"version":3,"sources":["C:/Users/carsa/Desktop/pruebaUsuarios/frontend/src/components/citas/Citas.jsx"],"names":["React","Component","useEffect","useContext","useHistory","moment","api","UserContext","ListaCitas","props","history","content","content2","rol","cita","map","motivo","tipoCita","fecha","format","medico","nickname","ciudad","centroMedico","_id","citaPcr","paciente","tipoAnalisis","TipoAnalisis","CrearInforme","userData","crearInforme","push","id","CrearInformePcr","EditarCita","editarCita","user","EliminarCita","eliminarCita","window","location","reload","Cita","constructor","state","match","params","componentWillMount","url","url2","getCitaByPacienteId","getCitasPcrByPacienteId","getCitaByMedicoId","getCitasPcrByMedicoId","setState","data","loading","render"],"mappings":"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","sourcesContent":["import React, { Component, useEffect, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport moment from 'moment';\r\nimport api from '../../api'\r\nimport UserContext from \"../../context/userContext\";\r\n\r\nfunction ListaCitas(props) {\r\n    const history = useHistory();\r\n    let content;\r\n    let content2;\r\n    if(props.rol==\"Paciente\"){\r\n        content = props.cita.map((cita) =>\r\n        <div class=\"cards\">\r\n            <br></br>\r\n        <div class=\"cita\" key={cita._id}>\r\n            <p>Motivo: {cita.motivo}</p>\r\n            <p>Tipo de cita: {cita.tipoCita}</p>\r\n            <TipoAnalisis tipoCita={cita.tipoCita} cita={cita}/>\r\n            <p>Fecha:{moment(cita.fecha).format('DD/MM/yyyy')}</p>\r\n            <p>Medico: {cita.medico.nickname}</p>\r\n            <p>Ciudad: {cita.ciudad}</p>\r\n            <p>Centro Médico: {cita.centroMedico}</p>\r\n\r\n        </div>\r\n        </div>\r\n        );\r\n\r\n        content2 = props.citaPcr.map((citaPcr) =>\r\n        <div class=\"cards\">\r\n            <br></br>\r\n        <div class=\"cita\" key={citaPcr._id}>\r\n            <p>Motivo: {citaPcr.motivo}</p>\r\n            <p>Tipo de cita: {citaPcr.tipoCita}</p>\r\n            <p>Fecha:{moment(citaPcr.fecha).format('DD/MM/yyyy')}</p>\r\n            <p>Medico: {citaPcr.medico.nickname}</p>\r\n            <p>Ciudad: {citaPcr.ciudad}</p>\r\n            <p>Centro Médico: {citaPcr.centroMedico}</p>\r\n\r\n        </div>\r\n        </div>\r\n        );\r\n        return (\r\n        <div>\r\n            {content2}\r\n            {content}\r\n            <br></br>\r\n        </div>\r\n        );\r\n        }else{\r\n            content = props.cita.map((cita) =>\r\n            <div class=\"cards\">\r\n                <br></br>\r\n            <div class=\"cita\" key={cita._id}>\r\n                <p>Motivo: {cita.motivo}</p>\r\n                <p>Tipo de cita: {cita.tipoCita}</p>\r\n                <TipoAnalisis tipoCita={cita.tipoCita} cita={cita}/>\r\n                <p>Fecha:{moment(cita.fecha).format('DD/MM/yyyy')}</p>\r\n                <p>Paciente: {cita.paciente.nickname}</p>\r\n                <p>Ciudad: {cita.ciudad}</p>\r\n                <p>Centro Médico: {cita.centroMedico}</p>\r\n                <div class=\"consultaBotones\">\r\n                <EditarCita id={cita._id} />\r\n                </div>\r\n                <div class=\"consultaBotones\">\r\n                <EliminarCita id={cita._id}/>\r\n                </div>\r\n                <div class=\"consultaBotones\">\r\n                <CrearInforme paciente={cita.paciente} id={cita._id} tipoCita={cita.tipoCita} tipoAnalisis={cita.tipoAnalisis}/>\r\n                </div>\r\n\r\n            </div>\r\n            </div>\r\n            );\r\n\r\n            content2 = props.citaPcr.map((citaPcr) =>\r\n            <div class=\"cards\">\r\n                <br></br>\r\n            <div class=\"cita\" key={citaPcr._id}>\r\n                <p>Motivo: {citaPcr.motivo}</p>\r\n                <p>Tipo de cita: {citaPcr.tipoCita}</p>\r\n                <p>Fecha:{moment(citaPcr.fecha).format('DD/MM/yyyy')}</p>\r\n                <p>Paciente: {citaPcr.paciente.nickname}</p>\r\n                <p>Ciudad: {citaPcr.ciudad}</p>\r\n                <p>Centro Médico: {citaPcr.centroMedico}</p>\r\n                <div class=\"consultaBotones\">\r\n                <CrearInformePcr paciente={citaPcr.paciente} id={citaPcr._id} tipoCita={citaPcr.tipoCita} />\r\n                </div>\r\n            </div>\r\n            </div>\r\n            );\r\n            return (\r\n            <div>\r\n                {content2}\r\n                {content}\r\n                <br></br>\r\n            </div>\r\n            );\r\n        }\r\n  }\r\n\r\n  function TipoAnalisis(props) {\r\n    if(props.tipoCita==\"análisis\"){\r\n    return(\r\n        <p>Tipo de análisis: {props.cita.tipoAnalisis}</p>\r\n    );\r\n    }else{\r\n    return(\r\n        <p></p>\r\n    );  \r\n    }\r\n}\r\n\r\n\r\n    function CrearInforme(props) {\r\n        const history = useHistory();\r\n        const { userData } = useContext(UserContext);\r\n        let crearInforme;\r\n        if(props.tipoCita==\"análisis\" && props.tipoAnalisis==\"sangre\"){\r\n            crearInforme = () => history.push(\"/\"+props.paciente._id+\"/citas/\"+props.id+\"/\"+props.tipoCita+\"/\"+props.tipoAnalisis+\"/crearInformeSangre\");\r\n        }else if(props.tipoCita==\"análisis\" && props.tipoAnalisis==\"orina\"){\r\n            crearInforme = () => history.push(\"/\"+props.paciente._id+\"/citas/\"+props.id+\"/\"+props.tipoCita+\"/\"+props.tipoAnalisis+\"/crearInformeOrina\");\r\n        }else if(props.tipoCita==\"prueba médica\"){\r\n            crearInforme = () => history.push(\"/\"+props.paciente._id+\"/citas/\"+props.id+\"/\"+props.tipoCita+\"/crearInformePrueba\");\r\n        }else if(props.tipoCita==\"presencial\"){\r\n            crearInforme = () => history.push(\"/\"+props.paciente._id+\"/citas/\"+props.id+\"/\"+props.tipoCita+\"/crearInformePresencial\");\r\n        }\r\n        return(\r\n            <button className=\"rad-button-2 wwt flat\" onClick={crearInforme}>Crear informe</button>\r\n        );\r\n    }\r\n\r\n    function CrearInformePcr(props) {\r\n        const history = useHistory();\r\n        const { userData } = useContext(UserContext);\r\n        let crearInforme;\r\n        crearInforme = () => history.push(\"/\"+props.paciente._id+\"/citas/\"+props.id+\"/PCR/crearInformePcr\");\r\n        return(\r\n            <button className=\"rad-button-2 wwt flat\" onClick={crearInforme}>Crear informe</button>\r\n        );\r\n    }\r\n\r\n    function EditarCita(props) {\r\n        const history = useHistory();\r\n        const { userData } = useContext(UserContext);\r\n        const editarCita = () => history.push(\"/\"+userData.user.id+\"/citas/\"+props.id+\"/edit\");\r\n        return(\r\n            <button className=\"rad-button-2 wwt flat\" onClick={editarCita}>Editar cita</button>\r\n        );\r\n    }\r\n\r\n    function EliminarCita(props) {\r\n        const history = useHistory();\r\n        const eliminarCita = () => {\r\n            api.eliminarCita(props.id)\r\n            window.location.reload()\r\n        }\r\n        return(\r\n            <button className=\"rad-button-2 wwt flat\" onClick={eliminarCita}>Eliminar cita</button>\r\n        );\r\n    }\r\n\r\n\r\nexport default class Cita extends React.Component{\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            rol: this.props.userData.rol,\r\n        }\r\n    }\r\n\r\n    async componentWillMount(){\r\n        const { id } = this.state\r\n        const { rol } = this.state\r\n        let url;\r\n        let url2;\r\n        if(rol==\"Paciente\"){\r\n            url = await api.getCitaByPacienteId(id)\r\n            url2 = await api.getCitasPcrByPacienteId(id)\r\n        }else{\r\n            url = await api.getCitaByMedicoId(id)\r\n            url2 = await api.getCitasPcrByMedicoId(id)\r\n        }\r\n        this.setState({cita: url.data.data,citaPcr: url2.data.data, loading:false, rol:rol});\r\n    }\r\n    \r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                {this.state.loading || !this.state.cita ? (\r\n                    <div>loading...</div>\r\n                ):(\r\n                    <div>\r\n                        <ListaCitas cita={this.state.cita} citaPcr={this.state.citaPcr} rol={this.state.rol} />\r\n                        \r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}