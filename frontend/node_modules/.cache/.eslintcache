[{"C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\index.js":"1","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\App.js":"2","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\context\\userContext.js":"4","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\layout\\Header.js":"5","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\auth\\RegisterMedic.jsx":"6","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\auth\\Register.jsx":"7","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\pages\\Home.jsx":"8","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\auth\\Login.jsx":"9","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\consultas\\CrearConsulta.jsx":"10","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\auth\\AuthOptions.jsx":"11","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\misc\\ErrorNotice.jsx":"12","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\pages\\ListaConsulta.jsx":"13","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\api\\index.js":"14","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\auth\\Consultas.jsx":"15","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\pages\\index.js":"16","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\consultas\\Consulta.jsx":"17","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\layout\\Logo.jsx":"18","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\mensajes\\CrearMensaje.jsx":"19","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\mensajes\\Mensaje.jsx":"20","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\consultas\\EditarConsulta.jsx":"21","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\pages\\NoPermisos.jsx":"22","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\citas\\Citas.jsx":"23","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\citas\\CrearCita.jsx":"24","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\citas\\EditarCita.jsx":"25","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\informes\\CrearInformeSangre.jsx":"26","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\informes\\CrearInformeOrina.jsx":"27","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\informes\\CrearInformePresencial.jsx":"28","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\informes\\CrearInformePrueba.jsx":"29","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\informes\\Informes.jsx":"30","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\informes\\EditarInformeSangre.jsx":"31","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\informes\\EditarInformeOrina.jsx":"32","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\informes\\EditarInformePrueba.jsx":"33","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\informes\\EditarInformePresencial.jsx":"34","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\enfermedades\\Enfermedades.jsx":"35","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\enfermedades\\CrearEnfermedad.jsx":"36","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\enfermedades\\EditarEnfermedad.jsx":"37","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\perfil\\MiPerfil.jsx":"38","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\tratamientos\\CrearTratamientoMedicacion.jsx":"39","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\tratamientos\\TratamientoMedicacion.jsx":"40","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\tratamientos\\CrearTratamientoRehabilitacion.jsx":"41","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\tratamientos\\TratamientoRehabilitacion.jsx":"42","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\registrosTension\\RegistrosTension.jsx":"43","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\registrosTension\\RegistrarTension.jsx":"44","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\covid19\\RegistrarCovid19.jsx":"45","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\covid19\\Covid19.jsx":"46","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\citas\\CrearCitaPcr.jsx":"47","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\informes\\CrearInformePcr.jsx":"48","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\pacientes\\MisPacientes.jsx":"49"},{"size":500,"mtime":499162500000,"results":"50","hashOfConfig":"51"},{"size":10674,"mtime":1620461832116,"results":"52","hashOfConfig":"51"},{"size":362,"mtime":499162500000,"results":"53","hashOfConfig":"51"},{"size":75,"mtime":1615994238875,"results":"54","hashOfConfig":"51"},{"size":412,"mtime":1619602068536,"results":"55","hashOfConfig":"51"},{"size":8132,"mtime":1620383065534,"results":"56","hashOfConfig":"51"},{"size":7667,"mtime":1620110958984,"results":"57","hashOfConfig":"51"},{"size":821,"mtime":1620029502955,"results":"58","hashOfConfig":"51"},{"size":2266,"mtime":1620989296171,"results":"59","hashOfConfig":"51"},{"size":2771,"mtime":1620068586052,"results":"60","hashOfConfig":"51"},{"size":4832,"mtime":1620460834675,"results":"61","hashOfConfig":"51"},{"size":221,"mtime":1615994266711,"results":"62","hashOfConfig":"51"},{"size":727,"mtime":1616519026276,"results":"63","hashOfConfig":"51"},{"size":8299,"mtime":1620462167250,"results":"64","hashOfConfig":"51"},{"size":521,"mtime":1616432590340,"results":"65","hashOfConfig":"51"},{"size":129,"mtime":1616519420331,"results":"66","hashOfConfig":"51"},{"size":10238,"mtime":1620991154387,"results":"67","hashOfConfig":"51"},{"size":454,"mtime":1616529999563,"results":"68","hashOfConfig":"51"},{"size":1753,"mtime":1616608406112,"results":"69","hashOfConfig":"51"},{"size":4102,"mtime":1619785901609,"results":"70","hashOfConfig":"51"},{"size":4133,"mtime":1620990723517,"results":"71","hashOfConfig":"51"},{"size":474,"mtime":1617280691974,"results":"72","hashOfConfig":"51"},{"size":7245,"mtime":1620407586880,"results":"73","hashOfConfig":"51"},{"size":4438,"mtime":1620115533899,"results":"74","hashOfConfig":"51"},{"size":5013,"mtime":1617994285967,"results":"75","hashOfConfig":"51"},{"size":8034,"mtime":1620135693895,"results":"76","hashOfConfig":"51"},{"size":5510,"mtime":1620136385382,"results":"77","hashOfConfig":"51"},{"size":2459,"mtime":1620136632720,"results":"78","hashOfConfig":"51"},{"size":2431,"mtime":1620137394594,"results":"79","hashOfConfig":"51"},{"size":12987,"mtime":1620463163588,"results":"80","hashOfConfig":"51"},{"size":18528,"mtime":1618251430909,"results":"81","hashOfConfig":"51"},{"size":12267,"mtime":1618330062135,"results":"82","hashOfConfig":"51"},{"size":4633,"mtime":1618243855177,"results":"83","hashOfConfig":"51"},{"size":4694,"mtime":1618243867769,"results":"84","hashOfConfig":"51"},{"size":7995,"mtime":1620914281918,"results":"85","hashOfConfig":"51"},{"size":2836,"mtime":1620139417051,"results":"86","hashOfConfig":"51"},{"size":3857,"mtime":1618648485654,"results":"87","hashOfConfig":"51"},{"size":15030,"mtime":1620461054061,"results":"88","hashOfConfig":"51"},{"size":3641,"mtime":1620152802474,"results":"89","hashOfConfig":"51"},{"size":4302,"mtime":1620153990074,"results":"90","hashOfConfig":"51"},{"size":2240,"mtime":1620207059846,"results":"91","hashOfConfig":"51"},{"size":4369,"mtime":1620200661153,"results":"92","hashOfConfig":"51"},{"size":4954,"mtime":1620235464034,"results":"93","hashOfConfig":"51"},{"size":2188,"mtime":1620234946866,"results":"94","hashOfConfig":"51"},{"size":4152,"mtime":1620287549181,"results":"95","hashOfConfig":"51"},{"size":5683,"mtime":1620996188766,"results":"96","hashOfConfig":"51"},{"size":2359,"mtime":1620389572364,"results":"97","hashOfConfig":"51"},{"size":2613,"mtime":1620407546984,"results":"98","hashOfConfig":"51"},{"size":4571,"mtime":1620493560264,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"1bzdmfn",{"filePath":"103","messages":"104","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"102"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"102"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"102"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"102"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"102"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"102"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"102"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"102"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"136"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"136"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"102"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"102"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"102"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"102"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"102"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"102"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"102"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"102"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"102"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"102"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"102"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"102"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"102"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"102"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"102"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"102"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"102"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"102"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"102"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"102"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"102"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"102"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"102"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"102"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"102"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"102"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"102"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"102"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"232","messages":"233","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"102"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"102"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"102"},"C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\index.js",[],["241","242"],"C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\App.js",["243","244","245","246","247"],"import React, {useState, useEffect,useContext } from 'react';\nimport { BrowserRouter, Switch, Route,useHistory,useParams  } from 'react-router-dom';\nimport axios from 'axios';\nimport Header from './components/layout/Header';\nimport Home from './components/pages/Home';\nimport Register from './components/auth/Register';\nimport RegisterMedic from './components/auth/RegisterMedic';\nimport Login from './components/auth/Login';\nimport CrearConsulta from './components/consultas/CrearConsulta';\nimport EditarConsulta from './components/consultas/EditarConsulta';\nimport CrearMensaje from './components/mensajes/CrearMensaje';\nimport Citas from './components/citas/Citas';\nimport Informes from './components/informes/Informes'\nimport CrearCita from './components/citas/CrearCita';\nimport CrearCitaPcr from './components/citas/CrearCitaPcr'\nimport CrearInformeSangre from './components/informes/CrearInformeSangre';\nimport CrearInformeOrina from './components/informes/CrearInformeOrina';\nimport CrearInformePrueba from './components/informes/CrearInformePrueba';\nimport CrearInformePresencial from './components/informes/CrearInformePresencial';\nimport CrearInformePcr from './components/informes/CrearInformePcr';\nimport EditarCita from './components/citas/EditarCita';\nimport EditarInformeSangre from './components/informes/EditarInformeSangre';\nimport EditarInformeOrina from './components/informes/EditarInformeOrina';\nimport EditarInformePrueba from './components/informes/EditarInformePrueba';\nimport EditarInformePresencial from './components/informes/EditarInformePresencial';\nimport Enfermedades from './components/enfermedades/Enfermedades';\nimport CrearEnfermedad from './components/enfermedades/CrearEnfermedad'\nimport EditarEnfermedad from './components/enfermedades/EditarEnfermedad'\nimport Mensaje from './components/mensajes/Mensaje';\nimport Consulta from './components/consultas/Consulta';\nimport NoPerm from './components/pages/NoPermisos';\nimport MiPerfil from './components/perfil/MiPerfil';\nimport MisPacientes from './components/pacientes/MisPacientes';\nimport CrearTratamientoMedicacion from './components/tratamientos/CrearTratamientoMedicacion';\nimport CrearTratamientoRehabilitacion from './components/tratamientos/CrearTratamientoRehabilitacion';\nimport TratamientoMedicacion from './components/tratamientos/TratamientoMedicacion'\nimport TratamientoRehabilitacion from './components/tratamientos/TratamientoRehabilitacion'\nimport RegistrosTension from './components/registrosTension/RegistrosTension'\nimport RegistrarTension from './components/registrosTension/RegistrarTension'\nimport Covid19 from './components/covid19/Covid19'\nimport RegistrarCovid19 from './components/covid19/RegistrarCovid19'\nimport UserContext from './context/userContext';\nimport './App.css';\nfunction App() {\nconst [ userData, setUserData] = useState({\ntoken: undefined,\nuser: undefined\n});\nuseEffect(() => {\nconst checkLoggedIn = async () => {\nlet token = localStorage.getItem(\"auth-token\");\nif(token === null){\nlocalStorage.setItem(\"auth-token\", \"\");\ntoken = \"\";\n}\nconst tokenResponse = await axios.post('http://localhost:5000/users/tokenIsValid', null, {headers: {\"x-auth-token\": token}});\nif (tokenResponse.data) {\nconst userRes = await axios.get(\"http://localhost:5000/users/\", {\nheaders: { \"x-auth-token\": token },\n});\nsetUserData({\ntoken,\nuser: userRes.data,\n});\n}\n}\ncheckLoggedIn();\n}, []);\n\nif(userData.user && userData.user.rol==\"Paciente\"){\nreturn (\n    <BrowserRouter>\n    <UserContext.Provider value={{ userData, setUserData }}>\n    <Header/>\n    <Switch>\n    <Route exact path=\"/\" component={Home} />\n    <Route path=\"/register\" component={Register} />\n    <Route path=\"/registerMedic\" component={RegisterMedic} />\n    <Route exact path=\"/:id/consultas\" component={(props)=><Consulta {...props} userData={userData.user}/>} />\n    <Route path=\"/:idUser/consultas/:id/edit\" component={(props)=><EditarConsulta {...props} userData={userData.user}/>}/>\n    <Route exact path=\"/:id/medico/:idMedico/mensajes\" component={Mensaje} />\n    <Route exact path=\"/crearConsulta\" component={CrearConsulta} />\n    <Route exact path=\"/crearMensaje\" component={CrearMensaje} />\n    <Route path=\"/:idUser/citas/:id/edit\" component={(props)=><EditarCita {...props} userData={userData.user}/>}/>\n    <Route exact path=\"/:id/informes\" component={(props)=><Informes {...props} userData={userData.user}/>} />\n    <Route exact path=\"/:id/citas\" component={(props)=><Citas {...props} userData={userData.user}/>} />\n    <Route exact path=\"/:id\" component={(props)=><MiPerfil {...props} userData={userData.user}/>} />\n    <Route exact path=\"/:id/medico/:idMedico/crearCita\" component={CrearCita} />\n    <Route path=\"/login\" component={Login} />\n    <Route exact path=\"/:id/enfermedades\" component={(props)=><Enfermedades {...props} userData={userData.user}/>} />\n    <Route exact path=\"/:id/enfermedades/:idEnfermedad/tratamientoMedicacion\" component={(props)=><TratamientoMedicacion {...props} userData={userData.user}/>} />\n    <Route exact path=\"/:id/enfermedades/:idEnfermedad/tratamientoRehabilitacion\" component={(props)=><TratamientoRehabilitacion {...props} userData={userData.user}/>} />\n    <Route exact path=\"/:id/registrosTension\" component={(props)=><RegistrosTension {...props} userData={userData.user}/>} />\n    <Route exact path=\"/:id/registrarTension\" component={RegistrarTension} />\n    <Route exact path=\"/:id/covid19\" component={(props)=><Covid19 {...props} userData={userData.user}/>} />\n    <Route exact path=\"/:id/covid19/crearRegistroCovid\" component={RegistrarCovid19} />\n    <Route path=\"/error\" component={NoPerm} />\n    </Switch>\n    </UserContext.Provider>\n    </BrowserRouter>\n    );\n}else if(userData.user && userData.user.rol==\"Médico\"){\n    return (\n        <BrowserRouter>\n        <UserContext.Provider value={{ userData, setUserData }}>\n        <Header />\n        <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/register\" component={Register} />\n        <Route path=\"/registerMedic\" component={RegisterMedic} />\n        <Route exact path=\"/:id/consultas\" component={(props)=><Consulta {...props} userData={userData.user}/>} />\n        <Route path=\"/:idUser/consultas/:id/edit\" component={(props)=><EditarConsulta {...props} userData={userData.user}/>}/>\n        <Route exact path=\"/:id/mensajes\" component={Mensaje} />\n        <Route exact path=\"/crearConsulta\" component={CrearConsulta} />\n        <Route exact path=\"/crearMensaje\" component={CrearMensaje} />\n        <Route path=\"/:idUser/citas/:id/edit\" component={(props)=><EditarCita {...props} userData={userData.user}/>}/>\n        <Route exact path=\"/:id/citas\" component={(props)=><Citas {...props} userData={userData.user}/>} />\n        <Route exact path=\"/:id/informes\" component={(props)=><Informes {...props} userData={userData.user}/>} />\n        <Route exact path=\"/:id/medico/:idPaciente/crearCita\" component={CrearCita} />\n        <Route path=\"/:idUser/citas/:id/:tipoCita/:tipoAnalisis/crearInformeSangre\" component={(props)=><CrearInformeSangre {...props} userData={userData.user}/>}/>\n        <Route path=\"/:idUser/citas/:id/:tipoCita/:tipoAnalisis/crearInformeOrina\" component={(props)=><CrearInformeOrina{...props} userData={userData.user}/>}/>\n        <Route path=\"/:idUser/citas/:id/:tipoCita/crearInformePrueba\" component={(props)=><CrearInformePrueba{...props} userData={userData.user}/>}/>\n        <Route path=\"/:idUser/citas/:id/:tipoCita/crearInformePresencial\" component={(props)=><CrearInformePresencial {...props} userData={userData.user}/>}/>\n        <Route path=\"/:idUser/informesSangre/:id/edit\" component={(props)=><EditarInformeSangre {...props} userData={userData.user}/>}/>\n        <Route path=\"/:idUser/informesOrina/:id/edit\" component={(props)=><EditarInformeOrina{...props} userData={userData.user}/>}/>\n        <Route path=\"/:idUser/informesPrueba/:id/edit\" component={(props)=><EditarInformePrueba{...props} userData={userData.user}/>}/>\n        <Route path=\"/:idUser/informesPresencial/:id/edit\" component={(props)=><EditarInformePresencial {...props} userData={userData.user}/>}/>\n        <Route exact path=\"/:id/enfermedades\" component={(props)=><Enfermedades {...props} userData={userData.user}/>} />\n        <Route exact path=\"/:id/enfermedades/crearEnfermedad\" component={CrearEnfermedad} />\n        <Route exact path=\"/:id/enfermedades/:idEnfermedad/edit\" component={(props)=><EditarEnfermedad {...props} userData={userData.user}/>}/>\n        <Route exact path=\"/:id/enfermedades/:idEnfermedad/crearTratamientoMedicacion\" component={CrearTratamientoMedicacion} />\n        <Route exact path=\"/:id/enfermedades/:idEnfermedad/crearTratamientoRehabilitacion\" component={CrearTratamientoRehabilitacion} />\n        <Route exact path=\"/:id/enfermedades/:idEnfermedad/tratamientoMedicacion\" component={(props)=><TratamientoMedicacion {...props} userData={userData.user}/>} />\n        <Route exact path=\"/:id/enfermedades/:idEnfermedad/tratamientoRehabilitacion\" component={(props)=><TratamientoRehabilitacion {...props} userData={userData.user}/>} />\n        <Route exact path=\"/:id/covid19\" component={(props)=><Covid19 {...props} userData={userData.user}/>} />\n        <Route exact path=\"/:id/covid19/:idRegistro/crearCitaPCR\" component={CrearCitaPcr} />\n        <Route exact path=\"/:idPaciente/citas/:idCita/PCR/crearInformePCR\" component={CrearInformePcr} />\n        <Route exact path=\"/:id\" component={(props)=><MiPerfil {...props} userData={userData.user}/>} />\n        <Route exact path=\"/:id/misPacientes\" component={(props)=><MisPacientes {...props} userData={userData.user}/>} />\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/error\" component={NoPerm} />\n        </Switch>\n        </UserContext.Provider>\n        </BrowserRouter>\n        );\n}else{\nreturn (\n    <BrowserRouter>\n    <UserContext.Provider value={{ userData, setUserData }}>\n    <Header />\n    <Switch>\n    <Route exact path=\"/\" component={Home} />\n    <Route path=\"/register\" component={Register} />\n    <Route path=\"/registerMedic\" component={RegisterMedic} />\n    <Route exact path=\"/consultas\" component={Login} />\n    <Route path=\"/:id/edit\" component={NoPerm}/>\n    <Route exact path=\"/citas\" component={Login} />\n    <Route exact path=\"/mensajes\" component={Login} />\n    <Route exact path=\"/crearConsulta\" component={Login} />\n    <Route exact path=\"/crearMensaje\" component={Login} />\n    <Route path=\"/login\" component={Login} />\n    </Switch>\n    </UserContext.Provider>\n    </BrowserRouter>\n    );\n}\n}\n\nfunction Usuario(){\n    const { userData } = useContext(UserContext);\n    return userData;\n}\nexport default App;","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\context\\userContext.js",[],"C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\layout\\Header.js",["248"],"import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport AuthOptions from '../auth/AuthOptions';\r\nimport Logo from './Logo';\r\nclass Header extends Component {\r\nrender() {\r\nreturn (\r\n<div style={{\r\n    display:\"flex\",\r\n}}>\r\n<header className=\"header\">\r\n<Link to=\"/\"><h1 className=\"title\">MedicaMern</h1></Link>\r\n<AuthOptions />\r\n</header>\r\n</div>\r\n);\r\n}\r\n}\r\nexport default Header;","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\auth\\RegisterMedic.jsx",["249","250","251","252","253"],"import React, { useState, useContext } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport UserContext from \"../../context/userContext\";\r\nimport ErrorNotice from \"../misc/ErrorNotice\";\r\nimport Select from 'react-select';\r\nimport Async from 'react-async';\r\nimport FileBase from 'react-file-base64';\r\nimport api from '../../api'\r\nfunction Register () {\r\nconst [email, setEmail] = useState();\r\nconst [password, setPassword] = useState();\r\nconst [passwordCheck, setPasswordCheck] = useState();\r\nconst [nickname, setNickname] = useState();\r\nconst rol = \"Médico\";\r\nconst [nombre, setNombre] = useState();\r\nconst [apellidos, setApellidos] = useState();\r\nconst [fechaNacimiento, setFechaNacimiento] = useState();\r\nconst [dni, setDni] = useState();\r\nconst [sexo, setSexo] = useState();\r\nconst [direccion, setDireccion] = useState();\r\nconst [ciudad, setCiudad] = useState();\r\nconst [centroMedico, setCentroMedico] = useState();\r\nconst [localidad, setLocalidad] = useState();\r\nconst[aux,setAux]=useState();\r\nconst [cp, setCp] = useState();\r\nconst [telefono, setTelefono] = useState();\r\nconst [imgPerfil, setImgPerfil] = useState();\r\nconst [sector, setSector] = useState();\r\nconst [error, setError] = useState();\r\nconst history = useHistory();\r\nconst onChange = async (selectedOption) => {\r\n\r\n    console.log(`Option selected:`, selectedOption);\r\n    setSector(selectedOption.val);\r\n  };\r\n\r\n  const onChange2 = async (selectedOption) => {\r\n\r\n    console.log(`Option selected:`, selectedOption);\r\n    setCentroMedico(selectedOption.val);\r\n    \r\n    \r\n    };\r\n\r\n    const onChange3 = async (selectedOption) => {\r\n\r\n      console.log(`Option selected:`, selectedOption);\r\n      setCiudad(selectedOption.val);\r\n      setAux(selectedOption.desc)\r\n      \r\n    };\r\nconst submit = async (e) => {\r\ne.preventDefault();\r\ntry{\r\nconst newUser = {email, password, passwordCheck, nickname,rol, nombre, apellidos, fechaNacimiento, dni, sexo, direccion, ciudad, localidad, cp, telefono,sector,centroMedico,imgPerfil};\r\nawait axios.post(\"http://localhost:5000/medics/register\", newUser);\r\n// const loginResponse = await axios.post(\"http://localhost:5000/users/login\", {\r\n// email, password\r\n// });\r\n// setUserData({\r\n// token: loginResponse.data.token,\r\n// user: loginResponse.data.user\r\n// });\r\n// localStorage.setItem(\"auth-token\", loginResponse.data.token);\r\nhistory.push(\"/\");\r\n} catch(err) {\r\nerr.response.data.msg && setError(err.response.data.msg)\r\n}\r\n};\r\nconst sacaSector = () =>\r\napi.getSector()\r\n.then(res => {return res})\r\n\r\nconst sacaProvincia = () =>\r\n    api.getProvincias()\r\n    .then(res => {return res})\r\n\r\nconst sacaCentroMedico = () =>\r\napi.getHospitales(aux)\r\n.then(res => {return res})\r\nreturn (\r\n<div className=\"form-horizontal\">\r\n<h2>Registrar médico:</h2>\r\n{error && <ErrorNotice message={error} clearError={() => setError(undefined)} />}\r\n<form onSubmit={submit}>\r\n<div class=\"input\">\r\n<div class=\"registerAux\">\r\n<div class=\"inputBox\">\r\n<label>Nombre: </label><br></br>\r\n<input type=\"text\" id=\"nombre\" onChange={e => setNombre(e.target.value)}/><br></br>\r\n</div>\r\n<div class=\"inputBox\">\r\n<label>Apellidos: </label><br></br>\r\n<input type=\"text\" id=\"apellidos\" onChange={e => setApellidos(e.target.value)}/><br></br>\r\n</div>\r\n</div>\r\n<div class=\"registerAux\">\r\n<div class=\"inputBox\">\r\n<label>Nombre de usuario: </label><br></br>\r\n<input type=\"text\" id=\"nickname\" onChange={e => setNickname(e.target.value)}/><br></br>\r\n</div>\r\n<div class=\"inputBox\">\r\n<label>Correo electrónico: </label><br></br>\r\n<input type=\"email\" id=\"email\" onChange={e => setEmail(e.target.value)}/><br></br>\r\n</div>\r\n</div>\r\n<div class=\"registerAux\">\r\n<div class=\"inputBox\">\r\n<label>Contraseña: </label><br></br>\r\n<input type=\"password\" id=\"password\" onChange={e => setPassword(e.target.value)}/><br></br>\r\n</div>\r\n<div class=\"inputBox\">\r\n<label>Confirma contraseña: </label><br></br>\r\n<input type=\"password\" placeholder=\"Confirma la contraseña\" onChange={e => setPasswordCheck(e.target.value)}/><br></br>\r\n</div>\r\n</div>\r\n<div class=\"registerAux\">\r\n<div class=\"inputBox\">\r\n<label>Sexo: </label><br></br>\r\n<input type=\"text\" id=\"sexo\" onChange={e => setSexo(e.target.value)}/><br></br>\r\n</div>\r\n<div class=\"inputBox\">\r\n<label>Fecha Nacimiento: </label><br></br>\r\n<input type=\"date\" id=\"fechaNacimiento\" onChange={e => setFechaNacimiento(e.target.value)}/><br></br>\r\n</div>\r\n</div>\r\n<div class=\"registerAux\">\r\n<div class=\"inputBox\">\r\n<label>Dni: </label><br></br>\r\n<input type=\"text\" id=\"dni\" onChange={e => setDni(e.target.value)}/><br></br>\r\n</div>\r\n<div class=\"inputBox\">\r\n<label>Sector </label><br></br>\r\n<Async promiseFn={sacaSector}>\r\n\r\n{({ data, err }) => {\r\n          if (err) return `Something went wrong: ${err.message}`\r\n\r\n          if (data){\r\n\r\n            const selectSector = [];\r\n            data.data.data.map((sector) => { selectSector.push({ desc:sector, val: sector  })});\r\n\r\n            return (\r\n                <Select options={selectSector} getOptionLabel={(option)=>option.desc}\r\n                getOptionValue={(option)=>option.val } id=\"selectSector\" placeholder=\"Selecciona un sector\" onChange={onChange} ></Select>\r\n                \r\n            )}\r\n        }}\r\n</Async><br></br>\r\n</div>\r\n</div>\r\n<div class=\"registerAux\">\r\n<div class=\"inputBox\">\r\n<label>Ciudad: </label><br></br>\r\n<Async promiseFn={sacaProvincia}>\r\n\r\n{({ data, err }) => {\r\n        if (err) return `Something went wrong: ${err.message}`\r\n\r\n        if (data){\r\n\r\n            const selectProvincia = [];\r\n            data.data.data.map((provincia) => { selectProvincia.push({ desc:provincia.provincia, val: provincia._id  })});\r\n\r\n            return (\r\n                <Select\r\n                options={selectProvincia} getOptionLabel={(option)=>option.desc}\r\n                getOptionValue={(option)=>option.val } id=\"selectProvincia\" placeholder=\"Selecciona una provincia\" onChange={onChange3} ></Select>\r\n                \r\n            )}\r\n        }}\r\n</Async>\r\n</div>\r\n<div class=\"inputBox\">\r\n    <CentroMedico centroMedico={sacaCentroMedico} cambia={onChange2} ciudad={ciudad}/>\r\n    </div>\r\n</div>\r\n<div class=\"registerAux\">\r\n<div class=\"inputBox\">\r\n<label>Localidad: </label><br></br>\r\n<input type=\"text\" id=\"localidad\" onChange={e => setLocalidad(e.target.value)}/><br></br>\r\n</div>\r\n<div class=\"inputBox\">\r\n<label>Código Postal: </label><br></br>\r\n<input type=\"text\" id=\"cp\" onChange={e => setCp(e.target.value)}/><br></br>\r\n</div>\r\n</div>\r\n<div class=\"registerAux\">\r\n<div class=\"inputBox\">\r\n<label>Dirección: </label><br></br>\r\n<input type=\"text\" id=\"direccion\" onChange={e => setDireccion(e.target.value)}/><br></br>\r\n</div>\r\n<div class=\"inputBox\">\r\n<label>Teléfono: </label><br></br>\r\n<input type=\"text\" id=\"telefono\" onChange={e => setTelefono(e.target.value)}/><br></br>\r\n</div>\r\n</div>\r\n<div id=\"subidaFoto\" class=\"inputBox\">\r\n<label>Imagen de perfil: </label><br></br>\r\n<FileBase type=\"file\" multiple={false} onDone={({ base64 }) => setImgPerfil(base64)} /><br></br>\r\n{/* <input type=\"text\" id=\"imgPerfil\" onChange={e => setImgPerfil(e.target.value)}/><br></br> */}\r\n</div>\r\n<br></br>\r\n<div id=\"registrarPac\" class=\"inputBox\">\r\n<input type=\"submit\" value=\"Registrar\" className=\"registrar\" />\r\n</div>\r\n</div>\r\n</form>\r\n</div>\r\n);\r\n}\r\n\r\nfunction CentroMedico(props){\r\n  return(\r\n<div>\r\n<label>Centro médico: </label><br></br>\r\n<Async promiseFn={props.centroMedico}>\r\n  \r\n\r\n{({ data, err }) => {\r\n      if (err) return `Something went wrong: ${err.message}`\r\n\r\n      if (data){\r\n\r\n          const selectCentroMedico = [];\r\n          data.data.data.map((centroMedico) => { selectCentroMedico.push({ desc:centroMedico.nombre, val: centroMedico._id  })});\r\n\r\n          return (\r\n              <Select \r\n              noOptionsMessage={() => 'Debes seleccionar una provincia'} \r\n              options={selectCentroMedico} getOptionLabel={(option)=>option.desc}\r\n              getOptionValue={(option)=>option.val } id=\"selectCentroMedico\" placeholder=\"Selecciona un centro médico\" onChange={props.cambia} ></Select>\r\n              \r\n          )}\r\n      }}\r\n</Async>\r\n</div>);\r\n  }\r\n\r\nexport default Register;","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\auth\\Register.jsx",["254","255","256"],"import React, { useState, useContext } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport ErrorNotice from \"../../components/misc/ErrorNotice\";\r\nimport FileBase from 'react-file-base64';\r\nimport api from '../../api'\r\nimport Select from 'react-select';\r\nimport Async from 'react-async';\r\nfunction Register () {\r\nconst [email, setEmail] = useState();\r\nconst [password, setPassword] = useState();\r\nconst [passwordCheck, setPasswordCheck] = useState();\r\nconst [nickname, setNickname] = useState();\r\nconst rol = \"Paciente\";\r\nconst [nombre, setNombre] = useState();\r\nconst [apellidos, setApellidos] = useState();\r\nconst [fechaNacimiento, setFechaNacimiento] = useState();\r\nconst [dni, setDni] = useState();\r\nconst [sexo, setSexo] = useState();\r\nconst [numSeguridadSocial, setNumSeguridadSocial] = useState();\r\nconst [direccion, setDireccion] = useState();\r\nconst [ciudad, setCiudad] = useState();\r\nconst [centroMedico, setCentroMedico] = useState();\r\nconst [localidad, setLocalidad] = useState();\r\nconst[aux,setAux]=useState();\r\nconst [cp, setCp] = useState();\r\nconst [telefono, setTelefono] = useState();\r\nconst [imgPerfil, setImgPerfil] = useState();\r\nconst [error, setError] = useState();\r\nconst history = useHistory();\r\nconst onChange = async (selectedOption) => {\r\n\r\n    console.log(`Option selected:`, selectedOption);\r\n    setCiudad(selectedOption.val);\r\n    setAux(selectedOption.desc)\r\n    \r\n  };\r\n\r\n  const onChange2 = async (selectedOption) => {\r\n\r\n    console.log(`Option selected:`, selectedOption);\r\n    setCentroMedico(selectedOption.val);\r\n    \r\n    \r\n    };\r\nconst submit = async (e) => {\r\ne.preventDefault();\r\ntry{\r\nconst med = await api.getMedicosFamilia()\r\nconst med2 = med.data.data;\r\nconst values = Object.values(med2)\r\nconst randomValue = values[parseInt(Math.random() * values.length)]\r\nconst medico = randomValue._id;\r\nconst newUser = {email, password, passwordCheck, nickname,rol, nombre, apellidos, fechaNacimiento, dni, sexo, numSeguridadSocial, direccion, ciudad, localidad, cp, telefono,imgPerfil,medico,centroMedico};\r\nawait axios.post(\"http://localhost:5000/users/register\", newUser);\r\n// const loginResponse = await axios.post(\"http://localhost:5000/users/login\", {\r\n// email, password\r\n// });\r\n// setUserData({\r\n// token: loginResponse.data.token,\r\n// user: loginResponse.data.user\r\n// });\r\n// localStorage.setItem(\"auth-token\", loginResponse.data.token);\r\nhistory.push(\"/\");\r\n} catch(err) {\r\nerr.response.data.msg && setError(err.response.data.msg)\r\n}\r\n};\r\nconst sacaProvincia = () =>\r\n    api.getProvincias()\r\n    .then(res => {return res})\r\n\r\nconst sacaCentroMedico = () =>\r\napi.getHospitales(aux)\r\n.then(res => {return res})\r\nreturn (\r\n<div className=\"form-horizontal\">\r\n<h2>Registrar paciente:</h2>\r\n{error && <ErrorNotice message={error} clearError={() => setError(undefined)} />}\r\n<form onSubmit={submit}>\r\n<div class=\"input\">\r\n<div class=\"registerAux\">\r\n<div class=\"inputBox\">\r\n<label>Nombre: </label><br></br>\r\n<input type=\"text\" id=\"nombre\" onChange={e => setNombre(e.target.value)}/><br></br>\r\n</div>\r\n<div class=\"inputBox\">\r\n<label>Apellidos: </label><br></br>\r\n<input type=\"text\" id=\"apellidos\" onChange={e => setApellidos(e.target.value)}/><br></br>\r\n</div>\r\n</div>\r\n<div class=\"registerAux\">\r\n<div class=\"inputBox\">\r\n<label>Nombre de usuario: </label><br></br>\r\n<input type=\"text\" id=\"nickname\" onChange={e => setNickname(e.target.value)}/><br></br>\r\n</div>\r\n<div class=\"inputBox\">\r\n<label>Correo electrónico: </label><br></br>\r\n<input type=\"email\" id=\"email\" onChange={e => setEmail(e.target.value)}/><br></br>\r\n</div>\r\n</div>\r\n<div class=\"registerAux\">\r\n<div class=\"inputBox\">\r\n<label>Contraseña: </label><br></br>\r\n<input type=\"password\" id=\"password\" onChange={e => setPassword(e.target.value)}/><br></br>\r\n</div>\r\n<div class=\"inputBox\">\r\n<label>Confirma contraseña: </label><br></br>\r\n<input type=\"password\" placeholder=\"Confirma la contraseña\" onChange={e => setPasswordCheck(e.target.value)}/><br></br>\r\n</div>\r\n</div>\r\n<div class=\"registerAux\">\r\n<div class=\"inputBox\">\r\n<label>Sexo: </label><br></br>\r\n<input type=\"text\" id=\"sexo\" onChange={e => setSexo(e.target.value)}/><br></br>\r\n</div>\r\n<div class=\"inputBox\">\r\n<label>Fecha Nacimiento: </label><br></br>\r\n<input type=\"date\" id=\"fechaNacimiento\" onChange={e => setFechaNacimiento(e.target.value)}/><br></br>\r\n</div>\r\n</div>\r\n<div class=\"registerAux\">\r\n<div class=\"inputBox\">\r\n<label>Dni: </label><br></br>\r\n<input type=\"text\" id=\"dni\" onChange={e => setDni(e.target.value)}/><br></br>\r\n</div>\r\n<div class=\"inputBox\">\r\n<label>Número seguridad social: </label><br></br>\r\n<input type=\"text\" id=\"numSeguridadSocial\" onChange={e => setNumSeguridadSocial(e.target.value)}/><br></br>\r\n</div>\r\n</div>\r\n<div class=\"registerAux\">\r\n<div class=\"inputBox\">\r\n<label>Ciudad: </label><br></br>\r\n<Async promiseFn={sacaProvincia}>\r\n\r\n{({ data, err }) => {\r\n        if (err) return `Something went wrong: ${err.message}`\r\n\r\n        if (data){\r\n\r\n            const selectProvincia = [];\r\n            data.data.data.map((provincia) => { selectProvincia.push({ desc:provincia.provincia, val: provincia._id  })});\r\n\r\n            return (\r\n                <Select\r\n                options={selectProvincia} getOptionLabel={(option)=>option.desc}\r\n                getOptionValue={(option)=>option.val } id=\"selectProvincia\" placeholder=\"Selecciona una provincia\" onChange={onChange} ></Select>\r\n                \r\n            )}\r\n        }}\r\n</Async>\r\n</div>\r\n<div class=\"inputBox\">\r\n    <CentroMedico centroMedico={sacaCentroMedico} cambia={onChange2} ciudad={ciudad}/>\r\n    </div>\r\n</div>\r\n<div class=\"registerAux\">\r\n<div class=\"inputBox\">\r\n<label>Localidad: </label><br></br>\r\n<input type=\"text\" id=\"localidad\" onChange={e => setLocalidad(e.target.value)}/><br></br>\r\n</div>\r\n<div class=\"inputBox\">\r\n<label>Código Postal: </label><br></br>\r\n<input type=\"text\" id=\"cp\" onChange={e => setCp(e.target.value)}/><br></br>\r\n</div>\r\n</div>\r\n<div class=\"registerAux\">\r\n<div class=\"inputBox\">\r\n<label>Dirección: </label><br></br>\r\n<input type=\"text\" id=\"direccion\" onChange={e => setDireccion(e.target.value)}/><br></br>\r\n</div>\r\n<div class=\"inputBox\">\r\n<label>Teléfono: </label><br></br>\r\n<input type=\"text\" id=\"telefono\" onChange={e => setTelefono(e.target.value)}/><br></br>\r\n</div>\r\n</div>\r\n<div id=\"subidaFoto\" class=\"inputBox\">\r\n<label>Imagen de perfil: </label><br></br>\r\n<FileBase type=\"file\" multiple={false} onDone={({ base64 }) => setImgPerfil(base64)} /><br></br>\r\n{/* <input type=\"text\" id=\"imgPerfil\" onChange={e => setImgPerfil(e.target.value)}/><br></br> */}\r\n</div>\r\n<br></br>\r\n<div id=\"registrarPac\" class=\"inputBox\">\r\n<input type=\"submit\" value=\"Registrar\" className=\"registrar\" />\r\n</div>\r\n</div>\r\n</form>\r\n</div>\r\n);\r\n}\r\n\r\nfunction CentroMedico(props){\r\n    return(\r\n<div>\r\n<label>Centro médico: </label><br></br>\r\n<Async promiseFn={props.centroMedico}>\r\n    \r\n\r\n{({ data, err }) => {\r\n        if (err) return `Something went wrong: ${err.message}`\r\n\r\n        if (data){\r\n\r\n            const selectCentroMedico = [];\r\n            data.data.data.map((centroMedico) => { selectCentroMedico.push({ desc:centroMedico.nombre, val: centroMedico._id  })});\r\n\r\n            return (\r\n                <Select \r\n                noOptionsMessage={() => 'Debes seleccionar una provincia'} \r\n                options={selectCentroMedico} getOptionLabel={(option)=>option.desc}\r\n                getOptionValue={(option)=>option.val } id=\"selectCentroMedico\" placeholder=\"Selecciona un centro médico\" onChange={props.cambia} ></Select>\r\n                \r\n            )}\r\n        }}\r\n</Async>\r\n</div>);\r\n    }\r\nexport default Register;","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\pages\\Home.jsx",["257","258","259","260"],"import React, { useEffect, useContext } from 'react';\r\nimport { useHistory, Link } from 'react-router-dom';\r\nimport UserContext from '../../context/userContext';\r\nimport Background from '../logo/medicina.png';\r\nfunction Home () {\r\nconst {userData} = useContext(UserContext);\r\nconst history = useHistory();\r\n\r\nreturn (\r\n<div style={{\r\n                background: `url(${Background})`,\r\n                position: \"absolute\",\r\n                top: 0,\r\n                left: 0,\r\n                width: \"100%\",\r\n                height: \"100%\",\r\n                backgroundSize: \"cover\",\r\n                // backgroundPosition: center center;\r\n                // background-repeat: no-repeat;\r\n                // background-size: cover;\r\n                // overflow: hidden;\r\n            }}>\r\n</div>\r\n);\r\n}\r\nexport default Home;","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\auth\\Login.jsx",["261","262"],"import React, { useState, useContext } from 'react';\r\nimport { useHistory,Redirect } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport UserContext from \"../../context/userContext\";\r\nimport ErrorNotice from \"../../components/misc/ErrorNotice\";\r\nfunction Login () {\r\nconst [email, setEmail] = useState();\r\nconst [password, setPassword] = useState();\r\nconst [error, setError] = useState();\r\nconst { userData,setUserData } = useContext(UserContext);\r\nconst history = useHistory();\r\nconst submit = async (e) => {\r\ne.preventDefault();\r\ntry{\r\nconst loginUser = {email, password};\r\nconst loginResponse = await axios.post(\"http://localhost:5000/users/login\", loginUser);\r\nsetUserData({\r\ntoken: loginResponse.data.token,\r\nuser: loginResponse.data.user\r\n});\r\nlocalStorage.setItem(\"auth-token\", loginResponse.data.token);\r\nhistory.push(\"/\");\r\n} catch(err) {\r\nerr.response.data.msg && setError(err.response.data.msg)\r\n}\r\n};\r\nreturn (\r\n    <div class=\"form\">\r\n        <h2 class=\"loginh2\">Iniciar sesión</h2>\r\n        {error && <ErrorNotice message={error} clearError={() => setError(undefined)} />}\r\n        <form onSubmit={submit}>\r\n        <div class=\"input\">\r\n            <div class=\"inputBox\">\r\n                <label>Email</label>\r\n                <input type=\"email\" id=\"email\" onChange={e => setEmail(e.target.value)}/>\r\n            </div>\r\n            <div class=\"inputBox\">\r\n            <label>Contraseña</label>\r\n            <input type=\"password\" id=\"password\" onChange={e => setPassword(e.target.value)}/>\r\n            </div>\r\n            <div class=\"inputBox\">\r\n            <input type=\"submit\" value=\"Iniciar sesión\" className=\"btn btn-primary\" />\r\n            </div>\r\n        </div>\r\n        </form>\r\n    </div>\r\n\r\n        \r\n    /* <div className=\"login\">\r\n    <h2>Login</h2>\r\n    {error && <ErrorNotice message={error} clearError={() => setError(undefined)} />}\r\n    <form onSubmit={submit}>\r\n    <label>Email: </label>\r\n    <input type=\"email\" id=\"email\" onChange={e => setEmail(e.target.value)}/>\r\n    <label>Password: </label>\r\n    <input type=\"password\" id=\"password\" onChange={e => setPassword(e.target.value)}/>\r\n    <input type=\"submit\" value=\"Login\" className=\"btn btn-primary\" />\r\n    </form>\r\n    </div> */\r\n    );\r\n}\r\nexport default Login;","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\consultas\\CrearConsulta.jsx",["263","264","265","266"],"import React, { useState, useContext,useEffect } from 'react';\r\nimport { useHistory, Redirect } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport ErrorNotice from \"../../components/misc/ErrorNotice\";\r\nimport UserContext from \"../../context/userContext\";\r\nimport Select from 'react-select';\r\nimport Async from 'react-async';\r\nimport api from '../../api'\r\nimport moment from \"moment\";\r\nfunction CrearConsulta () {\r\nconst fecha = moment().format(\"MM-DD-YYYY HH:mm\")\r\nconst [motivo, setMotivo] = useState();\r\nconst [descripcion, setDescripcion] = useState();\r\nconst { userData } = useContext(UserContext);\r\nconst paciente = userData.user.id;\r\nconst [error, setError] = useState();\r\nconst history = useHistory();\r\n// const onChange = async (selectedOption) => {\r\n\r\n//     console.log(`Option selected:`, selectedOption);\r\n//     setMedico(selectedOption.val);\r\n    \r\n//   };\r\n\r\nconst submit = async (e) => {\r\ne.preventDefault();\r\ntry{\r\nconst user = await api.getUserById(paciente);\r\nconst medico = user.data.data.medico;\r\nconst newUser = {fecha,motivo,descripcion,paciente,medico};\r\nawait axios.post(\"http://localhost:5000/enquiries/add\", newUser);\r\n\r\nhistory.push(\"/\"+userData.user.id+\"/consultas\");\r\n} catch(err) {\r\nerr.response.data.msg && setError(err.response.data.msg)\r\n}\r\n};\r\n\r\n// const sacaMedicos = () =>\r\n//     api.getMedics()\r\n//     .then(res => {return res})\r\n\r\n    return (\r\n    <div className=\"form\">\r\n    <h2>Crear consulta</h2>\r\n    {error && <ErrorNotice message={error} clearError={() => setError(undefined)} />}\r\n    <form onSubmit={submit}>\r\n    <div class=\"input\">\r\n    <div class=\"inputBox\">\r\n    <label>Motivo: </label><br></br>\r\n    <input type=\"text\" id=\"motivo\" onChange={e => setMotivo(e.target.value)}/><br></br>\r\n    </div>\r\n    <div class=\"inputBox\">\r\n    <label>Descripción: </label><br></br>\r\n    <input type=\"text\" id=\"descripcion\" onChange={e => setDescripcion(e.target.value)}/><br></br>\r\n    </div>\r\n    {/* <Async promiseFn={sacaMedicos}>\r\n\r\n{({ data, err }) => {\r\n          if (err) return `Something went wrong: ${err.message}`\r\n\r\n          if (data){\r\n\r\n            const selectmedico = [];\r\n            data.data.data.map((medico) => { selectmedico.push({ desc:medico.nombre+\" \"+medico.apellidos, val: medico._id  })});\r\n\r\n            return (\r\n                <Select options={selectmedico} getOptionLabel={(option)=>option.desc}\r\n                getOptionValue={(option)=>option.val } id=\"selectMedico\" placeholder=\"Selecciona un médico\" onChange={onChange} ></Select>\r\n                \r\n            )}\r\n        }}\r\n</Async> */}\r\n    <div class=\"inputBox\">\r\n    <input type=\"submit\" value=\"Crear\" className=\"btn btn-primary\" />\r\n    </div>\r\n    </div>\r\n    </form>\r\n    </div>\r\n    );\r\n}\r\nexport default CrearConsulta;","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\auth\\AuthOptions.jsx",["267","268","269","270","271"],"import React, { useContext,useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport UserContext from \"../../context/userContext\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport api from '../../api'\r\nfunction AuthOptions () {\r\nconst { userData, setUserData } = useContext(UserContext);\r\nconst [error, setError] = useState();\r\nconst history = useHistory();\r\nconst register = () => history.push(\"/register\");\r\nconst login = () => history.push(\"/login\");\r\nconst registerMedic = () => history.push(\"/registerMedic\");\r\nconst consultas = () => history.push(\"/\"+userData.user.id+\"/consultas\");\r\nconst covid19 = () => history.push(\"/\"+userData.user.id+\"/covid19\");\r\nconst citas = () => history.push(\"/\"+userData.user.id+\"/citas\");\r\nconst informes = () => history.push(\"/\"+userData.user.id+\"/informes\");\r\nconst enfermedades = () => history.push(\"/\"+userData.user.id+\"/enfermedades\");\r\nconst miPerfil = () => history.push(\"/\"+userData.user.id);\r\nconst misPacientes = () => history.push(\"/\"+userData.user.id+\"/misPacientes\")\r\nconst crearConsultaAtencionEspecialModel = async (e) => {\r\n  e.preventDefault();\r\n  try{\r\n    const fecha = moment();\r\n    const finalizada = false;\r\n    const paciente = userData.user.id;\r\n    const user = await api.getUserById(paciente);\r\n    const medico = user.data.data.medico;\r\n    const newUser = {fecha,finalizada,paciente,medico};\r\n    await axios.post(\"http://localhost:5000/consultaAtencionEspecial/add\", newUser);\r\n    \r\n    history.push(\"/\");\r\n    } catch(err) {\r\n    err.response.data.msg && setError(err.response.data.msg)\r\n    }\r\n  \r\n};\r\nconst logout = () => {\r\nsetUserData({\r\ntoken: undefined,\r\nuser: undefined\r\n})\r\nlocalStorage.setItem(\"auth-token\",\"\");\r\n};\r\nif(userData.user){\r\n  if(userData.user.rol==\"Paciente\"){\r\n      return (<nav className=\"auth-options\">\r\n            <div class = \"button-wrap\">\r\n    <button class = \"rad-button wwt flat\" onClick={crearConsultaAtencionEspecialModel}>Urgencia</button>\r\n    </div>\r\n    <div class = \"button-wrap\">\r\n    <button class = \"rad-button wwt flat\" onClick={covid19}>COVID-19</button>\r\n    </div>\r\n    <div class = \"button-wrap\">\r\n        <button class = \"rad-button wwt flat\" onClick={consultas}>Consultas</button>\r\n      </div>\r\n    <div class = \"button-wrap\">\r\n    <button class = \"rad-button wwt flat\" onClick={miPerfil}>Mi Perfil</button>\r\n    </div>\r\n          <div class = \"button-wrap\">\r\n        <button class = \"rad-button wwt flat\" onClick={logout}>Cerrar sesión</button>\r\n      </div>\r\n \r\n   \r\n      {/* <div class = \"button-wrap\">\r\n        <button class = \"rad-button wwt flat\" onClick={citas}>Citas</button>\r\n      </div> */}\r\n\r\n      {/* <div class = \"button-wrap\">\r\n        <button class = \"rad-button wwt flat\" onClick={informes}>Informes</button>\r\n      </div> */}\r\n\r\n      {/* <div class = \"button-wrap\">\r\n        <button class = \"rad-button wwt flat\" onClick={enfermedades}>Enfermedades</button>\r\n      </div> */}\r\n  </nav>)\r\n  }else if(userData.user.rol==\"Médico\"){\r\n    return (<nav className=\"auth-options\">\r\n  <br></br>\r\n  <div class = \"button-wrap\">\r\n  <button class = \"rad-button wwt flat\" onClick={consultas}>Consultas</button>\r\n  </div>\r\n  <br></br>\r\n  <div class = \"button-wrap\">\r\n    <button class = \"rad-button wwt flat\" onClick={covid19}>COVID-19</button>\r\n    </div>\r\n  <br></br>\r\n  <div class = \"button-wrap\">\r\n  <button class = \"rad-button wwt flat\" onClick={citas}>Citas</button>\r\n  </div>\r\n  <br></br>\r\n  <div class = \"button-wrap\">\r\n  <button class = \"rad-button wwt flat\" onClick={misPacientes}>Mis Pacientes</button>\r\n  </div>\r\n  {/* <div class = \"button-wrap\">\r\n  <button class = \"rad-button wwt flat\" onClick={informes}>Informes</button>\r\n  </div>\r\n  <br></br>\r\n  <div class = \"button-wrap\">\r\n  <button class = \"rad-button wwt flat\" onClick={enfermedades}>Enfermedades</button>\r\n  </div> */}\r\n      <div class = \"button-wrap\">\r\n    <button class = \"rad-button wwt flat\" onClick={miPerfil}>Mi Perfil</button>\r\n    </div>\r\n  <div class = \"button-wrap\">\r\n  <button class = \"rad-button wwt flat\" onClick={logout}>Cerrar sesión</button>\r\n  </div>\r\n  </nav>)\r\n  }\r\n}else{\r\n    return (<nav className=\"auth-options\">\r\n                    <div class = \"button-wrap\">\r\n                    <button class = \"rad-button wwt flat\" onClick={register}>Registrar</button>\r\n                    </div>\r\n                    <br></br>\r\n                    <div class = \"button-wrap\">\r\n                    <button class = \"rad-button wwt flat\" onClick={registerMedic}>Registrar médico</button>\r\n                    </div>\r\n                    <br></br>\r\n                    <div class = \"button-wrap\">\r\n                    <button class = \"rad-button wwt flat\" onClick={login}>Iniciar sesión</button>\r\n                    </div>\r\n            </nav>)\r\n}\r\n}\r\nexport default AuthOptions;","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\misc\\ErrorNotice.jsx",[],"C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\pages\\ListaConsulta.jsx",["272"],"import React, { Component } from 'react'\nimport api from '../api'\nimport axios from 'axios'\n\n\nclass ListaConsulta extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            enquiries: [],\n            columns: [],\n            isLoading: false,\n        }\n    }\n\n    componentDidMount = async () => {\n        this.setState({ isLoading: true })\n\n        await api.listaConsulta().then(enquiries => {\n            this.setState({\n                enquiries: enquiries.data.data,\n                isLoading: false,\n            })\n        })\n    }\n\n    render() {\n        let {enquiries}=this.props;\n        return (\n           <p>{enquiries}</p>\n        )\n    }\n}\n\nexport default ListaConsulta;",["273","274"],"C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\api\\index.js",[],"C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\auth\\Consultas.jsx",["275","276","277","278","279"],"import React, { useState, useContext } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport UserContext from \"../../context/userContext\";\r\nimport ErrorNotice from \"../../components/misc/ErrorNotice\";\r\nfunction Consultas(){\r\nconst history = useHistory();\r\nconst crearConsulta = () => history.push(\"/crearConsulta\");\r\nreturn(\r\n    <div>\r\n    <button className=\"btn btn-primary mr-2\" onClick={crearConsulta}>Crear consulta</button>\r\n    </div>\r\n);\r\n}\r\n\r\nexport default Consultas;","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\pages\\index.js",[],"C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\consultas\\Consulta.jsx",["280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304"],"import React, { Component, useEffect, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport moment from 'moment';\r\nimport api, { editarConsultaAtencionEspecial } from '../../api'\r\nimport UserContext from \"../../context/userContext\";\r\nimport calendar from '../logo/calendar.png'\r\nimport consultaImg from '../logo/medical-file.png'\r\nimport motive from '../logo/libreta-de-direcciones.png'\r\nimport personas from '../logo/personas.png'\r\nimport doctor from '../logo/doctor.png'\r\nimport medic from '../logo/medico.png'\r\nimport exclamation from '../logo/exclamation-mark.png'\r\nimport telephone from '../logo/phone.png'\r\nimport direccion from '../logo/address.png'\r\n\r\nfunction Prueba(props) {\r\n    const history = useHistory();\r\n    const mensajes = () => history.push(\"/mensajes\");\r\n    let content;\r\n    let content2;\r\n    if(props.rol==\"Paciente\"){\r\n        content = props.consulta.map((consulta) =>\r\n        <div class=\"cards-consulta\">\r\n        <div class='top'>\r\n        <img src={doctor} />\r\n        </div>\r\n        <div class=\"consulta\" key={consulta._id}>\r\n            <div class=\"fecha\">\r\n            <p><img class=\"calendar\" src={motive}/><div class=\"fechaPad\">Motivo: {consulta.motivo}</div></p>\r\n            </div>\r\n            <div class=\"fecha\">\r\n            <p><img class=\"calendar\" src={calendar}/><div class=\"fechaPad\">Fecha: {moment(consulta.fecha).format('DD/MM/yyyy HH:mm')}</div></p>\r\n            </div>\r\n            <div class=\"fecha\">\r\n            <p><img class=\"calendar\" src={medic}/><div class=\"fechaPad\">Medico: {consulta.medico.nickname}</div></p>\r\n            </div>\r\n            <div class=\"consultaBotones\">\r\n            <Mensaje id={consulta._id} idMedico={consulta.medico._id} />\r\n            </div>\r\n        </div>\r\n        </div>\r\n        );\r\n\r\n        content2 = props.consultaAtencionEspecial.map((consultaAtencionEspecial) =>\r\n        <div class=\"cards-consultaEspecial\">\r\n            <div class='topConsultaEspecial'>\r\n            <img src={exclamation} />\r\n            </div>\r\n        <div class=\"consultaEspecial\" key={consultaAtencionEspecial._id}>\r\n            <div class=\"fecha\">\r\n            <p><img class=\"calendar\" src={calendar}/><div class=\"fechaPad\">Fecha: {moment(consultaAtencionEspecial.fecha).format('DD/MM/yyyy HH:mm')}</div></p>\r\n            </div>\r\n            <div class=\"fecha\">\r\n            <p><img class=\"calendar\" src={medic}/><div class=\"fechaPad\">Medico: {consultaAtencionEspecial.medico.nickname}</div></p>\r\n            </div>\r\n        </div>\r\n        </div>\r\n        );\r\n\r\n        return (\r\n            <div class=\"consultaList\">\r\n              {content2}\r\n              {content}\r\n              <br></br><br></br>\r\n              <Consultas />\r\n            </div>\r\n          );\r\n    }else{\r\n        content = props.consulta.map((consulta) =>\r\n        <div class=\"cards-consulta\">\r\n            <div class='top'>\r\n            <img src={doctor} />\r\n            </div>\r\n        <div class=\"consulta\" key={consulta._id}>\r\n            <div class=\"fecha\">\r\n            <p><img class=\"calendar\" src={motive}/><div class=\"fechaPad\">Motivo: {consulta.motivo}</div></p>\r\n            </div>\r\n            <div class=\"fecha\">\r\n            <p><img class=\"calendar\" src={calendar}/><div class=\"fechaPad\">Fecha: {moment(consulta.fecha).format('DD/MM/yyyy HH:mm')}</div></p>\r\n            </div>\r\n            <div class=\"fecha\">\r\n                <p><img class=\"calendar\" src={personas}/><div class=\"fechaPad\">Paciente: {consulta.paciente.nickname}</div></p>\r\n                </div>\r\n            <div class=\"consultaBotones\">\r\n            <EditarConsulta id={consulta._id} />\r\n            </div>\r\n            <div class=\"consultaBotones\">\r\n            <EliminarConsulta id={consulta._id}/>\r\n            </div>\r\n            <div class=\"consultaBotones\">\r\n            <MensajeMedico id={consulta._id} />\r\n            </div>\r\n            <div class=\"consultaBotones\">\r\n            <CrearCita id={consulta._id} idPaciente={consulta.paciente._id} />\r\n            </div>\r\n            <br></br><br></br>\r\n            <div class=\"consultaBotones\">\r\n            <CrearEnfermedad idPaciente={consulta.paciente._id} />\r\n            </div>\r\n        </div>\r\n        </div>\r\n        );\r\n        content2 = props.consultaAtencionEspecial.map((consultaAtencionEspecial) =>\r\n                <div class=\"cards-consultaEspecial\">\r\n                <div class='topConsultaEspecial'>\r\n                <img src={exclamation} />\r\n                </div>\r\n            <div class=\"consultaEspecial\" key={consultaAtencionEspecial._id}>\r\n                <div class=\"fecha\">\r\n                <p><img class=\"calendar\" src={calendar}/><div class=\"fechaPad\">Fecha: {moment(consultaAtencionEspecial.fecha).format('DD/MM/yyyy HH:mm')}</div></p>\r\n                </div>\r\n                <div class=\"fecha\">\r\n                <p><img class=\"calendar\" src={personas}/><div class=\"fechaPad\">Paciente: {consultaAtencionEspecial.paciente.nickname}</div></p>\r\n                </div>\r\n                <div class=\"fecha\">\r\n            <p><img class=\"calendar\" src={telephone}/><div class=\"fechaPad\">Teléfono: {consultaAtencionEspecial.paciente.telefono}</div></p>\r\n            </div>\r\n            <div class=\"fecha\">\r\n            <p><img class=\"calendar\" src={direccion}/><div class=\"fechaPad\">Dirección: {consultaAtencionEspecial.paciente.direccion}</div></p>\r\n            </div>\r\n                <div class=\"consultaBotones\">\r\n                    <EditarConsultaAtencionEspecial id={consultaAtencionEspecial._id} />\r\n                    </div>\r\n            </div>\r\n            </div>\r\n        );\r\n\r\n        return (\r\n            <div class=\"consultaList\">\r\n              {content2}\r\n              {content}\r\n              <br></br>\r\n            </div>\r\n          );\r\n    }\r\n  }\r\n\r\n  function Consultas(){\r\n    const history = useHistory();\r\n    const crearConsulta = () => history.push(\"/crearConsulta\");\r\n    return(\r\n        <div class=\"crearConsulta\">\r\n        <button className=\"rad-button-2 wwt flat\" style={{marginBottom:\"2em\"}} onClick={crearConsulta}>Crear consulta</button>\r\n        </div>\r\n    );\r\n    }\r\n\r\n    function EditarConsulta(props) {\r\n        const history = useHistory();\r\n        const { userData } = useContext(UserContext);\r\n        const editarConsulta = () => history.push(\"/\"+userData.user.id+\"/consultas/\"+props.id+\"/edit\");\r\n        return(\r\n            <button className=\"rad-button-2 wwt flat\" onClick={editarConsulta}>Cambiar médico</button>\r\n        );\r\n    }\r\n\r\n    function EditarConsultaAtencionEspecial(props) {\r\n        const history = useHistory();\r\n        const { userData } = useContext(UserContext);\r\n        const updateConsultaAtencionEspecial = async () => {\r\n            const id = props.id;\r\n            // finalizada = true;\r\n            // const payload = finalizada;\r\n    \r\n            await api.editarConsultaAtencionEspecial(id).then(res => {\r\n               console.log(`Cita updated successfully`)\r\n               history.push(\"/\");\r\n            })\r\n        }\r\n        return(\r\n            <button className=\"rad-button-2 wwt flat\" onClick={updateConsultaAtencionEspecial}>Finalizar consulta</button>\r\n        );\r\n    }\r\n\r\n    function CrearCita(props) {\r\n        const history = useHistory();\r\n        const crearCita = () => history.push(\"/\"+props.id+\"/medico/\"+props.idPaciente+\"/crearCita\");\r\n        return(\r\n            <button className=\"rad-button-2 wwt flat\" onClick={crearCita}>Crear cita</button>\r\n        );\r\n    }\r\n\r\n    function CrearEnfermedad(props) {\r\n        const history = useHistory();\r\n        const crearEnfermedad = () => history.push(\"/\"+props.idPaciente+\"/enfermedades/crearEnfermedad\");\r\n        return(\r\n            <button className=\"rad-button-2 wwt flat\" onClick={crearEnfermedad}>Diagnosticar <br></br>enfermedad</button>\r\n        );\r\n    }\r\n\r\n    function Mensaje(props) {\r\n        const history = useHistory();\r\n        const mensajes = () => history.push(\"/\"+props.id+\"/medico/\"+props.idMedico+\"/mensajes\");\r\n        return(\r\n            <button className=\"rad-button-2 wwt flat\" onClick={mensajes}>Mensajes</button>\r\n        );\r\n    }\r\n\r\n    function MensajeMedico(props) {\r\n        const history = useHistory();\r\n        const mensajes = () => history.push(\"/\"+props.id+\"/mensajes\");\r\n        return(\r\n            <button className=\"rad-button-2 wwt flat\" onClick={mensajes}>Mensajes</button>\r\n        );\r\n    }\r\n\r\n    function EliminarConsulta(props) {\r\n        const history = useHistory();\r\n        const eliminarConsulta = () => {\r\n            api.eliminarConsulta(props.id)\r\n            window.location.reload()\r\n        }\r\n        return(\r\n            <button className=\"rad-button-2 wwt flat\" onClick={eliminarConsulta}>Eliminar consulta</button>\r\n        );\r\n    }\r\n\r\nexport default class Consulta extends React.Component{\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            rol: this.props.userData.rol,\r\n            loading: true,\r\n            consulta:null,\r\n        }\r\n    }\r\n\r\n    async componentWillMount(){\r\n        const { id } = this.state\r\n        const { rol } = this.state\r\n        let url;\r\n        let url2;\r\n        if(rol==\"Paciente\"){\r\n            url = await api.getConsultaByPacienteId(id)\r\n            url2 = await api.getConsultaAtencionEspecialByPaciente(id)\r\n        }else{\r\n            url = await api.getConsultaByMedicoId(id)\r\n            url2 = await api.getConsultaAtencionEspecialByMedico(id)\r\n        }\r\n        // const response = await fetch(url);\r\n        // const data = await response.json();\r\n        this.setState({consulta: url.data.data,consultaAtencionEspecial: url2.data.data, loading:false, rol:rol});\r\n    }\r\n    \r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                {this.state.loading || !this.state.consulta ? (\r\n                    <div>loading...</div>\r\n                ):(\r\n                    <div>\r\n                        <Prueba consulta={this.state.consulta} consultaAtencionEspecial={this.state.consultaAtencionEspecial} rol={this.state.rol}/>\r\n                        \r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\layout\\Logo.jsx",["305","306"],"import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport { useHistory } from 'react-router-dom';\nimport logo from '../logo/logoTFG.png'\n\nconst Wrapper = styled.a.attrs({\n    className: 'navbar-brand',\n})``\n\n\nclass Logo extends Component {\n    render() {\n        return (\n            <Wrapper>\n                <img class=\"logo\" src={logo} width=\"50\" height=\"50\"/>\n            </Wrapper>\n        )\n    }\n}\n\nexport default Logo","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\mensajes\\CrearMensaje.jsx",[],"C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\mensajes\\Mensaje.jsx",["307","308","309","310","311"],"import React, { Component } from \"react\";\r\nimport { useHistory,useParams } from \"react-router-dom\";\r\nimport moment from 'moment';\r\nimport { useState, useContext } from 'react';\r\nimport axios from \"axios\";\r\nimport ErrorNotice from \"../../components/misc/ErrorNotice\";\r\nimport UserContext from '../../context/userContext';\r\nimport api from '../../api'\r\nfunction CrearMensaje () {\r\n    const {userData} = useContext(UserContext);\r\n    const [mensaje, setMensaje] = useState();\r\n    const { id } = useParams()\r\n    const consulta = id;\r\n    const paciente = userData.user.id;\r\n    const { idMedico } = useParams()\r\n    const medico = idMedico;\r\n    const fecha = new Date();\r\n    const escritoPor = userData.user.nickname+\" \"+userData.user.rol;\r\n    const [error, setError] = useState();\r\n    const history = useHistory();\r\n    const submit = async (e) => {\r\n    e.preventDefault();\r\n    try{\r\n    const newMensaje = {mensaje,consulta,paciente,medico,fecha,escritoPor};\r\n    await axios.post(\"http://localhost:5000/enquiries/addConsultas\", newMensaje);\r\n    \r\n    window.location.reload();\r\n    } catch(err) {\r\n    err.response.data.msg && setError(err.response.data.msg)\r\n    }\r\n    };\r\n    return (\r\n    <div className=\"crearMensaje\">\r\n    <h2 class=\"mensajeTitulo\">Crear mensaje</h2>\r\n    {error && <ErrorNotice message={error} clearError={() => setError(undefined)} />}\r\n    <form onSubmit={submit}>\r\n    <textarea  id=\"mensaje\" onChange={e => setMensaje(e.target.value)}/><br></br>\r\n    <div class=\"divCrearMensaje\">\r\n    <input type=\"submit\" value=\"Enviar mensaje\" class=\"rad-button-2 wwt flat\"/>\r\n    </div>\r\n    <br></br>\r\n    </form>\r\n    </div>\r\n    );\r\n    }\r\n\r\n// function DivChat(mensajeId){\r\n//     const { userData } = useContext(UserContext);\r\n//     let mensajeSp=mensajeId.split(' ')[0]\r\n//     if(userData.user.nickname == mensajeSp){\r\n//         return <div class=\"container darker\"></div>;\r\n//     }else{\r\n//         return <div class=\"container\"></div>;\r\n//     }\r\n// }\r\n\r\nfunction DivChat(mensajeId){\r\n    const { userData } = useContext(UserContext);\r\n    let mensajeSp=mensajeId.split(' ')[0]\r\n    if(userData.user.nickname != mensajeSp){\r\n        return \"container\";\r\n    }else{\r\n        return \"container darker\";\r\n    }\r\n}\r\n\r\nfunction FechaChat(mensajeId){\r\n    const { userData } = useContext(UserContext);\r\n    let mensajeSp=mensajeId.split(' ')[0]\r\n    if(userData.user.nickname != mensajeSp){\r\n        return \"time-left\";\r\n    }else{\r\n        return \"time-right\";\r\n    }\r\n}\r\n\r\nfunction CerrarDiv(){\r\n    return '</div>';\r\n}\r\n\r\nfunction Prueba(props) {\r\n    const { userData } = useContext(UserContext);\r\n    console.log(userData.user.id)\r\n    const content = props.mensaje.map((mensaje) =>\r\n      <div key={mensaje._id}>\r\n          {/* {DivChat(mensaje.escritoPor)} */}\r\n          <div class={DivChat(mensaje.escritoPor)}>\r\n        {/* <p>ID: {mensaje._id}</p> */}\r\n        <p>{mensaje.escritoPor}: {mensaje.mensaje}</p>\r\n        <span class={FechaChat(mensaje.escritoPor)}>{moment(mensaje.fecha).format('DD/MM/yyyy HH:mm')}</span>\r\n        {/* <p>Escrito por: {mensaje.escritoPor}</p> */}\r\n        <br></br>\r\n       </div>\r\n      </div>\r\n    );\r\n    return (\r\n      <div>\r\n        {content}\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\nexport default class Mensaje extends React.Component{\r\n    state={\r\n        loading: true,\r\n        mensaje:null,\r\n        id: this.props.match.params.id,\r\n    };\r\n\r\n    async componentWillMount(){\r\n        const { id } = this.state\r\n        const url =  await api.getMensajes(id)\r\n        // const response = await fetch(url);\r\n        // const data = await response.json();\r\n        this.setState({mensaje: url.data.data, loading:false});\r\n    }\r\n    \r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                {this.state.loading || !this.state.mensaje ? (\r\n                    <div>loading...</div>\r\n                ):(\r\n                    <div>\r\n                        <Prueba mensaje={this.state.mensaje} />\r\n                    </div>\r\n                )}\r\n                <CrearMensaje />\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\consultas\\EditarConsulta.jsx",["312","313","314","315","316","317","318","319","320","321","322","323"],"import React, { Component,useContext,useEffect } from 'react'\r\nimport api from '../../api'\r\nimport { useHistory,Redirect } from \"react-router-dom\";\r\nimport UserContext from \"../../context/userContext\";\r\nimport { useOktaAuth } from \"@okta/okta-react\";\r\nimport firebase from \"firebase/app\";\r\nimport moment from 'moment';\r\nimport \"firebase/auth\";\r\nimport Select from 'react-select';\r\nimport Async from 'react-async';\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst Title = styled.h1.attrs({\r\n    className: 'h1',\r\n})``\r\n\r\nconst Wrapper = styled.div.attrs({\r\n    className: 'form-group',\r\n})`\r\n    margin: 0 30px;\r\n`\r\n\r\nconst Label = styled.label`\r\n    margin: 5px;\r\n`\r\n\r\nconst InputText = styled.input.attrs({\r\n    className: 'form-control',\r\n})`\r\n    margin: 5px;\r\n`\r\n\r\nconst Button = styled.button.attrs({\r\n    className: `btn btn-primary`,\r\n})`\r\n    margin: 15px 15px 15px 5px;\r\n`\r\n\r\nconst CancelButton = styled.a.attrs({\r\n    className: `btn btn-danger`,\r\n})`\r\n    margin: 15px 15px 15px 5px;\r\n`\r\n\r\nclass EditarConsulta extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            // idUser: this.props.match.params.idUser,\r\n            idUser: this.props.userData.id,\r\n            medico:'',\r\n        }\r\n    }\r\n\r\n\r\n    // handleChangeInputMedico = async event => {\r\n    //     const motivo = event.target.validity.valid\r\n    //         ? event.target.value\r\n    //         : this.state.motivo\r\n\r\n    //     this.setState({ motivo })\r\n    // }\r\n\r\n    onChange = async (selectedOption) => {\r\n\r\n        console.log(`Option selected:`, selectedOption);\r\n        const medico=(selectedOption.val);\r\n        this.setState({ medico })\r\n      };\r\n\r\n\r\n    handleUpdateConsulta = async () => {\r\n        const { id, medico } = this.state\r\n        const payload = { medico }\r\n\r\n        await api.editarConsulta(id, payload).then(res => {\r\n           console.log(`Consulta updated successfully`)\r\n            this.setState({\r\n                medico: '',\r\n            })\r\n            this.props.history.push('/');\r\n        })\r\n    }\r\n\r\n\r\n    componentWillMount = async () => {\r\n        const { id } = this.state\r\n        const {idUser} =this.state\r\n        console.log(idUser)\r\n        const consulta = await api.getConsultaById(id)\r\n        if(idUser != consulta.data.data.medico){\r\n            this.props.history.push('/error');\r\n        }\r\n        this.setState({\r\n            medico: consulta.data.data.medico,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { medico,id } = this.state\r\n        const sacaMedicos = () =>\r\n        api.getMedics()\r\n        .then(res => {return res})\r\n        return (\r\n\r\n            <Wrapper className=\"form\">\r\n                <Title className=\"titleForm\">Enviar a especialista</Title>\r\n             \r\n                \r\n                <Label className=\"etiquetaForm\">Médico: </Label>\r\n                <Async promiseFn={sacaMedicos}>\r\n\r\n                {({ data, err }) => {\r\n                        if (err) return `Something went wrong: ${err.message}`\r\n\r\n                        if (data){\r\n\r\n                            const selectMedico = [];\r\n                            data.data.data.map((medico) => { selectMedico.push({ desc:medico.nombre+\" \"+medico.apellidos+\"-\"+medico.sector, val: medico._id  })});\r\n\r\n                            return (\r\n                                <Select\r\n                                options={selectMedico} getOptionLabel={(option)=>option.desc}\r\n                                getOptionValue={(option)=>option.val } id=\"selectMedico\" placeholder=\"Selecciona un medico\" onChange={this.onChange} ></Select>\r\n                                \r\n                            )}\r\n                        }}\r\n                </Async>\r\n                  \r\n                <Button className=\"botonSubmit\" onClick={this.handleUpdateConsulta}>Editar consulta</Button>        \r\n                <CancelButton className=\"botonSubmit\" href={id+'/consultas'}>Cancelar</CancelButton>\r\n     \r\n             \r\n            </Wrapper>\r\n     \r\n        )\r\n}\r\n}\r\n\r\nexport default EditarConsulta","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\pages\\NoPermisos.jsx",["324","325"],"import React, { Component } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useHistory } from 'react-router-dom';\r\nimport NoPermisos from '../logo/NoPermisos.png'\r\n\r\nconst Wrapper = styled.a.attrs({\r\n    className: 'navbar-brand',\r\n})``\r\n\r\nclass NoPerm extends Component {\r\n    render() {\r\n        return (\r\n            <Wrapper>\r\n                <img class=\"NoPermisos\" src={NoPermisos}/>\r\n            </Wrapper>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NoPerm","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\citas\\Citas.jsx",["326","327","328","329","330","331","332","333","334","335","336","337","338","339","340"],"import React, { Component, useEffect, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport moment from 'moment';\r\nimport api from '../../api'\r\nimport UserContext from \"../../context/userContext\";\r\n\r\nfunction ListaCitas(props) {\r\n    const history = useHistory();\r\n    let content;\r\n    let content2;\r\n    if(props.rol==\"Paciente\"){\r\n        content = props.cita.map((cita) =>\r\n        <div class=\"cards\">\r\n            <br></br>\r\n        <div class=\"cita\" key={cita._id}>\r\n            <p>Motivo: {cita.motivo}</p>\r\n            <p>Tipo de cita: {cita.tipoCita}</p>\r\n            <TipoAnalisis tipoCita={cita.tipoCita} cita={cita}/>\r\n            <p>Fecha:{moment(cita.fecha).format('DD/MM/yyyy')}</p>\r\n            <p>Medico: {cita.medico.nickname}</p>\r\n            <p>Ciudad: {cita.ciudad}</p>\r\n            <p>Centro Médico: {cita.centroMedico}</p>\r\n\r\n        </div>\r\n        </div>\r\n        );\r\n\r\n        content2 = props.citaPcr.map((citaPcr) =>\r\n        <div class=\"cards\">\r\n            <br></br>\r\n        <div class=\"cita\" key={citaPcr._id}>\r\n            <p>Motivo: {citaPcr.motivo}</p>\r\n            <p>Tipo de cita: {citaPcr.tipoCita}</p>\r\n            <p>Fecha:{moment(citaPcr.fecha).format('DD/MM/yyyy')}</p>\r\n            <p>Medico: {citaPcr.medico.nickname}</p>\r\n            <p>Ciudad: {citaPcr.ciudad}</p>\r\n            <p>Centro Médico: {citaPcr.centroMedico}</p>\r\n\r\n        </div>\r\n        </div>\r\n        );\r\n        return (\r\n        <div>\r\n            {content2}\r\n            {content}\r\n            <br></br>\r\n        </div>\r\n        );\r\n        }else{\r\n            content = props.cita.map((cita) =>\r\n            <div class=\"cards\">\r\n                <br></br>\r\n            <div class=\"cita\" key={cita._id}>\r\n                <p>Motivo: {cita.motivo}</p>\r\n                <p>Tipo de cita: {cita.tipoCita}</p>\r\n                <TipoAnalisis tipoCita={cita.tipoCita} cita={cita}/>\r\n                <p>Fecha:{moment(cita.fecha).format('DD/MM/yyyy')}</p>\r\n                <p>Paciente: {cita.paciente.nickname}</p>\r\n                <p>Ciudad: {cita.ciudad}</p>\r\n                <p>Centro Médico: {cita.centroMedico}</p>\r\n                <div class=\"consultaBotones\">\r\n                <EditarCita id={cita._id} />\r\n                </div>\r\n                <div class=\"consultaBotones\">\r\n                <EliminarCita id={cita._id}/>\r\n                </div>\r\n                <div class=\"consultaBotones\">\r\n                <CrearInforme paciente={cita.paciente} id={cita._id} tipoCita={cita.tipoCita} tipoAnalisis={cita.tipoAnalisis}/>\r\n                </div>\r\n\r\n            </div>\r\n            </div>\r\n            );\r\n\r\n            content2 = props.citaPcr.map((citaPcr) =>\r\n            <div class=\"cards\">\r\n                <br></br>\r\n            <div class=\"cita\" key={citaPcr._id}>\r\n                <p>Motivo: {citaPcr.motivo}</p>\r\n                <p>Tipo de cita: {citaPcr.tipoCita}</p>\r\n                <p>Fecha:{moment(citaPcr.fecha).format('DD/MM/yyyy')}</p>\r\n                <p>Paciente: {citaPcr.paciente.nickname}</p>\r\n                <p>Ciudad: {citaPcr.ciudad}</p>\r\n                <p>Centro Médico: {citaPcr.centroMedico}</p>\r\n                <div class=\"consultaBotones\">\r\n                <CrearInformePcr paciente={citaPcr.paciente} id={citaPcr._id} tipoCita={citaPcr.tipoCita} />\r\n                </div>\r\n            </div>\r\n            </div>\r\n            );\r\n            return (\r\n            <div>\r\n                {content2}\r\n                {content}\r\n                <br></br>\r\n            </div>\r\n            );\r\n        }\r\n  }\r\n\r\n  function TipoAnalisis(props) {\r\n    if(props.tipoCita==\"análisis\"){\r\n    return(\r\n        <p>Tipo de análisis: {props.cita.tipoAnalisis}</p>\r\n    );\r\n    }else{\r\n    return(\r\n        <p></p>\r\n    );  \r\n    }\r\n}\r\n\r\n\r\n    function CrearInforme(props) {\r\n        const history = useHistory();\r\n        const { userData } = useContext(UserContext);\r\n        let crearInforme;\r\n        if(props.tipoCita==\"análisis\" && props.tipoAnalisis==\"sangre\"){\r\n            crearInforme = () => history.push(\"/\"+props.paciente._id+\"/citas/\"+props.id+\"/\"+props.tipoCita+\"/\"+props.tipoAnalisis+\"/crearInformeSangre\");\r\n        }else if(props.tipoCita==\"análisis\" && props.tipoAnalisis==\"orina\"){\r\n            crearInforme = () => history.push(\"/\"+props.paciente._id+\"/citas/\"+props.id+\"/\"+props.tipoCita+\"/\"+props.tipoAnalisis+\"/crearInformeOrina\");\r\n        }else if(props.tipoCita==\"prueba médica\"){\r\n            crearInforme = () => history.push(\"/\"+props.paciente._id+\"/citas/\"+props.id+\"/\"+props.tipoCita+\"/crearInformePrueba\");\r\n        }else if(props.tipoCita==\"presencial\"){\r\n            crearInforme = () => history.push(\"/\"+props.paciente._id+\"/citas/\"+props.id+\"/\"+props.tipoCita+\"/crearInformePresencial\");\r\n        }\r\n        return(\r\n            <button className=\"rad-button-2 wwt flat\" onClick={crearInforme}>Crear informe</button>\r\n        );\r\n    }\r\n\r\n    function CrearInformePcr(props) {\r\n        const history = useHistory();\r\n        const { userData } = useContext(UserContext);\r\n        let crearInforme;\r\n        crearInforme = () => history.push(\"/\"+props.paciente._id+\"/citas/\"+props.id+\"/PCR/crearInformePcr\");\r\n        return(\r\n            <button className=\"rad-button-2 wwt flat\" onClick={crearInforme}>Crear informe</button>\r\n        );\r\n    }\r\n\r\n    function EditarCita(props) {\r\n        const history = useHistory();\r\n        const { userData } = useContext(UserContext);\r\n        const editarCita = () => history.push(\"/\"+userData.user.id+\"/citas/\"+props.id+\"/edit\");\r\n        return(\r\n            <button className=\"rad-button-2 wwt flat\" onClick={editarCita}>Editar cita</button>\r\n        );\r\n    }\r\n\r\n    function EliminarCita(props) {\r\n        const history = useHistory();\r\n        const eliminarCita = () => {\r\n            api.eliminarCita(props.id)\r\n            window.location.reload()\r\n        }\r\n        return(\r\n            <button className=\"rad-button-2 wwt flat\" onClick={eliminarCita}>Eliminar cita</button>\r\n        );\r\n    }\r\n\r\n\r\nexport default class Cita extends React.Component{\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            rol: this.props.userData.rol,\r\n        }\r\n    }\r\n\r\n    async componentWillMount(){\r\n        const { id } = this.state\r\n        const { rol } = this.state\r\n        let url;\r\n        let url2;\r\n        if(rol==\"Paciente\"){\r\n            url = await api.getCitaByPacienteId(id)\r\n            url2 = await api.getCitasPcrByPacienteId(id)\r\n        }else{\r\n            url = await api.getCitaByMedicoId(id)\r\n            url2 = await api.getCitasPcrByMedicoId(id)\r\n        }\r\n        this.setState({cita: url.data.data,citaPcr: url2.data.data, loading:false, rol:rol});\r\n    }\r\n    \r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                {this.state.loading || !this.state.cita ? (\r\n                    <div>loading...</div>\r\n                ):(\r\n                    <div>\r\n                        <ListaCitas cita={this.state.cita} citaPcr={this.state.citaPcr} rol={this.state.rol} />\r\n                        \r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\citas\\CrearCita.jsx",["341","342","343","344","345","346"],"import React, { useState, useContext,useEffect  } from 'react';\r\nimport { useHistory, Redirect,useParams  } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport ErrorNotice from \"../../components/misc/ErrorNotice\";\r\nimport UserContext from \"../../context/userContext\";\r\nimport api from '../../api'\r\nimport Select from 'react-select';\r\nimport Async from 'react-async';\r\n\r\nfunction CrearCita () {\r\nconst [fecha, setFecha] = useState();\r\nconst [motivo, setMotivo] = useState();\r\nconst [tipoCita, setTipoCita] = useState();\r\nconst [tipoAnalisis, setTipoAnalisis] = useState();\r\nconst { id } = useParams()\r\nconst { idPaciente } = useParams()\r\nconst { userData, setUserData } = useContext(UserContext);\r\nconst consulta = id;\r\nconst paciente = idPaciente;\r\nconst medico = userData.user.id;\r\nconst [error, setError] = useState();\r\nconst history = useHistory();\r\n\r\nconst onChange = async (selectedOption) => {\r\n\r\n    console.log(`Option selected:`, selectedOption);\r\n    setTipoCita(selectedOption.val);\r\n    \r\n  };\r\n\r\nconst onChange2 = async (selectedOption) => {\r\n\r\nconsole.log(`Option selected:`, selectedOption);\r\nsetTipoAnalisis(selectedOption.val);\r\n\r\n\r\n};\r\n\r\n\r\nconst submit = async (e) => {\r\ne.preventDefault();\r\ntry{\r\nconst aux = await api.getUserById(paciente)\r\nconst aux2 = await api.getProvinciaById(aux.data.data.ciudad)\r\nconst aux3 = await api.getHospitalById(aux.data.data.centroMedico)\r\nconst ciudad = aux2.data.data.provincia;\r\nconst centroMedico = aux3.data.data.nombre;\r\nconst newCita = {fecha,ciudad,centroMedico,motivo,consulta,paciente,medico,tipoCita,tipoAnalisis};\r\nawait axios.post(\"http://localhost:5000/citas/add\", newCita);\r\n\r\nhistory.push(userData.user.id+\"/consultas\");\r\n} catch(err) {\r\nerr.response.data.msg && setError(err.response.data.msg)\r\n}\r\n};\r\n\r\nconst sacaCitas = () =>\r\n    api.getTipoCita()\r\n    .then(res => {return res})\r\n\r\nconst sacaAnalisis = () =>\r\n    api.getTipoAnalisis()\r\n    .then(res => {return res})\r\n\r\n\r\n    return (\r\n    <div className=\"form-horizontal\">\r\n    <h2>Crear cita</h2>\r\n    {error && <ErrorNotice message={error} clearError={() => setError(undefined)} />}\r\n    <form onSubmit={submit}>\r\n    <div class=\"input\">\r\n    <div class=\"registerAux\">\r\n    <div class=\"inputBox\">\r\n    <label>Fecha: </label><br></br>\r\n    <input type=\"date\" id=\"fecha\" onChange={e => setFecha(e.target.value)}/><br></br>\r\n    </div>\r\n    <div class=\"inputBox\">\r\n    <label>Motivo: </label><br></br>\r\n    <input type=\"text\" id=\"motivo\" onChange={e => setMotivo(e.target.value)}/><br></br>\r\n    </div>\r\n    </div>\r\n    <div class=\"registerAux\">\r\n    <div class=\"inputBox\">\r\n    <label>Tipo de Cita: </label><br></br>\r\n    <Async promiseFn={sacaCitas}>\r\n\r\n    {({ data, err }) => {\r\n            if (err) return `Something went wrong: ${err.message}`\r\n\r\n            if (data){\r\n\r\n                const selectcita = [];\r\n                data.data.data.map((cita) => { selectcita.push({ desc:cita, val: cita  })});\r\n\r\n                return (\r\n                    <Select options={selectcita} getOptionLabel={(option)=>option.desc}\r\n                    getOptionValue={(option)=>option.val } id=\"selectcita\" placeholder=\"Selecciona una cita\" onChange={onChange} ></Select>\r\n                    \r\n                )}\r\n            }}\r\n    </Async>\r\n    </div>\r\n    <div class=\"inputBox\">\r\n    <Prueba analisis={sacaAnalisis} cambia={onChange2} cita={tipoCita}/>\r\n    </div>\r\n    </div>\r\n    <div id=\"registrarPac\" class=\"inputBox\">\r\n    <br></br>\r\n    <input type=\"submit\" value=\"Crear\" className=\"btn btn-primary\" />\r\n    </div>\r\n    </div>\r\n    </form>\r\n    </div>\r\n    );\r\n}\r\n\r\n\r\nfunction Prueba(props){\r\n    if(props.cita==\"análisis\"){\r\n    return(\r\n<div>\r\n<label>Tipo de análisis: </label><br></br>\r\n<Async promiseFn={props.analisis}>\r\n    \r\n\r\n{({ data, err }) => {\r\n        if (err) return `Something went wrong: ${err.message}`\r\n\r\n        if (data){\r\n\r\n            const selectcita = [];\r\n            data.data.data.map((cita) => { selectcita.push({ desc:cita, val: cita  })});\r\n\r\n            return (\r\n                <Select options={selectcita} getOptionLabel={(option)=>option.desc}\r\n                getOptionValue={(option)=>option.val } id=\"selectcita\" placeholder=\"Selecciona una cita\" onChange={props.cambia} ></Select>\r\n                \r\n            )}\r\n        }}\r\n</Async>\r\n</div>);\r\n\r\n    }else{\r\n        return(\r\n            <div></div>\r\n        );\r\n    }\r\n    }\r\nexport default CrearCita;","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\citas\\EditarCita.jsx",["347","348","349","350","351","352","353","354"],"import React, { Component,useContext,useEffect } from 'react'\r\nimport api from '../../api'\r\nimport { useHistory,Redirect } from \"react-router-dom\";\r\nimport UserContext from \"../../context/userContext\";\r\nimport { useOktaAuth } from \"@okta/okta-react\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst Title = styled.h1.attrs({\r\n    className: 'h1',\r\n})``\r\n\r\nconst Wrapper = styled.div.attrs({\r\n    className: 'form-group',\r\n})`\r\n    margin: 0 30px;\r\n`\r\n\r\nconst Label = styled.label`\r\n    margin: 5px;\r\n`\r\n\r\nconst InputText = styled.input.attrs({\r\n    className: 'form-control',\r\n})`\r\n    margin: 5px;\r\n`\r\n\r\nconst Button = styled.button.attrs({\r\n    className: `btn btn-primary`,\r\n})`\r\n    margin: 15px 15px 15px 5px;\r\n`\r\n\r\nconst CancelButton = styled.a.attrs({\r\n    className: `btn btn-danger`,\r\n})`\r\n    margin: 15px 15px 15px 5px;\r\n`\r\n\r\n\r\nclass EditarCita extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            // idUser: this.props.match.params.idUser,\r\n            idUser: this.props.userData.id,\r\n            fecha: '',\r\n            ciudad:'',\r\n            direccion:'',\r\n            centroMedico:'',\r\n            motivo: '',\r\n        }\r\n    }\r\n\r\n    handleChangeInputFecha = async event => {\r\n        const fecha = event.target.value\r\n        this.setState({ fecha })\r\n    }\r\n    \r\n    handleChangeInputCiudad = async event => {\r\n        const ciudad = event.target.validity.valid\r\n            ? event.target.value\r\n            : this.state.ciudad\r\n\r\n        this.setState({ ciudad })\r\n    }\r\n\r\n    handleChangeInputDireccion = async event => {\r\n        const direccion = event.target.validity.valid\r\n            ? event.target.value\r\n            : this.state.direccion\r\n\r\n        this.setState({ direccion })\r\n    }\r\n\r\n    handleChangeInputCentroMedico = async event => {\r\n        const centroMedico = event.target.validity.valid\r\n            ? event.target.value\r\n            : this.state.centroMedico\r\n\r\n        this.setState({ centroMedico })\r\n    }\r\n\r\n    handleChangeInputMotivo = async event => {\r\n        const motivo = event.target.validity.valid\r\n            ? event.target.value\r\n            : this.state.motivo\r\n\r\n        this.setState({ motivo })\r\n    }\r\n    \r\n\r\n\r\n    handleUpdateCita = async () => {\r\n        const { id, fecha,ciudad,direccion,centroMedico, motivo } = this.state\r\n        const payload = { fecha,ciudad,direccion,centroMedico, motivo }\r\n\r\n        await api.editarCita(id, payload).then(res => {\r\n           console.log(`Cita updated successfully`)\r\n            this.setState({\r\n                fecha: '',\r\n                ciudad:'',\r\n                direccion:'',\r\n                centroMedico:'',\r\n                motivo: '',\r\n            })\r\n            this.props.history.push('/');\r\n        })\r\n    }\r\n\r\n    componentWillMount = async () => {\r\n        const { id } = this.state\r\n        const {idUser} =this.state\r\n        console.log(idUser)\r\n        const cita = await api.getCitaById(id)\r\n        if(idUser != cita.data.data.medico){\r\n            this.props.history.push('/error');\r\n        }\r\n        this.setState({\r\n            fecha: cita.data.data.fecha,\r\n            ciudad: cita.data.data.ciudad,\r\n            direccion: cita.data.data.direccion,\r\n            centroMedico: cita.data.data.centroMedico,\r\n            motivo: cita.data.data.motivo,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {fecha,ciudad,direccion,centroMedico, motivo,id } = this.state\r\n        return (\r\n            <Wrapper>\r\n                <Title>Editar cita</Title>\r\n\r\n                <Label>Fecha: </Label>\r\n                <InputText\r\n                    type=\"text\"\r\n                    value={fecha}\r\n                    onChange={this.handleChangeInputFecha}\r\n                />\r\n\r\n                <Label>Ciudad: </Label>\r\n                <InputText\r\n                    type=\"text\"\r\n                    value={ciudad}\r\n                    onChange={this.handleChangeInputCiudad}\r\n                />\r\n\r\n                <Label>Dirección: </Label>\r\n                <InputText\r\n                    type=\"text\"\r\n                    value={direccion}\r\n                    onChange={this.handleChangeInputDireccion}\r\n                />\r\n\r\n                <Label>Centro Médico: </Label>\r\n                <InputText\r\n                    type=\"text\"\r\n                    value={centroMedico}\r\n                    onChange={this.handleChangeInputCentroMedico}\r\n                />\r\n\r\n                <Label>Motivo: </Label>\r\n                <InputText\r\n                    type=\"text\"\r\n                    value={motivo}\r\n                    onChange={this.handleChangeInputMotivo}\r\n                />\r\n\r\n                <Button onClick={this.handleUpdateCita}>Editar cita</Button>\r\n                <CancelButton href={id+'/citas'}>Cancelar</CancelButton>\r\n            </Wrapper>\r\n        )\r\n}\r\n}\r\n\r\nexport default EditarCita","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\informes\\CrearInformeSangre.jsx",["355","356","357","358","359"],"import React, { useState, useContext,useEffect } from 'react';\r\nimport { useHistory, Redirect, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport ErrorNotice from \"../../components/misc/ErrorNotice\";\r\nimport UserContext from \"../../context/userContext\";\r\nimport Select from 'react-select';\r\nimport Async from 'react-async';\r\nimport api from '../../api'\r\nfunction CrearInformeSangre () {\r\nconst [fecha, setFecha] = useState();\r\nconst [observaciones, setObservaciones] = useState();\r\nconst { userData } = useContext(UserContext);\r\nconst { idUser } = useParams()\r\nconst paciente = idUser;\r\nconst medico = userData.user.id;\r\nconst { id } = useParams();\r\nconst cita = id;\r\nconst { tipoAnalisis } = useParams();\r\nconst tipoInforme = tipoAnalisis;\r\nconst [hematies, setHematies] = useState();\r\nconst [hemoglobina, setHemoglobina] = useState();\r\nconst [hematocrito, setHematocrito] = useState();\r\nconst [vcm, setVcm] = useState();\r\nconst [hcm, setHcm] = useState();\r\nconst [linfocitos, setLinfocitos] = useState();\r\nconst [neutrofilos, setNeutrofilos] = useState();\r\nconst [eosinofilos, setEosinofilos] = useState();\r\nconst [plaquetas, setPlaquetas] = useState();\r\nconst [vsg, setVsg] = useState();\r\nconst [glucosa, setGlucosa] = useState();\r\nconst [urea, setUrea] = useState();\r\nconst [acidoUrico, setAcidoUrico] = useState();\r\nconst [creatinina, setCreatinina] = useState();\r\nconst [colesterol, setColesterol] = useState();\r\nconst [trigliceridos, setTrigliceridos] = useState();\r\nconst [transaminasas, setTransaminasas] = useState();\r\nconst [fosfatasaAlcalina, setFosfatasaAlcalina] = useState();\r\nconst [calcio, setCalcio] = useState();\r\nconst [hierro, setHierro] = useState();\r\nconst [potasio, setPotasio] = useState();\r\nconst [sodio, setSodio] = useState();\r\nconst [bilirrubina, setBilirrubina] = useState();\r\n\r\nconst [error, setError] = useState();\r\nconst history = useHistory();\r\n\r\nconst submit = async (e) => {\r\ne.preventDefault();\r\ntry{\r\nconst newUser = {fecha,observaciones,cita,paciente,medico, tipoInforme, hematies, hemoglobina, hematocrito,vcm,hcm,linfocitos,neutrofilos,\r\n    eosinofilos, plaquetas, vsg,glucosa,urea,acidoUrico,creatinina,colesterol,trigliceridos,transaminasas, fosfatasaAlcalina,calcio,\r\n    hierro,potasio,sodio,bilirrubina};\r\nawait axios.post(\"http://localhost:5000/informes/analisis/sangre/add\", newUser);\r\n\r\nhistory.push(\"/\");\r\n} catch(err) {\r\nerr.response.data.msg && setError(err.response.data.msg)\r\n}\r\n};\r\n\r\n    return (\r\n    <div className=\"form-horizontal\">\r\n    <h2>Crear informe sangre:</h2>\r\n    {error && <ErrorNotice message={error} clearError={() => setError(undefined)} />}\r\n    <form onSubmit={submit}>\r\n    <div class=\"input\">\r\n    <div class=\"registerAux\">\r\n    <div class=\"inputBox\">\r\n    <label>Fecha: </label><br></br>\r\n    <input type=\"datetime-local\" id=\"fecha\" onChange={e => setFecha(e.target.value)}/><br></br>\r\n    </div>\r\n    <div class=\"inputBox\">\r\n    <label>Observaciones: </label><br></br>\r\n    <textarea id=\"observaciones\" onChange={e => setObservaciones(e.target.value)}/><br></br>\r\n    </div>\r\n    </div>\r\n    <div class=\"registerAux\">\r\n    <div class=\"inputBox-sangre\">\r\n    <label>Hematies: </label><br></br>\r\n    <input type=\"number\" step=\"0.01\" id=\"sangreInp\" onChange={e => setHematies(e.target.value)}/><br></br>\r\n    </div>\r\n    <div class=\"inputBox-sangre\">\r\n    <label>Hemoglobina: </label><br></br>\r\n    <input type=\"number\" step=\"0.01\" id=\"sangreInp\" onChange={e => setHemoglobina(e.target.value)}/><br></br>\r\n    </div>\r\n    <div class=\"inputBox-sangre\">\r\n    <label>Hematocrito: </label><br></br>\r\n    <input type=\"number\" step=\"0.01\" id=\"sangreInp\" onChange={e => setHematocrito(e.target.value)}/><br></br>\r\n    </div>\r\n    <div class=\"inputBox-sangre\">\r\n    <label>VCM: </label><br></br>\r\n    <input type=\"number\" step=\"0.01\" id=\"sangreInp\" onChange={e => setVcm(e.target.value)}/><br></br>\r\n    </div>\r\n    <div class=\"inputBox-sangre\">\r\n    <label>HCM: </label><br></br>\r\n    <input type=\"number\" step=\"0.01\" id=\"sangreInp\" onChange={e => setHcm(e.target.value)}/><br></br>\r\n    </div>\r\n    </div>\r\n    <div class=\"registerAux\">\r\n    <div class=\"inputBox-sangre\">\r\n    <label>Linfocitos: </label><br></br>\r\n    <input type=\"number\" step=\"0.01\" id=\"sangreInp\" onChange={e => setLinfocitos(e.target.value)}/><br></br>\r\n    </div>\r\n    <div class=\"inputBox-sangre\">\r\n    <label>Neutrofilos: </label><br></br>\r\n    <input type=\"number\" step=\"0.01\" id=\"sangreInp\" onChange={e => setNeutrofilos(e.target.value)}/><br></br>\r\n    </div>\r\n    <div class=\"inputBox-sangre\">\r\n    <label>Eosinofilos: </label><br></br>\r\n    <input type=\"number\" step=\"0.01\" id=\"sangreInp\" onChange={e => setEosinofilos(e.target.value)}/><br></br>\r\n    </div>\r\n    <div class=\"inputBox-sangre\">\r\n    <label>Plaquetas: </label><br></br>\r\n    <input type=\"number\" step=\"0.01\" id=\"sangreInp\" onChange={e => setPlaquetas(e.target.value)}/><br></br>\r\n    </div>\r\n    <div class=\"inputBox-sangre\">\r\n    <label>VSG: </label><br></br>\r\n    <input type=\"number\" step=\"0.01\" id=\"sangreInp\" onChange={e => setVsg(e.target.value)}/><br></br>\r\n    </div>\r\n    </div>\r\n    <div class=\"registerAux\">\r\n    <div class=\"inputBox-sangre\">\r\n    <label>Glucosa: </label><br></br>\r\n    <input type=\"number\" step=\"0.01\" id=\"sangreInp\" onChange={e => setGlucosa(e.target.value)}/><br></br>\r\n    </div>\r\n    <div class=\"inputBox-sangre\">\r\n    <label>Urea: </label><br></br>\r\n    <input type=\"number\" step=\"0.01\" id=\"sangreInp\" onChange={e => setUrea(e.target.value)}/><br></br>\r\n    </div>\r\n    <div class=\"inputBox-sangre\">\r\n    <label>Ácido úrico: </label><br></br>\r\n    <input type=\"number\" step=\"0.01\" id=\"sangreInp\" onChange={e => setAcidoUrico(e.target.value)}/><br></br>\r\n    </div>\r\n    <div class=\"inputBox-sangre\">\r\n    <label>Creatinina: </label><br></br>\r\n    <input type=\"number\" step=\"0.01\" id=\"sangreInp\" onChange={e => setCreatinina(e.target.value)}/><br></br>\r\n    </div>\r\n    <div class=\"inputBox-sangre\">\r\n    <label>Colesterol: </label><br></br>\r\n    <input type=\"number\" step=\"0.01\" id=\"sangreInp\" onChange={e => setColesterol(e.target.value)}/><br></br>\r\n    </div>\r\n    </div>\r\n    <div class=\"registerAux\">\r\n    <div class=\"inputBox-sangre\">\r\n    <label>Trigliceridos: </label><br></br>\r\n    <input type=\"number\" step=\"0.01\" id=\"sangreInp\" onChange={e => setTrigliceridos(e.target.value)}/><br></br>\r\n    </div>\r\n    <div class=\"inputBox-sangre\">\r\n    <label>Transaminasas: </label><br></br>\r\n    <input type=\"number\" step=\"0.01\" id=\"sangreInp\" onChange={e => setTransaminasas(e.target.value)}/><br></br>\r\n    </div>\r\n    <div class=\"inputBox-sangre\">\r\n    <label>Fosfatasa Alcalina: </label><br></br>\r\n    <input type=\"number\" step=\"0.01\" id=\"sangreInp\" onChange={e => setFosfatasaAlcalina(e.target.value)}/><br></br>\r\n    </div>\r\n    <div class=\"inputBox-sangre\">\r\n    <label>Calcio: </label><br></br>\r\n    <input type=\"number\" step=\"0.01\" id=\"sangreInp\" onChange={e => setCalcio(e.target.value)}/><br></br>\r\n    </div>\r\n    <div class=\"inputBox-sangre\">\r\n    <label>Hierro: </label><br></br>\r\n    <input type=\"number\" step=\"0.01\" id=\"sangreInp\" onChange={e => setHierro(e.target.value)}/><br></br>\r\n    </div>\r\n    </div>\r\n    <div class=\"registerAux\">\r\n    <div class=\"inputBox-sangre\">\r\n    <label>Potasio: </label><br></br>\r\n    <input type=\"number\" step=\"0.01\" id=\"sangreInp\" onChange={e => setPotasio(e.target.value)}/><br></br>\r\n    </div>\r\n    <div class=\"inputBox-sangre\">\r\n    <label>Sodio: </label><br></br>\r\n    <input type=\"number\" step=\"0.01\" id=\"sangreInp\" onChange={e => setSodio(e.target.value)}/><br></br>\r\n    </div>\r\n    <div class=\"inputBox-sangre\">\r\n    <label>Bilirrubina: </label><br></br>\r\n    <input type=\"number\" step=\"0.01\" id=\"sangreInp\" onChange={e => setBilirrubina(e.target.value)}/><br></br>\r\n    </div>\r\n    </div>\r\n    <div id=\"registrarPac\" class=\"inputBox\">\r\n    <input type=\"submit\" value=\"Crear\" className=\"btn btn-primary\" />\r\n    </div>\r\n    </div>\r\n    </form>\r\n    </div>\r\n    );\r\n}\r\nexport default CrearInformeSangre;","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\informes\\CrearInformeOrina.jsx",["360","361","362","363","364"],"import React, { useState, useContext,useEffect } from 'react';\r\nimport { useHistory, Redirect, useParams } from \"react-router-dom\";\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport axios from \"axios\";\r\nimport ErrorNotice from \"../../components/misc/ErrorNotice\";\r\nimport UserContext from \"../../context/userContext\";\r\nimport Select from 'react-select';\r\nimport Async from 'react-async';\r\nimport api from '../../api'\r\nfunction CrearInformeOrina () {\r\nconst [fecha, setFecha] = useState();\r\nconst [observaciones, setObservaciones] = useState();\r\nconst { userData } = useContext(UserContext);\r\nconst { idUser } = useParams()\r\nconst paciente = idUser;\r\nconst medico = userData.user.id;\r\nconst { id } = useParams();\r\nconst cita = id;\r\nconst { tipoAnalisis } = useParams();\r\nconst tipoInforme = tipoAnalisis;\r\nconst [densidad, setDensidad] = useState();\r\nconst [ph, setPh] = useState();\r\nconst [glucosa, setGlucosa] = useState();\r\nconst [proteina, setProteina] = useState();\r\nconst [hematies, setHematies] = useState();\r\nconst [leufocitos, setLeufocitos] = useState();\r\nconst [cetonas, setCetonas] = useState();\r\nconst [bilirrubina, setBilirrubina] = useState();\r\nconst [nitritos, setNitritos] = useState();\r\nconst [cristales, setCristales] = useState();\r\nconst [celulasEpiteliales, setCelulasEpiteliales] = useState();\r\nconst [cilindros, setCilindros] = useState();\r\nconst [bacterias, setBacterias] = useState();\r\n\r\nconst [error, setError] = useState();\r\nconst history = useHistory();\r\n\r\nconst submit = async (e) => {\r\ne.preventDefault();\r\ntry{\r\nconst newUser = {fecha,observaciones,cita,paciente,medico, tipoInforme, densidad, ph, glucosa,proteina,hematies,leufocitos,cetonas,\r\n    bilirrubina, nitritos, cristales,celulasEpiteliales,cilindros,bacterias};\r\nawait axios.post(\"http://localhost:5000/informes/analisis/orina/add\", newUser);\r\n\r\nhistory.push(\"/\");\r\n} catch(err) {\r\nerr.response.data.msg && setError(err.response.data.msg)\r\n}\r\n};\r\n\r\n    return (\r\n    <div className=\"form-horizontal\">\r\n    <h2>Crear consulta</h2>\r\n    {error && <ErrorNotice message={error} clearError={() => setError(undefined)} />}\r\n    <form onSubmit={submit}>\r\n    <div class=\"input\">\r\n    <div class=\"registerAux\">\r\n    <div class=\"inputBox\">\r\n    <label>Fecha: </label><br></br>\r\n    <input type=\"datetime-local\" id=\"fecha\" onChange={e => setFecha(e.target.value)}/><br></br>\r\n    </div>\r\n    <div class=\"inputBox\">\r\n    <label>Observaciones: </label><br></br>\r\n    <textarea id=\"observaciones\" onChange={e => setObservaciones(e.target.value)}/><br></br>\r\n    </div>\r\n    </div>\r\n    <div class=\"registerAux\">\r\n    <div class=\"inputBox-sangre\">\r\n    <label>Densidad: </label><br></br>\r\n    <input type=\"number\" step=\"0.01\" id=\"densidad\" onChange={e => setDensidad(e.target.value)}/><br></br>\r\n    </div>\r\n    <div class=\"inputBox-sangre\">\r\n    <label>PH: </label><br></br>\r\n    <input type=\"number\" step=\"0.01\" id=\"ph\" onChange={e => setPh(e.target.value)}/><br></br>\r\n    </div>\r\n    <div class=\"inputBox-sangre\">\r\n    <label>Glucosa: </label><br></br>\r\n    <input type=\"number\" step=\"0.01\" id=\"glucosa\" onChange={e => setGlucosa(e.target.value)}/><br></br>\r\n    </div>\r\n    <div class=\"inputBox-sangre\">\r\n    <label>Proteina: </label><br></br>\r\n    <input type=\"number\" step=\"0.01\" id=\"proteina\" onChange={e => setProteina(e.target.value)}/><br></br>\r\n    </div>\r\n    <div class=\"inputBox-sangre\">\r\n    <label>Hematies: </label><br></br>\r\n    <input type=\"number\" step=\"0.01\" id=\"hematies\" onChange={e => setHematies(e.target.value)}/><br></br>\r\n    </div>\r\n    </div>\r\n    <div class=\"registerAux\">\r\n    <div class=\"inputBox-sangre\">\r\n    <label>Leufocitos: </label><br></br>\r\n    <input type=\"number\" step=\"0.01\" id=\"leufocitos\" onChange={e => setLeufocitos(e.target.value)}/><br></br>\r\n    </div>\r\n    <div class=\"inputBox-sangre\">\r\n    <label>Cetonas: </label><br></br>\r\n    <input type=\"number\" step=\"0.01\" id=\"cetonas\" onChange={e => setCetonas(e.target.value)}/><br></br>\r\n    </div>\r\n    <div class=\"inputBox-sangre\">\r\n    <label>Bilirrubina: </label><br></br>\r\n    <input type=\"number\" step=\"0.01\" id=\"bilirrubina\" onChange={e => setBilirrubina(e.target.value)}/><br></br>\r\n    </div>\r\n    <div class=\"inputBox-sangre\">\r\n    <label>Nitritos: </label><br></br>\r\n    <Checkbox id=\"nitritos\" onClick={e => setNitritos(estadoCheckbox(e))}/><br></br>\r\n    </div>\r\n    <div class=\"inputBox-sangre\">\r\n    <label>Cristales: </label><br></br>\r\n    <Checkbox id=\"cristales\" onChange={e => setCristales(e.target.checked)}/><br></br>\r\n    </div>\r\n    </div>\r\n    <div class=\"registerAux\">\r\n    <div class=\"inputBox-sangre\">\r\n    <label>Células epiteliales: </label><br></br>\r\n    <Checkbox id=\"celulasEpiteliales\" onChange={e => setCelulasEpiteliales(e.target.checked)}/><br></br>\r\n    </div>\r\n    <div class=\"inputBox-sangre\">\r\n    <label>Cilindros: </label><br></br>\r\n    <Checkbox id=\"cilindros\" onChange={e => setCilindros(e.target.checked)}/><br></br>\r\n    </div>\r\n    <div class=\"inputBox-sangre\">\r\n    <label>Bacterias: </label><br></br>\r\n    <Checkbox id=\"bacterias\" onChange={e => setBacterias(e.target.checked)}/><br></br>\r\n    </div>\r\n    </div>\r\n    <div id=\"registrarPac\" class=\"inputBox\">\r\n    <input type=\"submit\" value=\"Crear\" className=\"btn btn-primary\" />\r\n    </div>\r\n    </div>\r\n    </form>\r\n    </div>\r\n    );\r\n}\r\n\r\nfunction estadoCheckbox(e){\r\n    let bol;\r\n    if(e.target.checked){\r\n        bol= true;\r\n    }else{\r\n        bol= false;\r\n    }\r\n    return bol;\r\n}\r\nexport default CrearInformeOrina;","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\informes\\CrearInformePresencial.jsx",["365","366","367","368","369","370"],"import React, { useState, useContext,useEffect } from 'react';\r\nimport { useHistory, Redirect, useParams } from \"react-router-dom\";\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport axios from \"axios\";\r\nimport ErrorNotice from \"../../components/misc/ErrorNotice\";\r\nimport UserContext from \"../../context/userContext\";\r\nimport Select from 'react-select';\r\nimport Async from 'react-async';\r\nimport api from '../../api'\r\nfunction CrearInformePresencial () {\r\nconst [fecha, setFecha] = useState();\r\nconst [motivo, setMotivo] = useState();\r\nconst [diagnostico, setDiagnostico] = useState();\r\nconst [descripcion, setDescripcion] = useState();\r\nconst { userData } = useContext(UserContext);\r\nconst { idUser } = useParams()\r\nconst paciente = idUser;\r\nconst medico = userData.user.id;\r\nconst { id } = useParams();\r\nconst cita = id;\r\n\r\nconst [error, setError] = useState();\r\nconst history = useHistory();\r\n\r\nconst submit = async (e) => {\r\ne.preventDefault();\r\ntry{\r\nconst newUser = {fecha,motivo,diagnostico,descripcion,cita,paciente,medico};\r\nawait axios.post(\"http://localhost:5000/informes/presencial/add\", newUser);\r\n\r\nhistory.push(\"/\");\r\n} catch(err) {\r\nerr.response.data.msg && setError(err.response.data.msg)\r\n}\r\n};\r\n\r\n    return (\r\n    <div className=\"form-horizontal\">\r\n    <h2>Crear informe presencial</h2>\r\n    {error && <ErrorNotice message={error} clearError={() => setError(undefined)} />}\r\n    <form onSubmit={submit}>\r\n    <div class=\"input\">\r\n    <div class=\"registerAux\">\r\n    <div class=\"inputBox\">\r\n    <label>Fecha: </label><br></br>\r\n    <input type=\"datetime-local\" id=\"fecha\" onChange={e => setFecha(e.target.value)}/><br></br>\r\n    </div>\r\n    <div class=\"inputBox\">\r\n    <label>Motivo: </label><br></br>\r\n    <input type=\"text\" id=\"motivo\" onChange={e => setMotivo(e.target.value)}/><br></br>\r\n    </div>\r\n    </div>\r\n    <div class=\"registerAux\">\r\n    <div class=\"inputBox\">\r\n    <label>Descripción: </label><br></br>\r\n    <input type=\"text\" id=\"descripcion\" onChange={e => setDescripcion(e.target.value)}/><br></br>\r\n    </div>\r\n    <div class=\"inputBox\">\r\n    <label>Diagnóstico: </label><br></br>\r\n    <textarea id=\"diagnostico\" onChange={e => setDiagnostico(e.target.value)}/><br></br>\r\n    </div>\r\n    </div>\r\n    <div id=\"registrarPac\" class=\"inputBox\">\r\n    <input type=\"submit\" value=\"Crear\" className=\"btn btn-primary\" />\r\n    </div>\r\n    </div>\r\n    </form>\r\n    </div>\r\n    );\r\n}\r\nexport default CrearInformePresencial;","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\informes\\CrearInformePrueba.jsx",["371","372","373","374","375","376"],"import React, { useState, useContext,useEffect } from 'react';\r\nimport { useHistory, Redirect, useParams } from \"react-router-dom\";\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport axios from \"axios\";\r\nimport ErrorNotice from \"../../components/misc/ErrorNotice\";\r\nimport UserContext from \"../../context/userContext\";\r\nimport Select from 'react-select';\r\nimport Async from 'react-async';\r\nimport api from '../../api'\r\nfunction CrearInformePrueba () {\r\nconst [fecha, setFecha] = useState();\r\nconst [resultado, setResultado] = useState();\r\nconst [nombre, setNombre] = useState();\r\nconst [descripcion, setDescripcion] = useState();\r\nconst { userData } = useContext(UserContext);\r\nconst { idUser } = useParams()\r\nconst paciente = idUser;\r\nconst medico = userData.user.id;\r\nconst { id } = useParams();\r\nconst cita = id;\r\n\r\nconst [error, setError] = useState();\r\nconst history = useHistory();\r\n\r\nconst submit = async (e) => {\r\ne.preventDefault();\r\ntry{\r\nconst newUser = {fecha,resultado,nombre,descripcion,cita,paciente,medico};\r\nawait axios.post(\"http://localhost:5000/informes/prueba/add\", newUser);\r\n\r\nhistory.push(\"/\");\r\n} catch(err) {\r\nerr.response.data.msg && setError(err.response.data.msg)\r\n}\r\n};\r\n\r\n    return (\r\n    <div className=\"form-horizontal\">\r\n    <h2>Crear informe prueba</h2>\r\n    {error && <ErrorNotice message={error} clearError={() => setError(undefined)} />}\r\n    <form onSubmit={submit}>\r\n    <div class=\"input\">\r\n    <div class=\"registerAux\">\r\n    <div class=\"inputBox\">\r\n    <label>Fecha: </label><br></br>\r\n    <input type=\"datetime-local\" id=\"fecha\" onChange={e => setFecha(e.target.value)}/><br></br>\r\n    </div>\r\n    <div class=\"inputBox\">\r\n    <label>Nombre: </label><br></br>\r\n    <input type=\"text\" id=\"nombre\" onChange={e => setNombre(e.target.value)}/><br></br>\r\n    </div>\r\n    </div>\r\n    <div class=\"registerAux\">\r\n    <div class=\"inputBox\">\r\n    <label>Descripción: </label><br></br>\r\n    <input type=\"text\" id=\"descripcion\" onChange={e => setDescripcion(e.target.value)}/><br></br>\r\n    </div>\r\n    <div class=\"inputBox\">\r\n    <label>Resultados: </label><br></br>\r\n    <textarea id=\"resultado\" onChange={e => setResultado(e.target.value)}/><br></br>\r\n    </div>\r\n    </div>\r\n    <div id=\"registrarPac\" class=\"inputBox\">\r\n    <input type=\"submit\" value=\"Crear\" className=\"btn btn-primary\" />\r\n    </div>\r\n    </div>\r\n    </form>\r\n    </div>\r\n    );\r\n}\r\nexport default CrearInformePrueba;","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\informes\\Informes.jsx",["377","378","379","380","381","382","383","384","385"],"import React, { Component, useEffect, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport moment from 'moment';\r\nimport api from '../../api'\r\nimport UserContext from \"../../context/userContext\";\r\n\r\nfunction ListaInformes(props) {\r\n    const history = useHistory();\r\n    let content;\r\n    let content2;\r\n    let content3;\r\n    let content4;\r\n    let content5;\r\n    if(props.rol==\"Paciente\"){\r\n        content = props.informeSangre.map((informeSangre) =>\r\n        <div class=\"cards\">\r\n            <br></br>\r\n        <div class=\"cita\" key={informeSangre._id}>\r\n            <p>Tipo de informe: {informeSangre.tipoInforme}</p>\r\n            <p>Fecha:{moment(informeSangre.fecha).format('DD/MM/yyyy')}</p>\r\n            <p>Medico: {informeSangre.medico.nickname}</p>\r\n            <p>Observaciones: {informeSangre.observaciones}</p>\r\n        </div>\r\n        </div>\r\n        );\r\n        content2 = props.informeOrina.map((informeOrina) =>\r\n        <div class=\"cards\">\r\n            <br></br>\r\n        <div class=\"cita\" key={informeOrina._id}>\r\n            <p>Tipo de informe: {informeOrina.tipoInforme}</p>\r\n            <p>Fecha:{moment(informeOrina.fecha).format('DD/MM/yyyy')}</p>\r\n            <p>Medico: {informeOrina.medico.nickname}</p>\r\n            <p>Observaciones: {informeOrina.observaciones}</p>\r\n        </div>\r\n        </div>\r\n        );\r\n        content3 = props.informePrueba.map((informePrueba) =>\r\n        <div class=\"cards\">\r\n            <br></br>\r\n        <div class=\"cita\" key={informePrueba._id}>\r\n            <p>Tipo de informe: {informePrueba.tipoInforme}</p>\r\n            <p>Prueba: {informePrueba.nombre}</p>\r\n            <p>Fecha:{moment(informePrueba.fecha).format('DD/MM/yyyy')}</p>\r\n            <p>Médico: {informePrueba.medico.nickname}</p>\r\n            <p>Descripción: {informePrueba.descripcion}</p>\r\n            <p>Resultados: {informePrueba.resultado}</p>\r\n        </div>\r\n        </div>\r\n        );\r\n        content4 = props.informePresencial.map((informePresencial) =>\r\n        <div class=\"cards\">\r\n            <br></br>\r\n        <div class=\"cita\" key={informePresencial._id}>\r\n        <p>Tipo de informe: {informePresencial.tipoInforme}</p>\r\n            <p>Motivo: {informePresencial.motivo}</p>\r\n            <p>Fecha:{moment(informePresencial.fecha).format('DD/MM/yyyy')}</p>\r\n            <p>Médico: {informePresencial.medico.nickname}</p>\r\n            <p>Descripción: {informePresencial.descripcion}</p>\r\n            <p>Diagnóstico: {informePresencial.diagnostico}</p>\r\n        </div>\r\n        </div>\r\n        );\r\n\r\n        content5 = props.informePcr.map((informePcr) =>\r\n        <div class=\"cards\">\r\n            <br></br>\r\n        <div class=\"cita\" key={informePcr._id}>\r\n        <p>Tipo de informe: {informePcr.tipoInforme}</p>\r\n            <p>Motivo: {informePcr.motivo}</p>\r\n            <p>Fecha:{moment(informePcr.fecha).format('DD/MM/yyyy')}</p>\r\n            <p>Médico: {informePcr.medico.nickname}</p>\r\n            <p>Descripción: {informePcr.descripcion}</p>\r\n            <p>Es positivo: {cambiaDisplay(informePcr.esPositivo)}</p>\r\n        </div>\r\n        </div>\r\n        );\r\n        return (\r\n        <div>\r\n            {content}\r\n            {content2}\r\n            {content3}\r\n            {content4}\r\n            {content5}\r\n            <br></br>\r\n        </div>\r\n        );\r\n        }else{\r\n            content = props.informeSangre.map((informeSangre) =>\r\n            <div class=\"cards\">\r\n                <br></br>\r\n            <div class=\"cita\" key={informeSangre._id}>\r\n            <p>Tipo de informe: {informeSangre.tipoInforme}</p>\r\n            <p>Fecha:{moment(informeSangre.fecha).format('DD/MM/yyyy')}</p>\r\n            <p>Paciente: {informeSangre.paciente.nickname}</p>\r\n            <p>Observaciones: {informeSangre.observaciones}</p>\r\n                <div class=\"consultaBotones\">\r\n                <EditarInformeSangre id={informeSangre._id} />\r\n                </div>\r\n                <div class=\"consultaBotones\">\r\n                <EliminarInformeSangre id={informeSangre._id}/>\r\n                </div>\r\n\r\n            </div>\r\n            </div>\r\n            );\r\n            content2 = props.informeOrina.map((informeOrina) =>\r\n            <div class=\"cards\">\r\n                <br></br>\r\n            <div class=\"cita\" key={informeOrina._id}>\r\n            <p>Tipo de informe: {informeOrina.tipoInforme}</p>\r\n            <p>Fecha:{moment(informeOrina.fecha).format('DD/MM/yyyy')}</p>\r\n            <p>Paciente: {informeOrina.paciente.nickname}</p>\r\n            <p>Observaciones: {informeOrina.observaciones}</p>\r\n            <div class=\"consultaBotones\">\r\n                <EditarInformeOrina id={informeOrina._id} />\r\n                </div>\r\n                <div class=\"consultaBotones\">\r\n                <EliminarInformeOrina id={informeOrina._id}/>\r\n                </div>\r\n\r\n            </div>\r\n            </div>\r\n            );\r\n            content3 = props.informePrueba.map((informePrueba) =>\r\n            <div class=\"cards\">\r\n                <br></br>\r\n            <div class=\"cita\" key={informePrueba._id}>\r\n                <p>Tipo de informe: {informePrueba.tipoInforme}</p>\r\n                <p>Prueba: {informePrueba.nombre}</p>\r\n                <p>Fecha:{moment(informePrueba.fecha).format('DD/MM/yyyy')}</p>\r\n                <p>Paciente: {informePrueba.paciente.nickname}</p>\r\n                <p>Descripción: {informePrueba.descripcion}</p>\r\n                <p>Resultados: {informePrueba.resultado}</p>\r\n                <div class=\"consultaBotones\">\r\n                <EditarInformePrueba id={informePrueba._id} />\r\n                </div>\r\n                <div class=\"consultaBotones\">\r\n                <EliminarInformePrueba id={informePrueba._id}/>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            );\r\n            content4 = props.informePresencial.map((informePresencial) =>\r\n            <div class=\"cards\">\r\n                <br></br>\r\n            <div class=\"cita\" key={informePresencial._id}>\r\n                <p>Tipo de informe: {informePresencial.tipoInforme}</p>\r\n                <p>Motivo: {informePresencial.motivo}</p>\r\n                <p>Fecha:{moment(informePresencial.fecha).format('DD/MM/yyyy')}</p>\r\n                <p>Paciente: {informePresencial.paciente.nickname}</p>\r\n                <p>Descripción: {informePresencial.descripcion}</p>\r\n                <p>Diagnóstico: {informePresencial.diagnostico}</p>\r\n                <div class=\"consultaBotones\">\r\n                <EditarInformePresencial id={informePresencial._id} />\r\n                </div>\r\n                <div class=\"consultaBotones\">\r\n                <EliminarInformePresencial id={informePresencial._id}/>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            );\r\n\r\n            content5 = props.informePcr.map((informePcr) =>\r\n            <div class=\"cards\">\r\n                <br></br>\r\n            <div class=\"cita\" key={informePcr._id}>\r\n            <p>Tipo de informe: {informePcr.tipoInforme}</p>\r\n                <p>Motivo: {informePcr.motivo}</p>\r\n                <p>Fecha:{moment(informePcr.fecha).format('DD/MM/yyyy')}</p>\r\n                <p>Paciente: {informePcr.paciente.nickname}</p>\r\n                <p>Descripción: {informePcr.descripcion}</p>\r\n                <p>Es positivo: {cambiaDisplay(informePcr.esPositivo)}</p>\r\n            </div>\r\n            </div>\r\n            );\r\n            return (\r\n            <div>\r\n                {content}\r\n                {content2}\r\n                {content3}\r\n                {content4}\r\n                {content5}\r\n                <br></br>\r\n            </div>\r\n            );\r\n        }\r\n  }\r\n\r\n  function cambiaDisplay(valor){\r\n    let final;\r\n    if(valor==true){\r\n        final=\"Sí\"\r\n    }else{\r\n        final=\"No\"\r\n    }\r\n    return final;\r\n}\r\n\r\n    function EditarInformeSangre(props) {\r\n        const history = useHistory();\r\n        const { userData } = useContext(UserContext);\r\n        const editarInforme = () => history.push(\"/\"+userData.user.id+\"/informesSangre/\"+props.id+\"/edit\");\r\n        return(\r\n            <button className=\"rad-button-2 wwt flat\" onClick={editarInforme}>Editar informe</button>\r\n        );\r\n    }\r\n\r\n    function EditarInformeOrina(props) {\r\n        const history = useHistory();\r\n        const { userData } = useContext(UserContext);\r\n        const editarInforme = () => history.push(\"/\"+userData.user.id+\"/informesOrina/\"+props.id+\"/edit\");\r\n        return(\r\n            <button className=\"rad-button-2 wwt flat\" onClick={editarInforme}>Editar informe</button>\r\n        );\r\n    }\r\n\r\n    function EditarInformePrueba(props) {\r\n        const history = useHistory();\r\n        const { userData } = useContext(UserContext);\r\n        const editarInforme = () => history.push(\"/\"+userData.user.id+\"/informesPrueba/\"+props.id+\"/edit\");\r\n        return(\r\n            <button className=\"rad-button-2 wwt flat\" onClick={editarInforme}>Editar informe</button>\r\n        );\r\n    }\r\n\r\n    function EditarInformePresencial(props) {\r\n        const history = useHistory();\r\n        const { userData } = useContext(UserContext);\r\n        const editarInforme = () => history.push(\"/\"+userData.user.id+\"/informesPresencial/\"+props.id+\"/edit\");\r\n        return(\r\n            <button className=\"rad-button-2 wwt flat\" onClick={editarInforme}>Editar informe</button>\r\n        );\r\n    }\r\n\r\n    function EliminarInformeSangre(props) {\r\n        const history = useHistory();\r\n        const eliminarInforme = () => {\r\n            api.eliminarInformeSangre(props.id)\r\n            window.location.reload()\r\n        }\r\n        return(\r\n            <button className=\"rad-button-2 wwt flat\" onClick={eliminarInforme}>Eliminar informe</button>\r\n        );\r\n    }\r\n\r\n    function EliminarInformeOrina(props) {\r\n        const history = useHistory();\r\n        const eliminarInforme = () => {\r\n            api.eliminarInformeOrina(props.id)\r\n            window.location.reload()\r\n        }\r\n        return(\r\n            <button className=\"rad-button-2 wwt flat\" onClick={eliminarInforme}>Eliminar informe</button>\r\n        );\r\n    }\r\n\r\n    function EliminarInformePrueba(props) {\r\n        const history = useHistory();\r\n        const eliminarInforme = () => {\r\n            api.eliminarInformePrueba(props.id)\r\n            window.location.reload()\r\n        }\r\n        return(\r\n            <button className=\"rad-button-2 wwt flat\" onClick={eliminarInforme}>Eliminar informe</button>\r\n        );\r\n    }\r\n\r\n    function EliminarInformePresencial(props) {\r\n        const history = useHistory();\r\n        const eliminarInforme = () => {\r\n            api.eliminarInformePresencial(props.id)\r\n            window.location.reload()\r\n        }\r\n        return(\r\n            <button className=\"rad-button-2 wwt flat\" onClick={eliminarInforme}>Eliminar informe</button>\r\n        );\r\n    }\r\n\r\n\r\nexport default class Informes extends React.Component{\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            rol: this.props.userData.rol,\r\n        }\r\n    }\r\n\r\n    async componentWillMount(){\r\n        const { id } = this.state\r\n        const { rol } = this.state\r\n        let url;\r\n        let url2;\r\n        let url3;\r\n        let url4;\r\n        let url5;\r\n        // if(rol==\"Paciente\"){\r\n            url = await api.getInformeAnalisisSangreByPaciente(id)\r\n            url2 = await api.getInformeAnalisisOrinaByPaciente(id)\r\n            url3 = await api.getInformePruebaByPaciente(id)\r\n            url4 = await api.getInformePresencialByPaciente(id)\r\n            url5 = await api.getInformePcrByPaciente(id)\r\n        // }else{\r\n        //     url = await api.getInformeAnalisisSangreByMedico(id)\r\n        //     url2 = await api.getInformeAnalisisOrinaByMedico(id)\r\n        //     url3 = await api.getInformePruebaByMedico(id)\r\n        //     url4 = await api.getInformePresencialByMedico(id)\r\n        //     url5 = await api.getInformePcrByMedico(id)\r\n        // }\r\n        this.setState({informeSangre: url.data.data,informeOrina: url2.data.data,informePrueba: url3.data.data,informePresencial: url4.data.data,\r\n            informePcr: url5.data.data, loading:false, rol:rol});\r\n    }\r\n    \r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                {this.state.loading || !this.state.informeSangre || !this.state.informeOrina || !this.state.informePrueba || !this.state.informePresencial ? (\r\n                    <div>loading...</div>\r\n                ):(\r\n                    <div>\r\n                        <ListaInformes informeSangre={this.state.informeSangre} informeOrina={this.state.informeOrina} \r\n                        informePrueba={this.state.informePrueba} informePresencial={this.state.informePresencial} \r\n                        informePcr={this.state.informePcr} rol={this.state.rol} />\r\n                        \r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\informes\\EditarInformeSangre.jsx",["386","387","388","389","390","391","392","393","394"],"import React, { Component,useContext,useEffect } from 'react'\r\nimport api from '../../api'\r\nimport { useHistory,Redirect } from \"react-router-dom\";\r\nimport UserContext from \"../../context/userContext\";\r\nimport { useOktaAuth } from \"@okta/okta-react\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst Title = styled.h1.attrs({\r\n    className: 'h1',\r\n})``\r\n\r\nconst Wrapper = styled.div.attrs({\r\n    className: 'form-group',\r\n})`\r\n    margin: 0 30px;\r\n`\r\n\r\nconst Label = styled.label`\r\n    margin: 5px;\r\n`\r\n\r\nconst InputText = styled.input.attrs({\r\n    className: 'form-control',\r\n})`\r\n    margin: 5px;\r\n`\r\n\r\nconst Button = styled.button.attrs({\r\n    className: `btn btn-primary`,\r\n})`\r\n    margin: 15px 15px 15px 5px;\r\n`\r\n\r\nconst CancelButton = styled.a.attrs({\r\n    className: `btn btn-danger`,\r\n})`\r\n    margin: 15px 15px 15px 5px;\r\n`\r\n\r\n\r\nclass EditarInformeSangre extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            // idUser: this.props.match.params.idUser,\r\n            idUser: this.props.userData.id,\r\n            fecha : '',\r\n            observaciones  : '',\r\n            hematies : '',\r\n            hemoglobina : '',\r\n            hematocrito : '',\r\n            vcm : '',\r\n            hcm : '',\r\n            linfocitos : '',\r\n            neutrofilos : '',\r\n            eosinofilos : '',\r\n            plaquetas : '',\r\n            vsg : '',\r\n            glucosa : '',\r\n            urea : '',\r\n            acidoUrico : '',\r\n            creatinina : '',\r\n            colesterol : '',\r\n            trigliceridos : '',\r\n            transaminasas : '',\r\n            fosfatasaAlcalina : '',\r\n            calcio : '',\r\n            hierro : '',\r\n            potasio : '',\r\n            sodio : '',\r\n            bilirrubina : '',\r\n        }\r\n    }\r\n\r\n    handleChangeInputFecha = async event => {\r\n        const fecha = event.target.value\r\n        this.setState({ fecha })\r\n    }\r\n    \r\n    handleChangeInputObservaciones = async event => {\r\n        const observaciones = event.target.validity.valid\r\n            ? event.target.value\r\n            : this.state.observaciones\r\n\r\n        this.setState({ observaciones })\r\n    }\r\n\r\n    handleChangeInputHematies = async event => {\r\n        const hematies = event.target.validity.valid\r\n            ? event.target.value\r\n            : this.state.hematies\r\n\r\n        this.setState({ hematies })\r\n    }\r\n\r\n    handleChangeInputHemoglobina = async event => {\r\n        const hemoglobina = event.target.validity.valid\r\n            ? event.target.value\r\n            : this.state.hemoglobina\r\n\r\n        this.setState({ hemoglobina })\r\n    }\r\n\r\n    handleChangeInputHematocrito = async event => {\r\n        const hematocrito = event.target.validity.valid\r\n            ? event.target.value\r\n            : this.state.hematocrito\r\n\r\n        this.setState({ hematocrito })\r\n    }\r\n\r\n    handleChangeInputVcm = async event => {\r\n        const vcm = event.target.validity.valid\r\n            ? event.target.value\r\n            : this.state.vcm\r\n\r\n        this.setState({ vcm })\r\n    }\r\n\r\n    handleChangeInputHcm = async event => {\r\n        const hcm = event.target.validity.valid\r\n            ? event.target.value\r\n            : this.state.hcm\r\n\r\n        this.setState({ hcm })\r\n    }\r\n\r\n    handleChangeInputLinfocitos = async event => {\r\n        const linfocitos = event.target.validity.valid\r\n            ? event.target.value\r\n            : this.state.linfocitos\r\n\r\n        this.setState({ linfocitos })\r\n    }\r\n\r\n    handleChangeInputNeutrofilos = async event => {\r\n        const neutrofilos = event.target.validity.valid\r\n            ? event.target.value\r\n            : this.state.neutrofilos\r\n\r\n        this.setState({ neutrofilos })\r\n    }\r\n\r\n    handleChangeInputEosinofilos = async event => {\r\n        const eosinofilos = event.target.validity.valid\r\n            ? event.target.value\r\n            : this.state.eosinofilos\r\n\r\n        this.setState({ eosinofilos })\r\n    }\r\n\r\n    handleChangeInputPlaquetas = async event => {\r\n        const plaquetas = event.target.validity.valid\r\n            ? event.target.value\r\n            : this.state.plaquetas\r\n\r\n        this.setState({ plaquetas })\r\n    }\r\n\r\n    handleChangeInputVsg = async event => {\r\n        const vsg = event.target.validity.valid\r\n            ? event.target.value\r\n            : this.state.vsg\r\n\r\n        this.setState({ vsg })\r\n    }\r\n\r\n    handleChangeInputGlucosa = async event => {\r\n        const glucosa = event.target.validity.valid\r\n            ? event.target.value\r\n            : this.state.glucosa\r\n\r\n        this.setState({ glucosa })\r\n    }\r\n\r\n    handleChangeInputUrea = async event => {\r\n        const urea = event.target.validity.valid\r\n            ? event.target.value\r\n            : this.state.urea\r\n\r\n        this.setState({ urea })\r\n    }\r\n\r\n    handleChangeInputAcidoUrico = async event => {\r\n        const acidoUrico = event.target.validity.valid\r\n            ? event.target.value\r\n            : this.state.acidoUrico\r\n\r\n        this.setState({ acidoUrico })\r\n    }\r\n\r\n    handleChangeInputCreatinina = async event => {\r\n        const creatinina = event.target.validity.valid\r\n            ? event.target.value\r\n            : this.state.creatinina\r\n\r\n        this.setState({ creatinina })\r\n    }\r\n    \r\n    handleChangeInputColesterol = async event => {\r\n        const colesterol = event.target.validity.valid\r\n            ? event.target.value\r\n            : this.state.colesterol\r\n\r\n        this.setState({ colesterol })\r\n    }\r\n\r\n    handleChangeInputTrigliceridos = async event => {\r\n        const trigliceridos = event.target.validity.valid\r\n            ? event.target.value\r\n            : this.state.trigliceridos\r\n\r\n        this.setState({ trigliceridos })\r\n    }\r\n\r\n    handleChangeInputTransaminasas = async event => {\r\n        const transaminasas = event.target.validity.valid\r\n            ? event.target.value\r\n            : this.state.transaminasas\r\n\r\n        this.setState({ transaminasas })\r\n    }\r\n\r\n    handleChangeInputFosfatasaAlcalina = async event => {\r\n        const fosfatasaAlcalina = event.target.validity.valid\r\n            ? event.target.value\r\n            : this.state.fosfatasaAlcalina\r\n\r\n        this.setState({ fosfatasaAlcalina })\r\n    }\r\n\r\n    handleChangeInputCalcio = async event => {\r\n        const calcio = event.target.validity.valid\r\n            ? event.target.value\r\n            : this.state.calcio\r\n\r\n        this.setState({ calcio })\r\n    }\r\n\r\n    handleChangeInputHierro = async event => {\r\n        const hierro = event.target.validity.valid\r\n            ? event.target.value\r\n            : this.state.hierro\r\n\r\n        this.setState({ hierro })\r\n    }\r\n\r\n    handleChangeInputPotasio = async event => {\r\n        const potasio = event.target.validity.valid\r\n            ? event.target.value\r\n            : this.state.potasio\r\n\r\n        this.setState({ potasio })\r\n    }\r\n    \r\n    handleChangeInputSodio = async event => {\r\n        const sodio = event.target.validity.valid\r\n            ? event.target.value\r\n            : this.state.sodio\r\n\r\n        this.setState({ sodio })\r\n    }\r\n\r\n    handleChangeInputBilirrubina = async event => {\r\n        const bilirrubina = event.target.validity.valid\r\n            ? event.target.value\r\n            : this.state.bilirrubina\r\n\r\n        this.setState({ bilirrubina })\r\n    }\r\n\r\n\r\n    handleUpdateInformeSangre = async () => {\r\n        const { id, fecha,observaciones, hematies, hemoglobina, hematocrito,vcm,hcm,linfocitos,neutrofilos,\r\n            eosinofilos, plaquetas, vsg,glucosa,urea,acidoUrico,creatinina,colesterol,trigliceridos,transaminasas, fosfatasaAlcalina,calcio,\r\n            hierro,potasio,sodio,bilirrubina } = this.state\r\n        const payload = { fecha,observaciones, hematies, hemoglobina, hematocrito,vcm,hcm,linfocitos,neutrofilos,\r\n            eosinofilos, plaquetas, vsg,glucosa,urea,acidoUrico,creatinina,colesterol,trigliceridos,transaminasas, fosfatasaAlcalina,calcio,\r\n            hierro,potasio,sodio,bilirrubina }\r\n\r\n        await api.editarInformeSangre(id, payload).then(res => {\r\n           console.log(`Informe updated successfully`)\r\n            this.setState({\r\n                fecha : '',\r\n                observaciones  : '',\r\n                hematies : '',\r\n                hemoglobina : '',\r\n                hematocrito : '',\r\n                vcm : '',\r\n                hcm : '',\r\n                linfocitos : '',\r\n                neutrofilos : '',\r\n                eosinofilos : '',\r\n                plaquetas : '',\r\n                vsg : '',\r\n                glucosa : '',\r\n                urea : '',\r\n                acidoUrico : '',\r\n                creatinina : '',\r\n                colesterol : '',\r\n                trigliceridos : '',\r\n                transaminasas : '',\r\n                fosfatasaAlcalina : '',\r\n                calcio : '',\r\n                hierro : '',\r\n                potasio : '',\r\n                sodio : '',\r\n                bilirrubina : '',\r\n            })\r\n            this.props.history.push('/');\r\n        })\r\n    }\r\n\r\n    componentWillMount = async () => {\r\n        const { id } = this.state\r\n        const {idUser} =this.state\r\n        console.log(idUser)\r\n        const informeSangre = await api.getInformeSangre(id)\r\n        if(idUser != informeSangre.data.data.medico){\r\n            this.props.history.push('/error');\r\n        }\r\n        this.setState({\r\n            fecha : informeSangre.data.data.fecha,\r\n            observaciones  : informeSangre.data.data.observaciones,\r\n            hematies : informeSangre.data.data.hematies,\r\n            hemoglobina : informeSangre.data.data.hemoglobina,\r\n            hematocrito : informeSangre.data.data.hematocrito,\r\n            vcm : informeSangre.data.data.vcm,\r\n            hcm : informeSangre.data.data.hcm,\r\n            linfocitos : informeSangre.data.data.linfocitos,\r\n            neutrofilos : informeSangre.data.data.neutrofilos,\r\n            eosinofilos : informeSangre.data.data.eosinofilos,\r\n            plaquetas : informeSangre.data.data.plaquetas,\r\n            vsg : informeSangre.data.data.vsg,\r\n            glucosa : informeSangre.data.data.glucosa,\r\n            urea : informeSangre.data.data.urea,\r\n            acidoUrico : informeSangre.data.data.acidoUrico,\r\n            creatinina : informeSangre.data.data.creatinina,\r\n            colesterol : informeSangre.data.data.colesterol,\r\n            trigliceridos : informeSangre.data.data.trigliceridos,\r\n            transaminasas : informeSangre.data.data.transaminasas,\r\n            fosfatasaAlcalina : informeSangre.data.data.fosfatasaAlcalina,\r\n            calcio : informeSangre.data.data.calcio,\r\n            hierro : informeSangre.data.data.hierro,\r\n            potasio : informeSangre.data.data.potasio,\r\n            sodio : informeSangre.data.data.sodio,\r\n            bilirrubina : informeSangre.data.data.bilirrubina,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {id, fecha,observaciones, hematies, hemoglobina, hematocrito,vcm,hcm,linfocitos,neutrofilos,\r\n            eosinofilos, plaquetas, vsg,glucosa,urea,acidoUrico,creatinina,colesterol,trigliceridos,transaminasas, fosfatasaAlcalina,calcio,\r\n            hierro,potasio,sodio,bilirrubina } = this.state\r\n        return (\r\n            <Wrapper>\r\n                <Title>Editar informe de sangre</Title>\r\n\r\n                <Label>Fecha: </Label>\r\n                <InputText\r\n                    type=\"text\"\r\n                    value={fecha}\r\n                    onChange={this.handleChangeInputFecha}\r\n                />\r\n\r\n                <Label>Observaciones: </Label>\r\n                <InputText\r\n                    type=\"text\"\r\n                    value={observaciones}\r\n                    onChange={this.handleChangeInputObservaciones}\r\n                />\r\n\r\n                <Label>Hematies: </Label>\r\n                <InputText\r\n                    type=\"number\"\r\n                    step=\"0.01\"\r\n                    value={hematies}\r\n                    onChange={this.handleChangeInputHematies}\r\n                />\r\n\r\n                \r\n                <Label>Hemoglobina: </Label>\r\n                <InputText\r\n                    type=\"number\"\r\n                    step=\"0.01\"\r\n                    value={hemoglobina}\r\n                    onChange={this.handleChangeInputHemoglobina}\r\n                />\r\n\r\n                <Label>Hematocrito: </Label>\r\n                <InputText\r\n                    type=\"number\"\r\n                    step=\"0.01\"\r\n                    value={hematocrito}\r\n                    onChange={this.handleChangeInputHematocrito}\r\n                />\r\n\r\n                <Label>VCM: </Label>\r\n                <InputText\r\n                    type=\"number\"\r\n                    step=\"0.01\"\r\n                    value={vcm}\r\n                    onChange={this.handleChangeInputVcm}\r\n                />\r\n\r\n                <Label>HCM: </Label>\r\n                <InputText\r\n                    type=\"number\"\r\n                    step=\"0.01\"\r\n                    value={hcm}\r\n                    onChange={this.handleChangeInputHcm}\r\n                />\r\n\r\n                <Label>Linfocitos: </Label>\r\n                <InputText\r\n                    type=\"number\"\r\n                    step=\"0.01\"\r\n                    value={linfocitos}\r\n                    onChange={this.handleChangeInputLinfocitos}\r\n                />\r\n\r\n                <Label>Neutrófilos: </Label>\r\n                <InputText\r\n                    type=\"number\"\r\n                    step=\"0.01\"\r\n                    value={neutrofilos}\r\n                    onChange={this.handleChangeInputNeutrofilos}\r\n                />\r\n\r\n                <Label>Eosinófilos: </Label>\r\n                <InputText\r\n                    type=\"number\"\r\n                    step=\"0.01\"\r\n                    value={eosinofilos}\r\n                    onChange={this.handleChangeInputEosinofilos}\r\n                />  \r\n\r\n                <Label>Eosinófilos: </Label>\r\n                <InputText\r\n                    type=\"number\"\r\n                    step=\"0.01\"\r\n                    value={eosinofilos}\r\n                    onChange={this.handleChangeInputEosinofilos}\r\n                />\r\n\r\n                <Label>Plaquetas: </Label>\r\n                <InputText\r\n                    type=\"number\"\r\n                    step=\"0.01\"\r\n                    value={plaquetas}\r\n                    onChange={this.handleChangeInputPlaquetas}\r\n                />\r\n\r\n                <Label>VSG: </Label>\r\n                <InputText\r\n                    type=\"number\"\r\n                    step=\"0.01\"\r\n                    value={vsg}\r\n                    onChange={this.handleChangeInputVsg}\r\n                />\r\n\r\n                <Label>Glucosa: </Label>\r\n                <InputText\r\n                    type=\"number\"\r\n                    step=\"0.01\"\r\n                    value={glucosa}\r\n                    onChange={this.handleChangeInputGlucosa}\r\n                />\r\n\r\n                <Label>Urea: </Label>\r\n                <InputText\r\n                    type=\"number\"\r\n                    step=\"0.01\"\r\n                    value={urea}\r\n                    onChange={this.handleChangeInputUrea}\r\n                />      \r\n\r\n                <Label>Ácido úrico: </Label>\r\n                <InputText\r\n                    type=\"number\"\r\n                    step=\"0.01\"\r\n                    value={acidoUrico}\r\n                    onChange={this.handleChangeInputAcidoUrico}\r\n                />  \r\n\r\n                <Label>Creatinina: </Label>\r\n                <InputText\r\n                    type=\"number\"\r\n                    step=\"0.01\"\r\n                    value={creatinina}\r\n                    onChange={this.handleChangeInputCreatinina}\r\n                />  \r\n\r\n                <Label>Colesterol: </Label>\r\n                <InputText\r\n                    type=\"number\"\r\n                    step=\"0.01\"\r\n                    value={colesterol}\r\n                    onChange={this.handleChangeInputColesterol}\r\n                />  \r\n\r\n                <Label>Triglicerados: </Label>\r\n                <InputText\r\n                    type=\"number\"\r\n                    step=\"0.01\"\r\n                    value={trigliceridos}\r\n                    onChange={this.handleChangeInputTrigliceridos}\r\n                />  \r\n\r\n                <Label>Transaminasas: </Label>\r\n                <InputText\r\n                    type=\"number\"\r\n                    step=\"0.01\"\r\n                    value={transaminasas}\r\n                    onChange={this.handleChangeInputTransaminasas}\r\n                />  \r\n\r\n                <Label>Fosfatasa Alcalina: </Label>\r\n                <InputText\r\n                    type=\"number\"\r\n                    step=\"0.01\"\r\n                    value={fosfatasaAlcalina}\r\n                    onChange={this.handleChangeInputFosfatasaAlcalina}\r\n                />\r\n\r\n                <Label>Calcio: </Label>\r\n                <InputText\r\n                    type=\"number\"\r\n                    step=\"0.01\"\r\n                    value={calcio}\r\n                    onChange={this.handleChangeInputCalcio}\r\n                />    \r\n\r\n                <Label>Hierro: </Label>\r\n                <InputText\r\n                    type=\"number\"\r\n                    step=\"0.01\"\r\n                    value={hierro}\r\n                    onChange={this.handleChangeInputHierro}\r\n                />  \r\n\r\n                <Label>Potasio: </Label>\r\n                <InputText\r\n                    type=\"number\"\r\n                    step=\"0.01\"\r\n                    value={potasio}\r\n                    onChange={this.handleChangeInputPotasio}\r\n                />   \r\n\r\n                <Label>Sodio: </Label>\r\n                <InputText\r\n                    type=\"number\"\r\n                    step=\"0.01\"\r\n                    value={sodio}\r\n                    onChange={this.handleChangeInputSodio}\r\n                />            \r\n\r\n                <Label>Bilirrubina: </Label>\r\n                <InputText\r\n                    type=\"number\"\r\n                    step=\"0.01\"\r\n                    value={bilirrubina}\r\n                    onChange={this.handleChangeInputBilirrubina}\r\n                />  \r\n\r\n                <Button onClick={this.handleUpdateInformeSangre}>Editar informe</Button>\r\n                <CancelButton href={'/'}>Cancelar</CancelButton>\r\n            </Wrapper>\r\n        )\r\n}\r\n}\r\n\r\nexport default EditarInformeSangre","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\informes\\EditarInformeOrina.jsx",["395","396","397","398","399","400","401","402"],"import React, { Component,useContext,useEffect } from 'react'\r\nimport api from '../../api'\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { useHistory,Redirect } from \"react-router-dom\";\r\nimport UserContext from \"../../context/userContext\";\r\nimport { useOktaAuth } from \"@okta/okta-react\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst Title = styled.h1.attrs({\r\n    className: 'h1',\r\n})``\r\n\r\nconst Wrapper = styled.div.attrs({\r\n    className: 'form-group',\r\n})`\r\n    margin: 0 30px;\r\n`\r\n\r\nconst Label = styled.label`\r\n    margin: 5px;\r\n`\r\n\r\nconst InputText = styled.input.attrs({\r\n    className: 'form-control',\r\n})`\r\n    margin: 5px;\r\n`\r\n\r\nconst Button = styled.button.attrs({\r\n    className: `btn btn-primary`,\r\n})`\r\n    margin: 15px 15px 15px 5px;\r\n`\r\n\r\nconst CancelButton = styled.a.attrs({\r\n    className: `btn btn-danger`,\r\n})`\r\n    margin: 15px 15px 15px 5px;\r\n`\r\n\r\n\r\nclass EditarInformeOrina extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            // idUser: this.props.match.params.idUser,\r\n            idUser: this.props.userData.id,\r\n            fecha : '',\r\n            observaciones  : '',\r\n            densidad : '',\r\n            ph : '',\r\n            glucosa : '',\r\n            proteina : '',\r\n            hematies : '',\r\n            leufocitos : '',\r\n            cetonas : '',\r\n            bilirrubina : '',\r\n            nitritos : false,\r\n            cristales : false,\r\n            celulasEpiteliales : false,\r\n            cilindros : false,\r\n            bacterias : false,\r\n        }\r\n    }\r\n\r\n    handleChangeInputFecha = async event => {\r\n        const fecha = event.target.value\r\n        this.setState({ fecha })\r\n    }\r\n    \r\n    handleChangeInputObservaciones = async event => {\r\n        const observaciones = event.target.validity.valid\r\n            ? event.target.value\r\n            : this.state.observaciones\r\n\r\n        this.setState({ observaciones })\r\n    }\r\n\r\n    handleChangeInputDensidad = async event => {\r\n        const densidad = event.target.validity.valid\r\n            ? event.target.value\r\n            : this.state.densidad\r\n\r\n        this.setState({ densidad })\r\n    }\r\n\r\n    handleChangeInputPh = async event => {\r\n        const ph = event.target.validity.valid\r\n            ? event.target.value\r\n            : this.state.ph\r\n\r\n        this.setState({ ph })\r\n    }\r\n\r\n    handleChangeInputGlucosa = async event => {\r\n        const glucosa = event.target.validity.valid\r\n            ? event.target.value\r\n            : this.state.glucosa\r\n\r\n        this.setState({ glucosa })\r\n    }\r\n\r\n    handleChangeInputProteina = async event => {\r\n        const proteina = event.target.validity.valid\r\n            ? event.target.value\r\n            : this.state.proteina\r\n\r\n        this.setState({ proteina })\r\n    }\r\n\r\n    handleChangeInputHematies = async event => {\r\n        const hematies = event.target.validity.valid\r\n            ? event.target.value\r\n            : this.state.hematies\r\n\r\n        this.setState({ hematies })\r\n    }\r\n\r\n    handleChangeInputLeufocitos = async event => {\r\n        const leufocitos = event.target.validity.valid\r\n            ? event.target.value\r\n            : this.state.leufocitos\r\n\r\n        this.setState({ leufocitos })\r\n    }\r\n\r\n    handleChangeInputCetonas = async event => {\r\n        const cetonas = event.target.validity.valid\r\n            ? event.target.value\r\n            : this.state.cetonas\r\n\r\n        this.setState({ cetonas })\r\n    }\r\n\r\n    handleChangeInputBilirrubina = async event => {\r\n        const bilirrubina = event.target.validity.valid\r\n            ? event.target.value\r\n            : this.state.bilirrubina\r\n\r\n        this.setState({ bilirrubina })\r\n    }\r\n\r\n    handleChangeInputNitritos = async event => {\r\n        const nitritos = event.target.validity.valid\r\n            ? event.target.value\r\n            : this.state.nitritos\r\n\r\n        this.setState({ nitritos })\r\n    }\r\n\r\n    handleChangeInputCristales = async event => {\r\n        const cristales = event.target.validity.valid\r\n            ? event.target.value\r\n            : this.state.cristales\r\n\r\n        this.setState({ cristales })\r\n    }\r\n\r\n    handleChangeInputCelulasEpiteliales = async event => {\r\n        const celulasEpiteliales = event.target.validity.valid\r\n            ? event.target.value\r\n            : this.state.celulasEpiteliales\r\n\r\n        this.setState({ celulasEpiteliales })\r\n    }\r\n\r\n    handleChangeInputCilindros = async event => {\r\n        const cilindros = event.target.validity.valid\r\n            ? event.target.value\r\n            : this.state.cilindros\r\n\r\n        this.setState({ cilindros })\r\n    }\r\n\r\n    handleChangeInputBacterias = async event => {\r\n        const bacterias = event.target.validity.valid\r\n            ? event.target.value\r\n            : this.state.bacterias\r\n\r\n        this.setState({ bacterias })\r\n    }\r\n\r\n\r\n    handleUpdateInformeOrina = async () => {\r\n        const { id, fecha,observaciones, densidad, ph, glucosa,proteina,hematies,leufocitos,cetonas,\r\n            bilirrubina, nitritos, cristales,celulasEpiteliales,cilindros,bacterias } = this.state\r\n        const payload = { fecha,observaciones, densidad, ph, glucosa,proteina,hematies,leufocitos,cetonas,\r\n            bilirrubina, nitritos, cristales,celulasEpiteliales,cilindros,bacterias }\r\n\r\n        await api.editarInformeOrina(id, payload).then(res => {\r\n           console.log(`Informe updated successfully`)\r\n            this.setState({\r\n                fecha : '',\r\n                observaciones  : '',\r\n                densidad : '',\r\n                ph : '',\r\n                glucosa : '',\r\n                proteina : '',\r\n                hematies : '',\r\n                leufocitos : '',\r\n                cetonas : '',\r\n                bilirrubina : '',\r\n                nitritos : false,\r\n                cristales : false,\r\n                celulasEpiteliales : false,\r\n                cilindros : false,\r\n                bacterias : false,\r\n            })\r\n            this.props.history.push('/');\r\n        })\r\n    }\r\n\r\n    componentWillMount = async () => {\r\n        const { id } = this.state\r\n        const {idUser} =this.state\r\n        console.log(idUser)\r\n        const informeOrina = await api.getInformeOrina(id)\r\n        if(idUser != informeOrina.data.data.medico){\r\n            this.props.history.push('/error');\r\n        }\r\n        this.setState({\r\n            fecha : informeOrina.data.data.fecha,\r\n            observaciones  : informeOrina.data.data.observaciones,\r\n            densidad : informeOrina.data.data.densidad,\r\n            ph : informeOrina.data.data.ph,\r\n            glucosa : informeOrina.data.data.glucosa,\r\n            proteina : informeOrina.data.data.proteina,\r\n            hematies : informeOrina.data.data.hematies,\r\n            leufocitos : informeOrina.data.data.leufocitos,\r\n            cetonas : informeOrina.data.data.cetonas,\r\n            bilirrubina : informeOrina.data.data.bilirrubina,\r\n            nitritos : informeOrina.data.data.nitritos,\r\n            cristales : informeOrina.data.data.cristales,\r\n            celulasEpiteliales : informeOrina.data.data.celulasEpiteliales,\r\n            cilindros : informeOrina.data.data.cilindros,\r\n            bacterias : informeOrina.data.data.bacterias,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {fecha,observaciones, densidad, ph, glucosa,proteina,hematies,leufocitos,cetonas,\r\n            bilirrubina, nitritos, cristales,celulasEpiteliales,cilindros,bacterias } = this.state\r\n        return (\r\n            <Wrapper>\r\n                <Title>Editar informe de orina</Title>\r\n\r\n                <Label>Fecha: </Label>\r\n                <InputText\r\n                    type=\"text\"\r\n                    value={fecha}\r\n                    onChange={this.handleChangeInputFecha}\r\n                />\r\n\r\n                <Label>Observaciones: </Label>\r\n                <InputText\r\n                    type=\"text\"\r\n                    value={observaciones}\r\n                    onChange={this.handleChangeInputObservaciones}\r\n                />\r\n\r\n                <Label>Densidad: </Label>\r\n                <InputText\r\n                    type=\"number\"\r\n                    step=\"0.01\"\r\n                    value={densidad}\r\n                    onChange={this.handleChangeInputDensidad}\r\n                />\r\n\r\n                <Label>PH: </Label>\r\n                <InputText\r\n                    type=\"number\"\r\n                    step=\"0.01\"\r\n                    value={ph}\r\n                    onChange={this.handleChangeInputPh}\r\n                />\r\n\r\n                <Label>Glucosa: </Label>\r\n                <InputText\r\n                    type=\"number\"\r\n                    step=\"0.01\"\r\n                    value={glucosa}\r\n                    onChange={this.handleChangeInputGlucosa}\r\n                />\r\n\r\n                <Label>Proteina: </Label>\r\n                <InputText\r\n                    type=\"number\"\r\n                    step=\"0.01\"\r\n                    value={proteina}\r\n                    onChange={this.handleChangeInputProteina}\r\n                />\r\n\r\n                <Label>Hematies: </Label>\r\n                <InputText\r\n                    type=\"number\"\r\n                    step=\"0.01\"\r\n                    value={hematies}\r\n                    onChange={this.handleChangeInputHematies}\r\n                />\r\n\r\n                <Label>Leufocitos: </Label>\r\n                <InputText\r\n                    type=\"number\"\r\n                    step=\"0.01\"\r\n                    value={leufocitos}\r\n                    onChange={this.handleChangeInputLeufocitos}\r\n                />\r\n\r\n                <Label>Cetonas: </Label>\r\n                <InputText\r\n                    type=\"number\"\r\n                    step=\"0.01\"\r\n                    value={cetonas}\r\n                    onChange={this.handleChangeInputCetonas}\r\n                />  \r\n\r\n                <Label>Bilirrubina: </Label>\r\n                <InputText\r\n                    type=\"number\"\r\n                    step=\"0.01\"\r\n                    value={bilirrubina}\r\n                    onChange={this.handleChangeInputBilirrubina}\r\n                />\r\n            \r\n                <Label>Nitritos: </Label>\r\n                <Checkbox\r\n                    id=\"nitritos\"\r\n                    defaultChecked={nitritos}\r\n                    onChange={this.handleChangeInputNitritos}\r\n                />\r\n\r\n                <Label>Cristales: </Label>\r\n                <Checkbox\r\n                    id=\"cristales\"\r\n                    defaultChecked={cristales}\r\n                    value={cristales}\r\n                    onChange={this.handleChangeInputCristales}\r\n                />\r\n\r\n                <Label>Células epiteliales: </Label>\r\n                <Checkbox\r\n                    id=\"celulasEpiteliales\"\r\n                    defaultChecked={celulasEpiteliales}\r\n                    value={celulasEpiteliales}\r\n                    onChange={this.handleChangeInputCelulasEpiteliales}\r\n                />\r\n\r\n                <Label>Cilindros: </Label>\r\n                <Checkbox\r\n                    id=\"cilindros\"\r\n                    defaultChecked={cilindros}\r\n                    value={cilindros}\r\n                    onChange={this.handleChangeInputCilindros}\r\n                />\r\n\r\n                <Label>Bacterias: </Label>\r\n                <Checkbox\r\n                    id=\"bacterias\"\r\n                    defaultChecked={bacterias}\r\n                    onChange={this.handleChangeInputBacterias}\r\n                />  \r\n\r\n                \r\n\r\n                <Button onClick={this.handleUpdateInformeOrina}>Editar informe</Button>\r\n                <CancelButton href={'/'}>Cancelar</CancelButton>\r\n            </Wrapper>\r\n        )\r\n}\r\n}\r\n\r\n\r\n// function EsChecked(valor,funcion){\r\n//     let final;\r\n//     if(valor==true){\r\n//         final= <Checkbox\r\n//         checked\r\n//         value={valor}\r\n//         onChange={funcion}\r\n//     />;\r\n//     }else if(valor==false){\r\n//         final= <Checkbox\r\n//         value={valor}\r\n//         onChange={funcion}\r\n//     />;\r\n//     }\r\n//     return final;\r\n// }\r\n\r\nexport default EditarInformeOrina","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\informes\\EditarInformePrueba.jsx",["403","404","405","406","407","408","409","410","411","412"],"import React, { Component,useContext,useEffect } from 'react'\r\nimport api from '../../api'\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { useHistory,Redirect } from \"react-router-dom\";\r\nimport UserContext from \"../../context/userContext\";\r\nimport { useOktaAuth } from \"@okta/okta-react\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst Title = styled.h1.attrs({\r\n    className: 'h1',\r\n})``\r\n\r\nconst Wrapper = styled.div.attrs({\r\n    className: 'form-group',\r\n})`\r\n    margin: 0 30px;\r\n`\r\n\r\nconst Label = styled.label`\r\n    margin: 5px;\r\n`\r\n\r\nconst InputText = styled.input.attrs({\r\n    className: 'form-control',\r\n})`\r\n    margin: 5px;\r\n`\r\n\r\nconst Button = styled.button.attrs({\r\n    className: `btn btn-primary`,\r\n})`\r\n    margin: 15px 15px 15px 5px;\r\n`\r\n\r\nconst CancelButton = styled.a.attrs({\r\n    className: `btn btn-danger`,\r\n})`\r\n    margin: 15px 15px 15px 5px;\r\n`\r\n\r\n\r\nclass EditarInformePrueba extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            // idUser: this.props.match.params.idUser,\r\n            idUser: this.props.userData.id,\r\n            fecha : '',\r\n            nombre : '',\r\n            descripcion: '',\r\n            resultado: '',\r\n        }\r\n    }\r\n\r\n    handleChangeInputFecha = async event => {\r\n        const fecha = event.target.value\r\n        this.setState({ fecha })\r\n    }\r\n    \r\n    handleChangeInputNombre = async event => {\r\n        const nombre = event.target.validity.valid\r\n            ? event.target.value\r\n            : this.state.nombre\r\n\r\n        this.setState({ nombre })\r\n    }\r\n\r\n    handleChangeInputDescripcion = async event => {\r\n        const descripcion = event.target.validity.valid\r\n            ? event.target.value\r\n            : this.state.descripcion\r\n\r\n        this.setState({ descripcion })\r\n    }\r\n\r\n    handleChangeInputResultado = async event => {\r\n        const resultado = event.target.validity.valid\r\n            ? event.target.value\r\n            : this.state.resultado\r\n\r\n        this.setState({ resultado })\r\n    }\r\n\r\n\r\n    handleUpdateInformePrueba = async () => {\r\n        const { id, fecha,resultado,nombre,descripcion } = this.state\r\n        const payload = { fecha,resultado,nombre,descripcion }\r\n\r\n        await api.editarInformePrueba(id, payload).then(res => {\r\n           console.log(`Informe updated successfully`)\r\n            this.setState({\r\n                fecha : '',\r\n                nombre : '',\r\n                descripcion: '',\r\n                resultado: '',\r\n            })\r\n            this.props.history.push('/');\r\n        })\r\n    }\r\n\r\n    componentWillMount = async () => {\r\n        const { id } = this.state\r\n        const {idUser} =this.state\r\n        console.log(idUser)\r\n        const informePrueba = await api.getInformePrueba(id)\r\n        if(idUser != informePrueba.data.data.medico){\r\n            this.props.history.push('/error');\r\n        }\r\n        this.setState({\r\n            fecha : informePrueba.data.data.fecha,\r\n            nombre : informePrueba.data.data.nombre,\r\n            descripcion: informePrueba.data.data.descripcion,\r\n            resultado: informePrueba.data.data.resultado,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {id, fecha,resultado,nombre,descripcion } = this.state\r\n        return (\r\n            <Wrapper>\r\n                <Title>Editar informe de prueba médica</Title>\r\n\r\n                <Label>Fecha: </Label>\r\n                <InputText\r\n                    type=\"text\"\r\n                    value={fecha}\r\n                    onChange={this.handleChangeInputFecha}\r\n                />\r\n\r\n                <Label>Nombre de prueba: </Label>\r\n                <InputText\r\n                    type=\"text\"\r\n                    value={nombre}\r\n                    onChange={this.handleChangeInputNombre}\r\n                />\r\n\r\n                <Label>Descripción: </Label>\r\n                <InputText\r\n                    type=\"text\"\r\n                    value={descripcion}\r\n                    onChange={this.handleChangeInputDescripcion}\r\n                />\r\n\r\n                <Label>Resultado: </Label>\r\n                <InputText\r\n                    type=\"text\"\r\n                    value={resultado}\r\n                    onChange={this.handleChangeInputResultado}\r\n                />\r\n\r\n                <Button onClick={this.handleUpdateInformePrueba}>Editar informe</Button>\r\n                <CancelButton href={'/'}>Cancelar</CancelButton>\r\n            </Wrapper>\r\n        )\r\n}\r\n}\r\n\r\nexport default EditarInformePrueba","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\informes\\EditarInformePresencial.jsx",["413","414","415","416","417","418","419","420","421","422"],"import React, { Component,useContext,useEffect } from 'react'\r\nimport api from '../../api'\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { useHistory,Redirect } from \"react-router-dom\";\r\nimport UserContext from \"../../context/userContext\";\r\nimport { useOktaAuth } from \"@okta/okta-react\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst Title = styled.h1.attrs({\r\n    className: 'h1',\r\n})``\r\n\r\nconst Wrapper = styled.div.attrs({\r\n    className: 'form-group',\r\n})`\r\n    margin: 0 30px;\r\n`\r\n\r\nconst Label = styled.label`\r\n    margin: 5px;\r\n`\r\n\r\nconst InputText = styled.input.attrs({\r\n    className: 'form-control',\r\n})`\r\n    margin: 5px;\r\n`\r\n\r\nconst Button = styled.button.attrs({\r\n    className: `btn btn-primary`,\r\n})`\r\n    margin: 15px 15px 15px 5px;\r\n`\r\n\r\nconst CancelButton = styled.a.attrs({\r\n    className: `btn btn-danger`,\r\n})`\r\n    margin: 15px 15px 15px 5px;\r\n`\r\n\r\n\r\nclass EditarInformePresencial extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            // idUser: this.props.match.params.idUser,\r\n            idUser: this.props.userData.id,\r\n            fecha : '',\r\n            motivo : '',\r\n            descripcion: '',\r\n            diagnostico: '',\r\n        }\r\n    }\r\n\r\n    handleChangeInputFecha = async event => {\r\n        const fecha = event.target.value\r\n        this.setState({ fecha })\r\n    }\r\n    \r\n    handleChangeInputMotivo = async event => {\r\n        const motivo = event.target.validity.valid\r\n            ? event.target.value\r\n            : this.state.motivo\r\n\r\n        this.setState({ motivo })\r\n    }\r\n\r\n    handleChangeInputDescripcion = async event => {\r\n        const descripcion = event.target.validity.valid\r\n            ? event.target.value\r\n            : this.state.descripcion\r\n\r\n        this.setState({ descripcion })\r\n    }\r\n\r\n    handleChangeInputDiagnostico = async event => {\r\n        const diagnostico = event.target.validity.valid\r\n            ? event.target.value\r\n            : this.state.diagnostico\r\n\r\n        this.setState({ diagnostico })\r\n    }\r\n\r\n\r\n    handleUpdateInformePresencial = async () => {\r\n        const { id, fecha,motivo,diagnostico,descripcion } = this.state\r\n        const payload = { fecha,motivo,diagnostico,descripcion }\r\n\r\n        await api.editarInformePresencial(id, payload).then(res => {\r\n           console.log(`Informe updated successfully`)\r\n            this.setState({\r\n                fecha : '',\r\n                motivo : '',\r\n                descripcion: '',\r\n                diagnostico: '',\r\n            })\r\n            this.props.history.push('/');\r\n        })\r\n    }\r\n\r\n    componentWillMount = async () => {\r\n        const { id } = this.state\r\n        const {idUser} =this.state\r\n        console.log(idUser)\r\n        const informePresencial = await api.getInformePresencial(id)\r\n        if(idUser != informePresencial.data.data.medico){\r\n            this.props.history.push('/error');\r\n        }\r\n        this.setState({\r\n            fecha : informePresencial.data.data.fecha,\r\n            motivo : informePresencial.data.data.motivo,\r\n            descripcion: informePresencial.data.data.descripcion,\r\n            diagnostico: informePresencial.data.data.diagnostico,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {id, fecha,motivo,diagnostico,descripcion } = this.state\r\n        return (\r\n            <Wrapper>\r\n                <Title>Editar informe de consulta</Title>\r\n\r\n                <Label>Fecha: </Label>\r\n                <InputText\r\n                    type=\"text\"\r\n                    value={fecha}\r\n                    onChange={this.handleChangeInputFecha}\r\n                />\r\n\r\n                <Label> Motivo: </Label>\r\n                <InputText\r\n                    type=\"text\"\r\n                    value={motivo}\r\n                    onChange={this.handleChangeInputMotivo}\r\n                />\r\n\r\n                <Label>Descripción: </Label>\r\n                <InputText\r\n                    type=\"text\"\r\n                    value={descripcion}\r\n                    onChange={this.handleChangeInputDescripcion}\r\n                />\r\n\r\n                <Label>Diagnostico: </Label>\r\n                <InputText\r\n                    type=\"text\"\r\n                    value={diagnostico}\r\n                    onChange={this.handleChangeInputDiagnostico}\r\n                />\r\n\r\n                <Button onClick={this.handleUpdateInformePresencial}>Editar informe</Button>\r\n                <CancelButton href={'/'}>Cancelar</CancelButton>\r\n            </Wrapper>\r\n        )\r\n}\r\n}\r\n\r\nexport default EditarInformePresencial","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\enfermedades\\Enfermedades.jsx",["423","424","425","426","427","428","429","430","431","432","433","434","435","436","437","438","439","440","441"],"import React, { Component, useEffect, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport moment from 'moment';\r\nimport api from '../../api'\r\nimport UserContext from \"../../context/userContext\";\r\nimport calendar from '../logo/calendar.png'\r\nimport consultaImg from '../logo/medical-file.png'\r\nimport motive from '../logo/libreta-de-direcciones.png'\r\nimport personas from '../logo/personas.png'\r\nimport doctor from '../logo/doctor.png'\r\nimport medic from '../logo/medico.png'\r\n\r\nfunction Prueba(props) {\r\n    let content;\r\n    if(props.rol==\"Paciente\"){\r\n        content = props.enfermedad.map((enfermedad) =>\r\n        <div class=\"cards-consulta\">\r\n        <div class='top'>\r\n        <img src={doctor} />\r\n        </div>\r\n        <div class=\"consulta\" key={enfermedad._id}>\r\n        <div class=\"fecha\">\r\n            <p><img class=\"calendar\" src={motive}/><div class=\"fechaPad\">Tipo de enfermedad: {enfermedad.tipoEnfermedad}</div></p>\r\n            </div>\r\n            <div class=\"fecha\">\r\n            <p><img class=\"calendar\" src={calendar}/><div class=\"fechaPad\">Nombre: {enfermedad.nombre}</div></p>\r\n            </div>\r\n            <div class=\"fecha\">\r\n            <p><img class=\"calendar\" src={personas}/><div class=\"fechaPad\">Descripción: {enfermedad.descripcion}</div></p>\r\n            </div>\r\n            <div class=\"fecha\">\r\n            <p><img class=\"calendar\" src={personas}/><div class=\"fechaPad\">Médico: {enfermedad.medico.nickname}</div></p>\r\n            </div>\r\n            <div class=\"consultaBotones\">\r\n            <TratamientoMedicacion id={enfermedad._id} />\r\n            </div>\r\n            <div class=\"consultaBotones\">\r\n            <TratamientoRehabilitacion id={enfermedad._id} />\r\n            </div>\r\n        </div>\r\n        </div>\r\n        );\r\n\r\n        return (\r\n            <div class=\"consultaList\">\r\n              {content}\r\n              <br></br><br></br>\r\n            </div>\r\n          );\r\n    }else{\r\n        content = props.enfermedad.map((enfermedad) =>\r\n        <div class=\"cards-consulta\">\r\n            <div class='top'>\r\n            <img src={doctor} />\r\n            </div>\r\n        <div class=\"consulta\" key={enfermedad._id}>\r\n            <div class=\"fecha\">\r\n            <p><img class=\"calendar\" src={motive}/><div class=\"fechaPad\">Tipo de enfermedad: {enfermedad.tipoEnfermedad}</div></p>\r\n            </div>\r\n            <div class=\"fecha\">\r\n            <p><img class=\"calendar\" src={calendar}/><div class=\"fechaPad\">Nombre: {enfermedad.nombre}</div></p>\r\n            </div>\r\n            <div class=\"fecha\">\r\n            <p><img class=\"calendar\" src={personas}/><div class=\"fechaPad\">Descripción: {enfermedad.descripcion}</div></p>\r\n            </div>\r\n            <div class=\"fecha\">\r\n            <p><img class=\"calendar\" src={personas}/><div class=\"fechaPad\">Paciente: {enfermedad.paciente.nickname}</div></p>\r\n            </div>\r\n            <div class=\"consultaBotones\">\r\n            <EditarEnfermedad id={enfermedad._id} />\r\n            </div>\r\n            <div class=\"consultaBotones\">\r\n            <EliminarEnfermedad id={enfermedad._id}/>\r\n            </div>\r\n            <div class=\"consultaBotones\">\r\n            <CrearTratamientoMedicacion id={enfermedad._id}/>\r\n            </div>\r\n            <div class=\"consultaBotones\">\r\n            <CrearTratamientoRehabilitacion id={enfermedad._id}/>\r\n            </div>\r\n        </div>\r\n        </div>\r\n        );\r\n\r\n        return (\r\n            <div class=\"consultaList\">\r\n              {content}\r\n              <br></br><br></br>\r\n              <CrearEnfermedad idPaciente={props.idPaciente}/>\r\n            </div>\r\n          );\r\n    }\r\n  }\r\n\r\n  function CrearEnfermedad(props){\r\n    const history = useHistory();\r\n    const { userData } = useContext(UserContext);\r\n    const crearEnfermedad = () => history.push(\"/\"+props.idPaciente+\"/enfermedades/crearEnfermedad\");\r\n    return(\r\n        <div class=\"crearConsulta\">\r\n        <button className=\"rad-button-2 wwt flat\" onClick={crearEnfermedad}>Crear enfermedad</button>\r\n        </div>\r\n    );\r\n    }\r\n\r\n    function EditarEnfermedad(props) {\r\n        const history = useHistory();\r\n        const { userData } = useContext(UserContext);\r\n        const editarEnfermedad = () => history.push(\"/\"+userData.user.id+\"/enfermedades/\"+props.id+\"/edit\");\r\n        return(\r\n            <button className=\"rad-button-2 wwt flat\" onClick={editarEnfermedad}>Editar enfermedad</button>\r\n        );\r\n    }\r\n\r\n    function EliminarEnfermedad(props) {\r\n        const history = useHistory();\r\n        const { userData } = useContext(UserContext);\r\n        const eliminarEnfermedad = () => {\r\n            api.eliminarEnfermedad(props.id)\r\n            window.location.reload()\r\n        }\r\n        return(\r\n            <button className=\"rad-button-2 wwt flat\" onClick={eliminarEnfermedad}>Eliminar enfermedad</button>\r\n        );\r\n    }\r\n\r\n    function CrearTratamientoMedicacion(props) {\r\n        const history = useHistory();\r\n        const { userData } = useContext(UserContext);\r\n        const tratamientoMedicacion = () => history.push(\"/\"+userData.user.id+\"/enfermedades/\"+props.id+\"/crearTratamientoMedicacion\");\r\n        return(\r\n            <button className=\"rad-button-2 wwt flat\" onClick={tratamientoMedicacion}>Crear tratamiento <br></br>medicación</button>\r\n        );\r\n    }\r\n\r\n    function CrearTratamientoRehabilitacion(props) {\r\n        const history = useHistory();\r\n        const { userData } = useContext(UserContext);\r\n        const tratamientoRehabilitacion = () => history.push(\"/\"+userData.user.id+\"/enfermedades/\"+props.id+\"/crearTratamientoRehabilitacion\");\r\n        return(\r\n            <button className=\"rad-button-2 wwt flat\" onClick={tratamientoRehabilitacion}>Crear tratamiento <br></br>rehabilitación</button>\r\n        );\r\n    }\r\n\r\n    function TratamientoMedicacion(props){\r\n        const history = useHistory();\r\n        const { userData } = useContext(UserContext);\r\n        const tratamientoMedicacion = () => history.push(\"/\"+userData.user.id+\"/enfermedades/\"+props.id+\"/tratamientoMedicacion\");\r\n        return(\r\n            <button className=\"rad-button-2 wwt flat\" onClick={tratamientoMedicacion}>Ver tratamientos <br></br>de medicación</button>\r\n        );\r\n    }\r\n\r\n    function TratamientoRehabilitacion(props){\r\n        const history = useHistory();\r\n        const { userData } = useContext(UserContext);\r\n        const tratamientoRehabilitacion = () => history.push(\"/\"+userData.user.id+\"/enfermedades/\"+props.id+\"/tratamientoRehabilitacion\");\r\n        return(\r\n            <button className=\"rad-button-2 wwt flat\" onClick={tratamientoRehabilitacion}>Ver tratamientos <br></br>de rehabilitación</button>\r\n        );\r\n    }\r\n\r\n\r\nexport default class Enfermedades extends React.Component{\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            rol: this.props.userData.rol,\r\n            loading: true,\r\n            consulta:null,\r\n        }\r\n    }\r\n\r\n    async componentWillMount(){\r\n        const { id } = this.state\r\n        const { rol } = this.state\r\n        let url;\r\n        // if(rol==\"Paciente\"){\r\n            url = await api.getEnfermedadByPacienteId(id)\r\n        // }else{\r\n        //     url = await api.getEnfermedadByMedicoId(id)\r\n        // }\r\n        // const response = await fetch(url);\r\n        // const data = await response.json();\r\n        this.setState({enfermedad: url.data.data, loading:false, rol:rol,idPaciente:id});\r\n    }\r\n    \r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                {this.state.loading || !this.state.enfermedad ? (\r\n                    <div>loading...</div>\r\n                ):(\r\n                    <div>\r\n                        <Prueba enfermedad={this.state.enfermedad} rol={this.state.rol} idPaciente={this.state.idPaciente} />\r\n                        \r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\enfermedades\\CrearEnfermedad.jsx",["442","443","444"],"import React, { useState, useContext,useEffect } from 'react';\r\nimport { useHistory, Redirect,useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport ErrorNotice from \"../../components/misc/ErrorNotice\";\r\nimport UserContext from \"../../context/userContext\";\r\nimport Select from 'react-select';\r\nimport Async from 'react-async';\r\nimport api from '../../api'\r\nfunction CrearEnfermedad () {\r\nconst [tipoEnfermedad, setTipoEnfermedad] = useState();\r\nconst [nombre, setNombre] = useState();\r\nconst [descripcion, setDescripcion] = useState();\r\nconst { userData } = useContext(UserContext);\r\nconst medico = userData.user.id;\r\nconst  idPaciente  = useParams()\r\nconst paciente = idPaciente.id\r\nconst [error, setError] = useState();\r\nconst history = useHistory();\r\nconst onChange = async (selectedOption) => {\r\n\r\n    console.log(`Option selected:`, selectedOption);\r\n    setTipoEnfermedad(selectedOption.val);\r\n    \r\n  };\r\nconst submit = async (e) => {\r\ne.preventDefault();\r\ntry{\r\nconst newUser = {tipoEnfermedad,nombre,descripcion,paciente,medico};\r\nawait axios.post(\"http://localhost:5000/enfermedades/add\", newUser);\r\n\r\nhistory.push(\"/\");\r\n} catch(err) {\r\nerr.response.data.msg && setError(err.response.data.msg)\r\n}\r\n};\r\n    const sacaTipoEnfermedad = () =>\r\n    api.getTipoEnfermedad()\r\n    .then(res => {return res})\r\n\r\n    return (\r\n    <div className=\"form\">\r\n    <h2>Crear enfermedad</h2>\r\n    {error && <ErrorNotice message={error} clearError={() => setError(undefined)} />}\r\n    <form onSubmit={submit}>\r\n    <div class=\"input\">\r\n    <div class=\"inputBox\">\r\n    <label>Nombre: </label><br></br>\r\n    <input type=\"text\" id=\"nombre\" onChange={e => setNombre(e.target.value)}/><br></br>\r\n    </div>\r\n    <div class=\"inputBox\">\r\n    <label>Tipo de enfermedad </label><br></br>\r\n    <Async promiseFn={sacaTipoEnfermedad}>\r\n\r\n{({ data, err }) => {\r\n          if (err) return `Something went wrong: ${err.message}`\r\n\r\n          if (data){\r\n\r\n            const selectTipoEnfermedad = [];\r\n            data.data.data.map((enfermedad) => { selectTipoEnfermedad.push({ desc:enfermedad, val: enfermedad  })});\r\n\r\n            return (\r\n                <Select options={selectTipoEnfermedad} getOptionLabel={(option)=>option.desc}\r\n                getOptionValue={(option)=>option.val } id=\"selectTipoEnfermedad\" placeholder=\"Selecciona un tipo de enfermedad\" onChange={onChange} ></Select>\r\n                \r\n            )}\r\n        }}\r\n</Async>\r\n    </div>\r\n    <div class=\"inputBox\">\r\n    <label>Descripción: </label><br></br>\r\n    <input type=\"text\" id=\"descripcion\" onChange={e => setDescripcion(e.target.value)}/><br></br>\r\n    </div>\r\n    <div class=\"inputBox\">\r\n    <input type=\"submit\" value=\"Crear\" className=\"btn btn-primary\" />\r\n    </div>\r\n    </div>\r\n    </form>\r\n    </div>\r\n    );\r\n}\r\nexport default CrearEnfermedad;","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\enfermedades\\EditarEnfermedad.jsx",["445","446","447","448","449","450","451","452","453","454"],"import React, { Component,useContext,useEffect } from 'react'\r\nimport api from '../../api'\r\nimport { useHistory,Redirect } from \"react-router-dom\";\r\nimport UserContext from \"../../context/userContext\";\r\nimport { useOktaAuth } from \"@okta/okta-react\";\r\nimport firebase from \"firebase/app\";\r\nimport moment from 'moment';\r\nimport \"firebase/auth\";\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst Title = styled.h1.attrs({\r\n    className: 'h1',\r\n})``\r\n\r\nconst Wrapper = styled.div.attrs({\r\n    className: 'form-group',\r\n})`\r\n    margin: 0 30px;\r\n`\r\n\r\nconst Label = styled.label`\r\n    margin: 5px;\r\n`\r\n\r\nconst InputText = styled.input.attrs({\r\n    className: 'form-control',\r\n})`\r\n    margin: 5px;\r\n`\r\n\r\nconst Button = styled.button.attrs({\r\n    className: `btn btn-primary`,\r\n})`\r\n    margin: 15px 15px 15px 5px;\r\n`\r\n\r\nconst CancelButton = styled.a.attrs({\r\n    className: `btn btn-danger`,\r\n})`\r\n    margin: 15px 15px 15px 5px;\r\n`\r\n\r\n\r\nclass EditarEnfermedad extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            idEnfermedad: this.props.match.params.idEnfermedad,\r\n            idUser: this.props.userData.id,\r\n            nombre: '',\r\n            descripcion: '',\r\n        }\r\n    }\r\n\r\n    handleChangeInputNombre = async event => {\r\n        const nombre = event.target.validity.valid\r\n            ? event.target.value\r\n            : this.state.nombre\r\n\r\n        this.setState({ nombre })\r\n    }\r\n\r\n    handleChangeInputDescripcion = async event => {\r\n        const descripcion = event.target.validity.valid\r\n            ? event.target.value\r\n            : this.state.descripcion\r\n\r\n        this.setState({ descripcion })\r\n    }\r\n\r\n\r\n    handleUpdateEnfermedad = async () => {\r\n        const { idEnfermedad, nombre, descripcion } = this.state\r\n        const payload = { nombre, descripcion }\r\n\r\n        await api.editEnfermedad(idEnfermedad, payload).then(res => {\r\n           console.log(`Consulta updated successfully`)\r\n            this.setState({\r\n                nombre: '',\r\n                descripcion: '',\r\n            })\r\n            this.props.history.push('/');\r\n        })\r\n    }\r\n\r\n    componentWillMount = async () => {\r\n        const { idEnfermedad } = this.state\r\n        const {idUser} =this.state\r\n        console.log(idUser)\r\n        const enfermedad = await api.getEnfermedad(idEnfermedad)\r\n        if(idUser != enfermedad.data.data.medico){\r\n            this.props.history.push('/error');\r\n        }\r\n        this.setState({\r\n            nombre: enfermedad.data.data.nombre,\r\n            descripcion: enfermedad.data.data.descripcion,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { nombre, descripcion,idEnfermedad } = this.state\r\n        return (\r\n            <div className=\"form\">\r\n            <Wrapper>\r\n                <Title>Editar enfermedad</Title>\r\n                <div class=\"input\">\r\n                <div class=\"inputBox\">\r\n                <Label>Nombre: </Label>\r\n                <InputText\r\n                    type=\"text\"\r\n                    value={nombre}\r\n                    onChange={this.handleChangeInputNombre}\r\n                />\r\n                </div>\r\n                <div class=\"inputBox\">\r\n                <Label>Descripción: </Label>\r\n                <InputText\r\n                    type=\"text\"\r\n                    value={descripcion}\r\n                    onChange={this.handleChangeInputDescripcion}\r\n                />\r\n                </div>\r\n                <div class=\"inputBox\">\r\n                <Button onClick={this.handleUpdateEnfermedad}>Editar enfermedad</Button>\r\n                </div>\r\n                <div class=\"inputBox\">\r\n                <CancelButton href={'/'}>Cancelar</CancelButton>\r\n                </div>\r\n                </div>\r\n            </Wrapper>\r\n            </div>\r\n        )\r\n}\r\n}\r\n\r\nexport default EditarEnfermedad","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\perfil\\MiPerfil.jsx",["455","456","457","458","459","460","461","462","463","464","465","466","467","468","469","470"],"import React, { Component, useEffect, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport moment from 'moment';\r\nimport api, { editarConsultaAtencionEspecial } from '../../api'\r\nimport UserContext from \"../../context/userContext\";\r\nimport cita from '../logo/cita.png'\r\nimport user from '../logo/user.png'\r\nimport consultaImg from '../logo/medical-file.png'\r\nimport motive from '../logo/libreta-de-direcciones.png'\r\nimport personas from '../logo/personas.png'\r\nimport doctor from '../logo/doctor.png'\r\nimport medic from '../logo/medico.png'\r\n\r\nfunction Prueba(props) {\r\n    const history = useHistory();\r\n    const mensajes = () => history.push(\"/mensajes\");\r\n    \r\n    let content;\r\n    let content2;\r\n    if(props.rol==\"Paciente\"){\r\n        return (\r\n            <div class=\"perfilList\">\r\n                <div class=\"cards-cita\">\r\n                <div class=\"topCitas\">\r\n                <img src={props.user.imgPerfil || user}/>\r\n                </div>\r\n                <div class=\"citaSel\" >\r\n                <div class=\"userDetails\">\r\n                    <div class=\"bloque1\">\r\n                    <div class=\"atributo\">\r\n                Nombre: {props.user.nombre}\r\n                </div>\r\n                <div class=\"atributo\">\r\n                Nombre de usuario: {props.user.nickname}\r\n                </div>\r\n                <div class=\"atributo\">\r\n                Sexo: {props.user.sexo}\r\n                {/* Fecha de nacimiento: {moment(props.user.fechaNacimiento).format('DD/MM/yyyy')} */}\r\n                </div>\r\n                <div class=\"atributo\">\r\n                DNI: {props.user.dni}\r\n                </div>\r\n                <div class=\"atributo\">\r\n                Ciudad: {props.ciudad.provincia}\r\n                </div>\r\n                <div class=\"atributo\">\r\n                Localidad: {props.user.localidad}\r\n                </div>\r\n                <div class=\"atributo\">\r\n                Dirección: {props.user.direccion}\r\n                </div>\r\n                    </div>\r\n                    <div class=\"bloque2\">\r\n                    <div class=\"atributo\">\r\n                Apellidos: {props.user.apellidos}\r\n                </div>\r\n                <div class=\"atributo\">\r\n                Correo electrónico: {props.user.email}\r\n                </div>\r\n                <div class=\"atributo\">\r\n                Fecha de nacimiento: {moment(props.user.fechaNacimiento).format('DD/MM/yyyy')}\r\n                </div>\r\n                <div class=\"atributo\">\r\n                Número de seguridad social: {props.user.numSeguridadSocial}\r\n                </div>\r\n                <div class=\"atributo\">\r\n                Centro médico: {props.hospital.nombre}\r\n                </div>\r\n                <div class=\"atributo\">\r\n                Código postal: {props.user.cp}\r\n                </div>\r\n                <div class=\"atributo\">\r\n                Teléfono: {props.user.telefono}\r\n                </div>\r\n                    </div>\r\n                {/* <div class=\"linea\">\r\n                <div class=\"atributo\">\r\n                Nombre: {props.user.nombre}\r\n                </div>\r\n                <div class=\"atributo\">\r\n                Apellidos: {props.user.apellidos}\r\n                </div>\r\n                </div>\r\n                <br></br>\r\n                <div class=\"linea\">\r\n                <div class=\"atributo\">\r\n                Sexo: {props.user.sexo}\r\n                </div>\r\n                <div class=\"atributo\">\r\n                Teléfono: {props.user.telefono}\r\n                </div>\r\n                </div>\r\n                <br></br>\r\n                <div class=\"linea\">\r\n                <div class=\"atributo\">\r\n                Fecha de nacimiento: {moment(props.user.fechaNacimiento).format('DD/MM/yyyy')}<br></br>\r\n                </div>\r\n                <div class=\"atributo\">\r\n                Dirección: {props.user.direccion}<br></br>\r\n                </div>\r\n                </div>\r\n                <br></br>\r\n                <div class=\"linea\">\r\n                <div class=\"atributo\">\r\n                Localidad: {props.user.localidad}<br></br>\r\n                </div>\r\n                <div class=\"atributo\">\r\n                Ciudad:{props.user.ciudad}\r\n                </div>\r\n                </div> */}\r\n               \r\n\r\n                </div>\r\n                <br></br><br></br>\r\n                <div class=\"linea\">\r\n                <div class=\"botonesCita\">\r\n                <Citas/>\r\n                </div>\r\n                <div class=\"botonesCita\">\r\n                <Informes />\r\n                </div>\r\n                <div class=\"botonesCita\">\r\n                <Enfermedades />\r\n                </div>\r\n                <div class=\"botonesCita\">\r\n                <RegistrosTension />\r\n                </div>\r\n                </div>\r\n                </div>\r\n                </div>\r\n              <br></br><br></br>\r\n            </div>\r\n          );\r\n        }else{\r\n            return (\r\n                <div class=\"perfilList\">\r\n                    <div class=\"cards-cita\">\r\n                    <div class=\"topCitas\">\r\n                    <img src={props.user.imgPerfil || user}/>\r\n                    </div>\r\n                    <div class=\"citaSel\" >\r\n                    <div class=\"userDetails\">\r\n                        <div class=\"bloque1\">\r\n                        <div class=\"atributo\">\r\n                    Nombre: {props.user.nombre}\r\n                    </div>\r\n                    <div class=\"atributo\">\r\n                    Nombre de usuario: {props.user.nickname}\r\n                    </div>\r\n                    <div class=\"atributo\">\r\n                    Sexo: {props.user.sexo}\r\n                    {/* Fecha de nacimiento: {moment(props.user.fechaNacimiento).format('DD/MM/yyyy')} */}\r\n                    </div>\r\n                    <div class=\"atributo\">\r\n                    DNI: {props.user.dni}\r\n                    </div>\r\n                    <div class=\"atributo\">\r\n                    Ciudad: {props.ciudad.provincia}\r\n                    </div>\r\n                    <div class=\"atributo\">\r\n                    Localidad: {props.user.localidad}\r\n                    </div>\r\n                    <div class=\"atributo\">\r\n                    Dirección: {props.user.direccion}\r\n                    </div>\r\n                        </div>\r\n                        <div class=\"bloque2\">\r\n                        <div class=\"atributo\">\r\n                    Apellidos: {props.user.apellidos}\r\n                    </div>\r\n                    <div class=\"atributo\">\r\n                    Correo electrónico: {props.user.email}\r\n                    </div>\r\n                    <div class=\"atributo\">\r\n                    Fecha de nacimiento: {moment(props.user.fechaNacimiento).format('DD/MM/yyyy')}\r\n                    </div>\r\n                    <div class=\"atributo\">\r\n                    Sector: {props.user.sector}\r\n                    </div>\r\n                    <div class=\"atributo\">\r\n                    Centro médico: {props.hospital.nombre}\r\n                    </div>\r\n                    <div class=\"atributo\">\r\n                    Código postal: {props.user.cp}\r\n                    </div>\r\n                    <div class=\"atributo\">\r\n                    Teléfono: {props.user.telefono}\r\n                    </div>\r\n                        </div>\r\n                    {/* <div class=\"linea\">\r\n                    <div class=\"atributo\">\r\n                    Nombre: {props.user.nombre}\r\n                    </div>\r\n                    <div class=\"atributo\">\r\n                    Apellidos: {props.user.apellidos}\r\n                    </div>\r\n                    </div>\r\n                    <br></br>\r\n                    <div class=\"linea\">\r\n                    <div class=\"atributo\">\r\n                    Sexo: {props.user.sexo}\r\n                    </div>\r\n                    <div class=\"atributo\">\r\n                    Teléfono: {props.user.telefono}\r\n                    </div>\r\n                    </div>\r\n                    <br></br>\r\n                    <div class=\"linea\">\r\n                    <div class=\"atributo\">\r\n                    Fecha de nacimiento: {moment(props.user.fechaNacimiento).format('DD/MM/yyyy')}<br></br>\r\n                    </div>\r\n                    <div class=\"atributo\">\r\n                    Dirección: {props.user.direccion}<br></br>\r\n                    </div>\r\n                    </div>\r\n                    <br></br>\r\n                    <div class=\"linea\">\r\n                    <div class=\"atributo\">\r\n                    Localidad: {props.user.localidad}<br></br>\r\n                    </div>\r\n                    <div class=\"atributo\">\r\n                    Ciudad:{props.user.ciudad}\r\n                    </div>\r\n                    </div> */}\r\n                   \r\n    \r\n                    </div>\r\n                    </div>\r\n                    </div>\r\n                  <br></br><br></br>\r\n                </div>\r\n              );\r\n        }\r\n    // }else{\r\n    //     content = props.consulta.map((consulta) =>\r\n    //     <div class=\"cards-consulta\">\r\n    //         <div class='top'>\r\n    //         <img src={doctor} />\r\n    //         </div>\r\n    //     <div class=\"consulta\" key={consulta._id}>\r\n    //         <div class=\"fecha\">\r\n    //         <p><img class=\"calendar\" src={motive}/><div class=\"fechaPad\">Motivo: {consulta.motivo}</div></p>\r\n    //         </div>\r\n    //         <div class=\"fecha\">\r\n    //         <p><img class=\"calendar\" src={calendar}/><div class=\"fechaPad\">Fecha: {moment(consulta.fecha).format('DD/MM/yyyy HH:mm')}</div></p>\r\n    //         </div>\r\n    //         <div class=\"fecha\">\r\n    //         <p><img class=\"calendar\" src={personas}/><div class=\"fechaPad\">Paciente: {consulta.paciente.nickname}</div></p>\r\n    //         </div>\r\n    //         <div class=\"consultaBotones\">\r\n    //         <EditarConsulta id={consulta._id} />\r\n    //         </div>\r\n    //         <div class=\"consultaBotones\">\r\n    //         <EliminarConsulta id={consulta._id}/>\r\n    //         </div>\r\n    //         <div class=\"consultaBotones\">\r\n    //         <MensajeMedico id={consulta._id} />\r\n    //         </div>\r\n    //         <div class=\"consultaBotones\">\r\n    //         <CrearCita id={consulta._id} idPaciente={consulta.paciente._id} />\r\n    //         </div>\r\n    //     </div>\r\n    //     </div>\r\n    //     );\r\n    //     content2 = props.consultaAtencionEspecial.map((consultaAtencionEspecial) =>\r\n    //     <div class=\"cards-consulta\">\r\n    //         <div class='top'>\r\n    //         <img src={doctor} />\r\n    //         </div>\r\n    //     <div class=\"consulta\" key={consultaAtencionEspecial._id}>\r\n    //         <div class=\"fecha\">\r\n    //         <p><img class=\"calendar\" src={motive}/><div class=\"fechaPad\">Finalizada: {consultaAtencionEspecial.finalizada}</div></p>\r\n    //         </div>\r\n    //         <div class=\"fecha\">\r\n    //         <p><img class=\"calendar\" src={calendar}/><div class=\"fechaPad\">Fecha: {moment(consultaAtencionEspecial.fecha).format('DD/MM/yyyy HH:mm')}</div></p>\r\n    //         </div>\r\n    //         <div class=\"fecha\">\r\n    //         <p><img class=\"calendar\" src={personas}/><div class=\"fechaPad\">Paciente: {consultaAtencionEspecial.paciente.nickname}</div></p>\r\n    //         </div>\r\n    //         <div class=\"consultaBotones\">\r\n    //         <EditarConsultaAtencionEspecial id={consultaAtencionEspecial._id} />\r\n    //         </div>\r\n    //     </div>\r\n    //     </div>\r\n    //     );\r\n\r\n    //     return (\r\n    //         <div class=\"consultaList\">\r\n    //           {content2}\r\n    //           {content}\r\n    //           <br></br>\r\n    //         </div>\r\n    //       );\r\n    // }\r\n  }\r\n\r\n\r\n  function Citas(){\r\n    const history = useHistory();\r\n    const { userData } = useContext(UserContext);\r\n    const citas = () => history.push(\"/\"+userData.user.id+\"/citas\");\r\n    return(\r\n        <div class=\"citas\">\r\n        <button className=\"rad-button wwt flat\" onClick={citas}>Ver citas</button>\r\n        </div>\r\n    );\r\n    }\r\n\r\n    function Informes(){\r\n        const history = useHistory();\r\n        const { userData } = useContext(UserContext);\r\n        const informes = () => history.push(\"/\"+userData.user.id+\"/informes\");\r\n        return(\r\n            <div class=\"citas\">\r\n            <button className=\"rad-button wwt flat\" onClick={informes}>Ver informes</button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    function Enfermedades(){\r\n        const history = useHistory();\r\n        const { userData } = useContext(UserContext);\r\n        const enfermedades = () => history.push(\"/\"+userData.user.id+\"/enfermedades\");\r\n        return(\r\n            <div class=\"citas\">\r\n            <button className=\"rad-button wwt flat\" onClick={enfermedades}>Ver enfermedades</button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    function RegistrosTension(props){\r\n        const history = useHistory();\r\n        const { userData } = useContext(UserContext);\r\n        const registrosTension = () => history.push(\"/\"+userData.user.id+\"/registrosTension\");\r\n        return(\r\n            <button className=\"rad-button wwt flat\" onClick={registrosTension}>Registros de tensión <br></br>arterial</button>\r\n        );\r\n    }\r\n\r\nexport default class MiPerfil extends React.Component{\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            rol: this.props.userData.rol,\r\n            loading: true,\r\n        }\r\n    }\r\n\r\n    async componentWillMount(){\r\n        const { id } = this.state\r\n        const { rol } = this.state\r\n        \r\n        let url;\r\n        let ciudad;\r\n        let hospital;\r\n        if(rol==\"Paciente\"){\r\n            url = await api.getUserById(id)\r\n            ciudad = await api.getProvinciaById(url.data.data.ciudad)\r\n            hospital = await api.getHospitalById(url.data.data.centroMedico)\r\n        }else{\r\n            url = await api.getMedicById(id)\r\n            ciudad = await api.getProvinciaById(url.data.data.ciudad)\r\n            hospital = await api.getHospitalById(url.data.data.centroMedico)\r\n        }\r\n        // }else{\r\n        //     url = await api.getConsultaByMedicoId(id)\r\n            \r\n        // }\r\n        // const response = await fetch(url);\r\n        // const data = await response.json();\r\n        this.setState({\r\n            user: url.data.data,\r\n            loading:false, \r\n            rol:rol,\r\n            ciudad:ciudad.data.data,\r\n            hospital:hospital.data.data,\r\n        });\r\n    }\r\n    \r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                {this.state.loading || !this.state.id ? (\r\n                    <div>loading...</div>\r\n                ):(\r\n                    <div>\r\n                        <Prueba rol={this.state.rol} user={this.state.user} ciudad={this.state.ciudad} hospital={this.state.hospital}/>\r\n                        \r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\tratamientos\\CrearTratamientoMedicacion.jsx",["471","472","473","474","475"],"import React, { useState, useContext,useEffect } from 'react';\r\nimport { useHistory, Redirect,useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport ErrorNotice from \"../../components/misc/ErrorNotice\";\r\nimport UserContext from \"../../context/userContext\";\r\nimport Select from 'react-select';\r\nimport Async from 'react-async';\r\nimport api from '../../api'\r\nfunction CrearTratamientoMedicacion () {\r\nconst [cantidadTomar, setCantidadTomar] = useState();\r\nconst [cantidadCaja, setCantidadCaja] = useState();\r\nconst [fecha1, setFecha1] = useState();\r\nconst [fecha2,setFecha2] = useState();\r\nconst [medicamento,setMedicamento] = useState();\r\nconst idEnfermedad = useParams()\r\nconst enfermedad = idEnfermedad.idEnfermedad\r\nconst { userData } = useContext(UserContext);\r\nconst [error, setError] = useState();\r\nconst history = useHistory();\r\nconst onChange = async (selectedOption) => {\r\n\r\n    console.log(`Option selected:`, selectedOption);\r\n    setMedicamento(selectedOption.val);\r\n    \r\n  };\r\n\r\nconst onChange2 = async (valor) => {\r\n\r\n    setFecha2(valor.target.value);\r\n\r\n};\r\nconst submit = async (e) => {\r\ne.preventDefault();\r\ntry{\r\nconst newUser = {cantidadTomar,cantidadCaja,fecha1,fecha2,medicamento,enfermedad};\r\nawait axios.post(\"http://localhost:5000/tratamientoMedicacion/add\", newUser);\r\n\r\nhistory.push(\"/\");\r\n} catch(err) {\r\nerr.response.data.msg && setError(err.response.data.msg)\r\n}\r\n};\r\n    const sacaMedicamentos = () =>\r\n    api.getMedicamentos()\r\n    .then(res => {return res})\r\n\r\n    return (\r\n    <div className=\"form\">\r\n    <h2>Crear enfermedad</h2>\r\n    {error && <ErrorNotice message={error} clearError={() => setError(undefined)} />}\r\n    <form onSubmit={submit}>\r\n    <div class=\"input\">\r\n    <div class=\"inputBox\">\r\n    <label>Medicamento: </label><br></br>\r\n    <Async promiseFn={sacaMedicamentos}>\r\n\r\n{({ data, err }) => {\r\n          if (err) return `Something went wrong: ${err.message}`\r\n\r\n          if (data){\r\n\r\n            const selectMedicamento = [];\r\n            data.data.data.map((medicamento) => { selectMedicamento.push({ desc:medicamento.nombre, val: medicamento._id  })});\r\n\r\n            return (\r\n                <Select options={selectMedicamento} getOptionLabel={(option)=>option.desc}\r\n                getOptionValue={(option)=>option.val } id=\"selectMedicamento\" placeholder=\"Selecciona un medicamento\" onChange={onChange} ></Select>\r\n                \r\n            )}\r\n        }}\r\n</Async>\r\n    </div>\r\n    <div class=\"inputBox\">\r\n    <label>Cantidad de la caja: </label><br></br>\r\n    <input type=\"number\" id=\"cantidadCaja\" onChange={e => setCantidadCaja(e.target.value)}/><br></br>\r\n    </div>\r\n    <div class=\"inputBox\">\r\n    <label>Cantidad que tomar: </label><br></br>\r\n    <input type=\"number\" id=\"cantidadTomar\" onChange={e => setCantidadTomar(e.target.value)}/><br></br>\r\n    </div>\r\n    <div class=\"inputBox\">\r\n    <label>Hora: </label><br></br>\r\n    <input type=\"datetime-local\" id=\"fecha1\" onChange={e => setFecha1(e.target.value)}/><br></br>\r\n    </div>\r\n    <Fecha2 cantidadTomar={cantidadTomar} cambia={onChange2}/>\r\n    <div class=\"inputBox\">\r\n    <input type=\"submit\" value=\"Crear\" className=\"btn btn-primary\" />\r\n    </div>\r\n    </div>\r\n    </form>\r\n    </div>\r\n    );\r\n}\r\n\r\nfunction Fecha2(props){\r\n    if(props.cantidadTomar==2){\r\n        return(\r\n            <div class=\"inputBox\">\r\n            <label>Hora 2: </label><br></br>\r\n            <input type=\"datetime-local\" id=\"fecha2\" onChange={props.cambia}/><br></br>\r\n            </div>  \r\n        );\r\n    }else{\r\n        return(\r\n        <div></div>\r\n        );}\r\n}\r\nexport default CrearTratamientoMedicacion;","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\tratamientos\\TratamientoMedicacion.jsx",["476","477","478","479","480","481","482","483","484","485","486","487","488","489","490","491","492","493","494"],"import React, { Component, useEffect, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport moment from 'moment';\r\nimport api from '../../api'\r\nimport UserContext from \"../../context/userContext\";\r\nimport calendar from '../logo/calendar.png'\r\nimport consultaImg from '../logo/medical-file.png'\r\nimport motive from '../logo/libreta-de-direcciones.png'\r\nimport personas from '../logo/personas.png'\r\nimport doctor from '../logo/doctor.png'\r\nimport medic from '../logo/medico.png'\r\n\r\nfunction Prueba(props) {\r\n    let content;\r\n    if(props.rol==\"Paciente\"){\r\n        content = props.tratamiento.map((tratamiento) =>\r\n        <div class=\"cards-consulta\">\r\n        <div class='top'>\r\n        <img src={doctor} />\r\n        </div>\r\n        <div class=\"consulta\" key={tratamiento._id}>\r\n        <div class=\"fecha\">\r\n            <p><img class=\"calendar\" src={motive}/><div class=\"fechaPad\">Enfermedad: {props.enfermedad.nombre}</div></p>\r\n            </div>\r\n            <div class=\"fecha\">\r\n            <p><img class=\"calendar\" src={calendar}/><div class=\"fechaPad\">Medicamento: {tratamiento.medicamento.nombre}</div></p>\r\n            </div>\r\n            <div class=\"fecha\">\r\n            <p><img class=\"calendar\" src={personas}/><div class=\"fechaPad\">Cantidad que tomar: {tratamiento.cantidadTomar}</div></p>\r\n            </div>\r\n            <div class=\"fecha\">\r\n            <p><img class=\"calendar\" src={personas}/><div class=\"fechaPad\">Hora: {moment(tratamiento.fecha1).format('DD/MM/yyyy HH:mm')}</div></p>\r\n            </div>\r\n        </div>\r\n        </div>\r\n        );\r\n\r\n        return (\r\n            <div class=\"consultaList\">\r\n              {content}\r\n              <br></br><br></br>\r\n            </div>\r\n          );\r\n    }else{\r\n        content = props.tratamiento.map((tratamiento) =>\r\n        <div class=\"cards-consulta\">\r\n            <div class='top'>\r\n            <img src={doctor} />\r\n            </div>\r\n        <div class=\"consulta\" key={tratamiento._id}>\r\n            <div class=\"fecha\">\r\n            <p><img class=\"calendar\" src={motive}/><div class=\"fechaPad\">Enfermedad: {tratamiento.enfermedad}</div></p>\r\n            </div>\r\n            <div class=\"fecha\">\r\n            <p><img class=\"calendar\" src={calendar}/><div class=\"fechaPad\">Medicamento: {tratamiento.medicamento.nombre}</div></p>\r\n            </div>\r\n            <div class=\"fecha\">\r\n            <p><img class=\"calendar\" src={personas}/><div class=\"fechaPad\">Cantidad que tomar: {tratamiento.cantidadTomar}</div></p>\r\n            </div>\r\n            <div class=\"fecha\">\r\n            <p><img class=\"calendar\" src={personas}/><div class=\"fechaPad\">Hora: {tratamiento.fecha1}</div></p>\r\n            </div>\r\n        </div>\r\n        </div>\r\n        );\r\n\r\n        return (\r\n            <div class=\"consultaList\">\r\n              {content}\r\n              <br></br><br></br>\r\n            </div>\r\n          );\r\n    }\r\n  }\r\n\r\n\r\nexport default class TratamientoMedicacion extends React.Component{\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            rol: this.props.userData.rol,\r\n            idEnfermedad: this.props.match.params.idEnfermedad,\r\n            loading: true,\r\n            consulta:null,\r\n        }\r\n    }\r\n\r\n    async componentWillMount(){\r\n        const { id } = this.state\r\n        const { idEnfermedad } = this.state\r\n        const { rol } = this.state\r\n        let url;\r\n        let enfermedad;\r\n        url = await api.getTratamientoMedicacionByEnfermedad(idEnfermedad)\r\n        enfermedad = await api.getEnfermedad(idEnfermedad)\r\n        \r\n        // const response = await fetch(url);\r\n        // const data = await response.json();\r\n        this.setState({tratamiento: url.data.data,enfermedad:enfermedad.data.data, loading:false, rol:rol});\r\n    }\r\n    \r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                {this.state.loading || !this.state.tratamiento ? (\r\n                    <div>loading...</div>\r\n                ):(\r\n                    <div>\r\n                        <Prueba tratamiento={this.state.tratamiento} rol={this.state.rol} enfermedad={this.state.enfermedad} />\r\n                        \r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\tratamientos\\CrearTratamientoRehabilitacion.jsx",["495","496","497","498","499"],"import React, { useState, useContext,useEffect } from 'react';\r\nimport { useHistory, Redirect,useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport ErrorNotice from \"../../components/misc/ErrorNotice\";\r\nimport UserContext from \"../../context/userContext\";\r\nimport Select from 'react-select';\r\nimport Async from 'react-async';\r\nimport api from '../../api'\r\nfunction CrearTratamientoRehabilitacion () {\r\nconst [consulta, setConsulta] = useState();\r\nconst [fecha, setFecha] = useState();\r\nconst [descripcion, setDescripcion] = useState();\r\nconst idEnfermedad = useParams()\r\nconst enfermedad = idEnfermedad.idEnfermedad\r\nconst { userData } = useContext(UserContext);\r\nconst [error, setError] = useState();\r\nconst history = useHistory();\r\n\r\nconst submit = async (e) => {\r\ne.preventDefault();\r\ntry{\r\nconst enfermedadAux = await api.getEnfermedad(enfermedad)\r\nconst pac = enfermedadAux.data.data.paciente\r\nconst user = await api.getUserById(pac)\r\nconst centroMedico = user.data.data.centroMedico\r\nconst newUser = {consulta,fecha,centroMedico,enfermedad,descripcion};\r\nawait axios.post(\"http://localhost:5000/tratamientoRehabilitacion/add\", newUser);\r\n\r\nhistory.push(\"/\");\r\n} catch(err) {\r\nerr.response.data.msg && setError(err.response.data.msg)\r\n}\r\n};\r\n\r\n\r\n    return (\r\n    <div className=\"form\">\r\n    <h2>Crear tratamiento rehabilitación:</h2>\r\n    {error && <ErrorNotice message={error} clearError={() => setError(undefined)} />}\r\n    <form onSubmit={submit}>\r\n    <div class=\"input\">\r\n    <div class=\"inputBox\">\r\n    <label>Fecha: </label><br></br>\r\n    <input type=\"datetime-local\" id=\"fecha\" onChange={e => setFecha(e.target.value)}/><br></br>\r\n    </div>\r\n    <div class=\"inputBox\">\r\n    <label>Consulta: </label><br></br>\r\n    <input type=\"text\" id=\"consulta\" onChange={e => setConsulta(e.target.value)}/><br></br>\r\n    </div>\r\n    <div class=\"inputBox\">\r\n    <label>Descripción: </label><br></br>\r\n    <input type=\"text\" id=\"descripcion\" onChange={e => setDescripcion(e.target.value)}/><br></br>\r\n    </div>\r\n    <div class=\"inputBox\">\r\n    <input type=\"submit\" value=\"Crear\" className=\"btn btn-primary\" />\r\n    </div>\r\n    </div>\r\n    </form>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default CrearTratamientoRehabilitacion;","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\tratamientos\\TratamientoRehabilitacion.jsx",["500","501","502","503","504","505","506","507","508","509","510","511","512","513","514","515","516","517","518"],"import React, { Component, useEffect, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport moment from 'moment';\r\nimport api from '../../api'\r\nimport UserContext from \"../../context/userContext\";\r\nimport calendar from '../logo/calendar.png'\r\nimport consultaImg from '../logo/medical-file.png'\r\nimport motive from '../logo/libreta-de-direcciones.png'\r\nimport personas from '../logo/personas.png'\r\nimport doctor from '../logo/doctor.png'\r\nimport medic from '../logo/medico.png'\r\n\r\nfunction Prueba(props) {\r\n    let content;\r\n    if(props.rol==\"Paciente\"){\r\n        content = props.tratamiento.map((tratamiento) =>\r\n        <div class=\"cards-consulta\">\r\n        <div class='top'>\r\n        <img src={doctor} />\r\n        </div>\r\n        <div class=\"consulta\" key={tratamiento._id}>\r\n        <div class=\"fecha\">\r\n            <div class=\"fecha\">\r\n            <p><img class=\"calendar\" src={personas}/><div class=\"fechaPad\">Fecha: {moment(tratamiento.fecha).format('DD/MM/yyyy HH:mm')}</div></p>\r\n            </div>\r\n            <div class=\"fecha\">\r\n            <p><img class=\"calendar\" src={motive}/><div class=\"fechaPad\">Enfermedad: {props.enfermedad.nombre}</div></p>\r\n            </div>\r\n            <div class=\"fecha\">\r\n            <p><img class=\"calendar\" src={personas}/><div class=\"fechaPad\">Centro Médico: {tratamiento.centroMedico.nombre}</div></p>\r\n            </div>\r\n            <div class=\"fecha\">\r\n            <p><img class=\"calendar\" src={calendar}/><div class=\"fechaPad\">Consulta: {tratamiento.consulta}</div></p>\r\n            </div>\r\n        </div>\r\n        </div>\r\n        </div>\r\n        );\r\n\r\n        return (\r\n            <div class=\"consultaList\">\r\n              {content}\r\n              <br></br><br></br>\r\n            </div>\r\n          );\r\n    }else{\r\n        content = props.tratamiento.map((tratamiento) =>\r\n        <div class=\"cards-consulta\">\r\n            <div class='top'>\r\n            <img src={doctor} />\r\n            </div>\r\n        <div class=\"consulta\" key={tratamiento._id}>\r\n        <div class=\"fecha\">\r\n            <p><img class=\"calendar\" src={personas}/><div class=\"fechaPad\">Fecha: {moment(tratamiento.fecha).format('DD/MM/yyyy HH:mm')}</div></p>\r\n            </div>\r\n            <div class=\"fecha\">\r\n            <p><img class=\"calendar\" src={motive}/><div class=\"fechaPad\">Enfermedad: {props.enfermedad.nombre}</div></p>\r\n            </div>\r\n            <div class=\"fecha\">\r\n            <p><img class=\"calendar\" src={personas}/><div class=\"fechaPad\">Centro Médico: {tratamiento.centroMedico.nombre}</div></p>\r\n            </div>\r\n            <div class=\"fecha\">\r\n            <p><img class=\"calendar\" src={calendar}/><div class=\"fechaPad\">Consulta: {tratamiento.consulta}</div></p>\r\n            </div>\r\n        </div>\r\n        </div>\r\n        );\r\n\r\n        return (\r\n            <div class=\"consultaList\">\r\n              {content}\r\n              <br></br><br></br>\r\n            </div>\r\n          );\r\n    }\r\n  }\r\n\r\n\r\nexport default class TratamientoRehabilitacion extends React.Component{\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            rol: this.props.userData.rol,\r\n            idEnfermedad: this.props.match.params.idEnfermedad,\r\n            loading: true,\r\n            consulta:null,\r\n        }\r\n    }\r\n\r\n    async componentWillMount(){\r\n        const { id } = this.state\r\n        const { idEnfermedad } = this.state\r\n        const { rol } = this.state\r\n        let url;\r\n        let enfermedad;\r\n        url = await api.getTratamientoRehabilitacionByEnfermedad(idEnfermedad)\r\n        enfermedad = await api.getEnfermedad(idEnfermedad)\r\n        \r\n        // const response = await fetch(url);\r\n        // const data = await response.json();\r\n        this.setState({tratamiento: url.data.data,enfermedad:enfermedad.data.data, loading:false, rol:rol});\r\n    }\r\n    \r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                {this.state.loading || !this.state.tratamiento ? (\r\n                    <div>loading...</div>\r\n                ):(\r\n                    <div>\r\n                        <Prueba tratamiento={this.state.tratamiento} rol={this.state.rol} enfermedad={this.state.enfermedad} />\r\n                        \r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\registrosTension\\RegistrosTension.jsx",["519","520","521","522","523","524","525","526","527","528","529","530","531","532","533","534","535","536","537"],"import React, { Component, useEffect, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport moment from 'moment';\r\nimport api, { editarConsultaAtencionEspecial } from '../../api'\r\nimport UserContext from \"../../context/userContext\";\r\nimport calendar from '../logo/calendar.png'\r\nimport consultaImg from '../logo/medical-file.png'\r\nimport motive from '../logo/libreta-de-direcciones.png'\r\nimport personas from '../logo/personas.png'\r\nimport doctor from '../logo/doctor.png'\r\nimport medic from '../logo/medico.png'\r\nimport exclamation from '../logo/exclamation-mark.png'\r\n\r\nfunction Prueba(props) {\r\n    const history = useHistory();\r\n    let content;\r\n    let content2;\r\n    if(props.rol==\"Paciente\"){\r\n        content = props.registrosTension.map((registrosTension) =>\r\n        <div class=\"cards-consulta\">\r\n        <div class='top'>\r\n        <img src={doctor} />\r\n        </div>\r\n        <div class=\"consulta\" key={registrosTension._id}>\r\n            <div class=\"fecha\">\r\n            <p><img class=\"calendar\" src={calendar}/><div class=\"fechaPad\">Fecha y hora: {moment(registrosTension.fechaHora).format('DD/MM/yyyy HH:mm')}</div></p>\r\n            </div>\r\n            <div class=\"fecha\">\r\n            <p><img class=\"calendar\" src={motive}/><div class=\"fechaPad\">Presión Sístole: {registrosTension.presionSistole}</div></p>\r\n            </div>\r\n            <div class=\"fecha\">\r\n            <p><img class=\"calendar\" src={medic}/><div class=\"fechaPad\">Presión Diástole: {registrosTension.presionDiastole}</div></p>\r\n            </div>\r\n            <div class=\"fecha\">\r\n            <p><img class=\"calendar\" src={medic}/><div class=\"fechaPad\">Pulsaciones: {registrosTension.pulsaciones}</div></p>\r\n            </div>\r\n        </div>\r\n        </div>\r\n        );\r\n\r\n        return (\r\n            <div class=\"consultaList\">\r\n                <br></br>\r\n                 <RegistrarTension />\r\n                <br></br>\r\n              {content}\r\n            </div>\r\n          );\r\n    }else{\r\n        content = props.registrosTension.map((registrosTension) =>\r\n        <div class=\"cards-consulta\">\r\n            <div class='top'>\r\n            <img src={doctor} />\r\n            </div>\r\n        <div class=\"consulta\" key={registrosTension._id}>\r\n        <div class=\"fecha\">\r\n            <p><img class=\"calendar\" src={calendar}/><div class=\"fechaPad\">Fecha y hora: {moment(registrosTension.fechaHora).format('DD/MM/yyyy HH:mm')}</div></p>\r\n            </div>\r\n            <div class=\"fecha\">\r\n            <p><img class=\"calendar\" src={motive}/><div class=\"fechaPad\">Presión Sístole: {registrosTension.presionSistole}</div></p>\r\n            </div>\r\n            <div class=\"fecha\">\r\n            <p><img class=\"calendar\" src={medic}/><div class=\"fechaPad\">Presión Diástole: {registrosTension.presionDiastole}</div></p>\r\n            </div>\r\n            <div class=\"fecha\">\r\n            <p><img class=\"calendar\" src={medic}/><div class=\"fechaPad\">Pulsaciones: {registrosTension.pulsaciones}</div></p>\r\n            </div>\r\n        </div>\r\n        </div>\r\n        );\r\n\r\n        return (\r\n            <div class=\"consultaList\">\r\n              {content}\r\n              <br></br>\r\n            </div>\r\n          );\r\n    }\r\n  }\r\n\r\n  function RegistrarTension(){\r\n    const history = useHistory();\r\n    const { userData } = useContext(UserContext);\r\n    const registrarTension = () => history.push(\"/\"+userData.user.id+\"/registrarTension\");\r\n    return(\r\n        <div class=\"crearConsulta\">\r\n        <button className=\"rad-button-2 wwt flat\" onClick={registrarTension}>Registrar tensión arterial</button>\r\n        </div>\r\n    );\r\n    }\r\n\r\nexport default class RegistrosTension extends React.Component{\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            rol: this.props.userData.rol,\r\n            loading: true,\r\n            consulta:null,\r\n        }\r\n    }\r\n\r\n    async componentWillMount(){\r\n        const { id } = this.state\r\n        const { rol } = this.state\r\n        let url;\r\n        // if(rol==\"Paciente\"){\r\n        url = await api.getRegistrosTensionByPacienteId(id);\r\n        // }else{\r\n        //     url = await api.getConsultaByMedicoId(id)\r\n        //     url2 = await api.getConsultaAtencionEspecialByMedico(id)\r\n        // }\r\n        // const response = await fetch(url);\r\n        // const data = await response.json();\r\n        this.setState({registrosTension:url.data.data, loading:false, rol:rol});\r\n    }\r\n    \r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                {this.state.loading || !this.state.registrosTension ? (\r\n                    <div>loading...</div>\r\n                ):(\r\n                    <div>\r\n                        <Prueba registrosTension={this.state.registrosTension} rol={this.state.rol}/>\r\n                        \r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\registrosTension\\RegistrarTension.jsx",["538","539","540","541","542"],"import React, { useState, useContext,useEffect } from 'react';\r\nimport { useHistory, Redirect } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport ErrorNotice from \"../../components/misc/ErrorNotice\";\r\nimport UserContext from \"../../context/userContext\";\r\nimport Select from 'react-select';\r\nimport Async from 'react-async';\r\nimport api from '../../api'\r\nimport moment from \"moment\";\r\nfunction RegistrarTension () {\r\nconst fechaHora = moment().format(\"MM-DD-YYYY HH:mm\")\r\nconst [presionSistole, setPresionSistole] = useState();\r\nconst [presionDiastole, setPresionDiastole] = useState();\r\nconst [pulsaciones, setPulsaciones] = useState();\r\nconst { userData } = useContext(UserContext);\r\nconst paciente = userData.user.id;\r\nconst [error, setError] = useState();\r\nconst history = useHistory();\r\n\r\nconst submit = async (e) => {\r\ne.preventDefault();\r\ntry{\r\nconst newUser = {fechaHora,presionSistole,presionDiastole,pulsaciones,paciente};\r\nawait axios.post(\"http://localhost:5000/registroTension/add\", newUser);\r\n\r\nhistory.push(\"/\"+userData.user.id+\"/registrosTension\");\r\n} catch(err) {\r\nerr.response.data.msg && setError(err.response.data.msg)\r\n}\r\n};\r\n\r\n    return (\r\n    <div className=\"form\">\r\n    <h2>Crear registro tensión arterial</h2>\r\n    {error && <ErrorNotice message={error} clearError={() => setError(undefined)} />}\r\n    <form onSubmit={submit}>\r\n    <div class=\"input\">\r\n    <div class=\"inputBox\">\r\n    <label>Presión sístole: </label><br></br>\r\n    <input type=\"number\" step=\"0.01\" id=\"presionSistole\" onChange={e => setPresionSistole(e.target.value)}/><br></br>\r\n    </div>\r\n    <div class=\"inputBox\">\r\n    <label>Presión diástole: </label><br></br>\r\n    <input type=\"number\" step=\"0.01\" id=\"presionDiastole\" onChange={e => setPresionDiastole(e.target.value)}/><br></br>\r\n    </div>\r\n    <div class=\"inputBox\">\r\n    <label>Pulsaciones: </label><br></br>\r\n    <input type=\"number\" id=\"pulsaciones\" onChange={e => setPulsaciones(e.target.value)}/><br></br>\r\n    </div>\r\n    <div class=\"inputBox\">\r\n    <input type=\"submit\" value=\"Registrar\" className=\"btn btn-primary\" />\r\n    </div>\r\n    </div>\r\n    </form>\r\n    </div>\r\n    );\r\n}\r\nexport default RegistrarTension;","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\covid19\\RegistrarCovid19.jsx",["543","544","545","546"],"import React, { useState, useContext,useEffect } from 'react';\r\nimport { useHistory, Redirect } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport ErrorNotice from \"../../components/misc/ErrorNotice\";\r\nimport UserContext from \"../../context/userContext\";\r\nimport Select from 'react-select';\r\nimport Async from 'react-async';\r\nimport api from '../../api'\r\nimport moment from \"moment\";\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nfunction RegistrarCovid19 () {\r\nconst fecha = moment().format(\"MM-DD-YYYY HH:mm\")\r\nconst [contactoConPositivo, setContactoConPositivo] = useState();\r\nconst [tieneFiebre, setTieneFiebre] = useState();\r\nconst [tieneTos, setTieneTos] = useState();\r\nconst [cuestaRespirar, setCuestaRespirar] = useState();\r\nconst [perdidaOlfato, setPerdidaOlfato] = useState();\r\nconst [perdidaGusto, setPerdidaGusto] = useState();\r\nconst [dolorGarganta, setDolorGarganta] = useState();\r\nconst [diarrea, setDiarrea] = useState();\r\nconst [dolorMuscular, setDolorMuscular] = useState();\r\nconst [otrosSintomas, setOtrosSintomas] = useState();\r\nconst { userData } = useContext(UserContext);\r\nconst paciente = userData.user.id;\r\nconst [error, setError] = useState();\r\nconst history = useHistory();\r\n\r\nconst submit = async (e) => {\r\ne.preventDefault();\r\ntry{\r\n    const user = await api.getUserById(paciente);\r\n    const medico = user.data.data.medico;\r\nconst newUser = {fecha,contactoConPositivo,tieneFiebre,tieneTos,cuestaRespirar,perdidaOlfato,perdidaGusto,dolorGarganta,\r\n    diarrea,dolorMuscular,otrosSintomas,paciente,medico};\r\nawait axios.post(\"http://localhost:5000/registroCovid/add\", newUser);\r\n\r\nhistory.push(\"/\"+userData.user.id+\"/covid19\");\r\n} catch(err) {\r\nerr.response.data.msg && setError(err.response.data.msg)\r\n}\r\n};\r\n\r\n    return (\r\n    <div className=\"form\">\r\n    <h2>Crear registro COVID-19</h2>\r\n    {error && <ErrorNotice message={error} clearError={() => setError(undefined)} />}\r\n    <form onSubmit={submit}>\r\n    <div class=\"input\">\r\n    <div class=\"registerAux\">\r\n    <div class=\"inputBox-sangre\">\r\n    <label>Contacto con positivo: </label><br></br>\r\n    <Checkbox id=\"contactoConPositivo\" onChange={e => setContactoConPositivo(e.target.checked)}/><br></br>\r\n    </div>\r\n    <div class=\"inputBox-sangre\">\r\n    <label>Tiene fiebre: </label><br></br>\r\n    <Checkbox id=\"tieneFiebre\" onChange={e => setTieneFiebre(e.target.checked)}/><br></br>\r\n    </div>\r\n    <div class=\"inputBox-sangre\">\r\n    <label>Tiene tos: </label><br></br>\r\n    <Checkbox id=\"tieneTos\" onChange={e => setTieneTos(e.target.checked)}/><br></br>\r\n    </div>\r\n    <div class=\"inputBox-sangre\">\r\n    <label>Cuesta respirar: </label><br></br>\r\n    <Checkbox id=\"cuestaRespirar\" onChange={e => setCuestaRespirar(e.target.checked)}/><br></br>\r\n    </div>\r\n    <div class=\"inputBox-sangre\">\r\n    <label>Pérdida olfato: </label><br></br>\r\n    <Checkbox id=\"perdidaOlfato\" onChange={e => setPerdidaOlfato(e.target.checked)}/><br></br>\r\n    </div>\r\n    </div>\r\n    <div class=\"registerAux\">\r\n    <div class=\"inputBox-sangre\">\r\n    <label>Pérdida gusto: </label><br></br>\r\n    <Checkbox id=\"perdidaGusto\" onChange={e => setPerdidaGusto(e.target.checked)}/><br></br>\r\n    </div>\r\n    <div class=\"inputBox-sangre\">\r\n    <label>Dolor de garganta: </label><br></br>\r\n    <Checkbox id=\"dolorGarganta\" onChange={e => setDolorGarganta(e.target.checked)}/><br></br>\r\n    </div>\r\n    <div class=\"inputBox-sangre\">\r\n    <label>Diarrea: </label><br></br>\r\n    <Checkbox id=\"diarrea\" onChange={e => setDiarrea(e.target.checked)}/><br></br>\r\n    </div>\r\n    <div class=\"inputBox-sangre\">\r\n    <label>Dolor muscular: </label><br></br>\r\n    <Checkbox id=\"dolorMuscular\" onChange={e => setDolorMuscular(e.target.checked)}/><br></br>\r\n    </div>\r\n    <div class=\"inputBox-sangre\">\r\n    <label>Otros síntomas: </label><br></br>\r\n    <textarea id=\"otrosSintomas\" onChange={e => setOtrosSintomas(e.target.value)}/><br></br>\r\n    </div>\r\n    </div>\r\n    <div id=\"registrarPac\" class=\"inputBox\">\r\n    <input type=\"submit\" value=\"Registrar\" className=\"btn btn-primary\" />\r\n    </div>\r\n    </div>\r\n    </form>\r\n    </div>\r\n    );\r\n}\r\nexport default RegistrarCovid19;","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\covid19\\Covid19.jsx",["547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566"],"C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\citas\\CrearCitaPcr.jsx",["567","568","569","570","571"],"import React, { useState, useContext,useEffect  } from 'react';\r\nimport { useHistory, Redirect,useParams  } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport ErrorNotice from \"../../components/misc/ErrorNotice\";\r\nimport UserContext from \"../../context/userContext\";\r\nimport api from '../../api'\r\nimport Select from 'react-select';\r\nimport Async from 'react-async';\r\n\r\nfunction CrearCitaPcr () {\r\nconst [fecha, setFecha] = useState();\r\nconst [motivo, setMotivo] = useState();\r\nconst tipoCita=\"PCR\"\r\nconst { id } = useParams()\r\nconst { idRegistro } = useParams()\r\nconst { userData, setUserData } = useContext(UserContext);\r\nconst consulta = id;\r\nconst medico = userData.user.id;\r\nconst [error, setError] = useState();\r\nconst history = useHistory();\r\n\r\nconst submit = async (e) => {\r\ne.preventDefault();\r\ntry{\r\nconst aux = await api.getMedicById(medico)\r\nconst aux2 = await api.getProvinciaById(aux.data.data.ciudad)\r\nconst aux3 = await api.getHospitalById(aux.data.data.centroMedico)\r\nconst ciudad = aux2.data.data.provincia;\r\nconst centroMedico = aux3.data.data.nombre;\r\nconst registro = await api.getRegistroCovidById(idRegistro)\r\nconst paciente = registro.data.data.paciente;\r\nconst registroCovid = registro.data.data._id;\r\nconst newCita = {fecha,ciudad,centroMedico,motivo,consulta,paciente,medico,tipoCita,registroCovid};\r\nawait axios.post(\"http://localhost:5000/citasPcr/add\", newCita);\r\n\r\nhistory.push(userData.user.id+\"/covid19\");\r\n} catch(err) {\r\nerr.response.data.msg && setError(err.response.data.msg)\r\n}\r\n};\r\n\r\n\r\n\r\n    return (\r\n    <div className=\"form-horizontal\">\r\n    <h2>Crear cita de PCR</h2>\r\n    {error && <ErrorNotice message={error} clearError={() => setError(undefined)} />}\r\n    <form onSubmit={submit}>\r\n    <div class=\"input\">\r\n    <div class=\"registerAux\">\r\n    <div class=\"inputBox\">\r\n    <label>Fecha: </label><br></br>\r\n    <input type=\"date\" id=\"fecha\" onChange={e => setFecha(e.target.value)}/><br></br>\r\n    </div>\r\n    <div class=\"inputBox\">\r\n    <label>Motivo: </label><br></br>\r\n    <input type=\"text\" id=\"motivo\" onChange={e => setMotivo(e.target.value)}/><br></br>\r\n    </div>\r\n    </div>\r\n    <div id=\"registrarPac\" class=\"inputBox\">\r\n    <br></br>\r\n    <input type=\"submit\" value=\"Crear\" className=\"btn btn-primary\" />\r\n    </div>\r\n    </div>\r\n    </form>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default CrearCitaPcr;","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\informes\\CrearInformePcr.jsx",["572","573","574","575","576"],"import React, { useState, useContext,useEffect } from 'react';\r\nimport { useHistory, Redirect, useParams } from \"react-router-dom\";\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport axios from \"axios\";\r\nimport ErrorNotice from \"../../components/misc/ErrorNotice\";\r\nimport UserContext from \"../../context/userContext\";\r\nimport Select from 'react-select';\r\nimport Async from 'react-async';\r\nimport api from '../../api'\r\nfunction CrearInformePcr () {\r\nconst [fecha, setFecha] = useState();\r\nconst [motivo, setMotivo] = useState();\r\nconst [descripcion, setDescripcion] = useState();\r\nconst [esPositivo, setEsPositivo] = useState();\r\nconst {idCita} = useParams();\r\nconst citaPcr = idCita;\r\nconst { userData } = useContext(UserContext);\r\nconst { idPaciente } = useParams()\r\nconst paciente = idPaciente;\r\nconst medico = userData.user.id;\r\n\r\nconst [error, setError] = useState();\r\nconst history = useHistory();\r\n\r\nconst submit = async (e) => {\r\ne.preventDefault();\r\ntry{\r\nconst newUser = {fecha,motivo,descripcion,esPositivo,citaPcr,paciente,medico};\r\nawait axios.post(\"http://localhost:5000/informes/pcr/add\", newUser);\r\n\r\nhistory.push(\"/\");\r\n} catch(err) {\r\nerr.response.data.msg && setError(err.response.data.msg)\r\n}\r\n};\r\n\r\n    return (\r\n    <div className=\"form-horizontal\">\r\n    <h2>Crear informe presencial</h2>\r\n    {error && <ErrorNotice message={error} clearError={() => setError(undefined)} />}\r\n    <form onSubmit={submit}>\r\n    <div class=\"input\">\r\n    <div class=\"registerAux\">\r\n    <div class=\"inputBox\">\r\n    <label>Fecha: </label><br></br>\r\n    <input type=\"datetime-local\" id=\"fecha\" onChange={e => setFecha(e.target.value)}/><br></br>\r\n    </div>\r\n    <div class=\"inputBox\">\r\n    <label>Motivo: </label><br></br>\r\n    <input type=\"text\" id=\"motivo\" onChange={e => setMotivo(e.target.value)}/><br></br>\r\n    </div>\r\n    </div>\r\n    <div class=\"registerAux\">\r\n    <div class=\"inputBox\">\r\n    <label>Descripción: </label><br></br>\r\n    <input type=\"text\" id=\"descripcion\" onChange={e => setDescripcion(e.target.value)}/><br></br>\r\n    </div>\r\n    <div class=\"inputBox-sangre\">\r\n    <label>Es positivo: </label><br></br>\r\n    <Checkbox id=\"esPositivo\" onClick={e => setEsPositivo(estadoCheckbox(e))}/><br></br>\r\n    </div>\r\n    </div>\r\n    <div id=\"registrarPac\" class=\"inputBox\">\r\n    <input type=\"submit\" value=\"Crear\" className=\"btn btn-primary\" />\r\n    </div>\r\n    </div>\r\n    </form>\r\n    </div>\r\n    );\r\n}\r\n\r\nfunction estadoCheckbox(e){\r\n    let bol;\r\n    if(e.target.checked){\r\n        bol= true;\r\n    }else{\r\n        bol= false;\r\n    }\r\n    return bol;\r\n}\r\nexport default CrearInformePcr;","C:\\Users\\carsa\\Desktop\\pruebaUsuarios\\frontend\\src\\components\\pacientes\\MisPacientes.jsx",["577","578","579","580","581","582","583","584","585","586","587","588","589","590","591","592","593"],"import React, { Component, useEffect, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport moment from 'moment';\r\nimport api, { editarConsultaAtencionEspecial } from '../../api'\r\nimport UserContext from \"../../context/userContext\";\r\nimport calendar from '../logo/calendar.png'\r\nimport consultaImg from '../logo/medical-file.png'\r\nimport motive from '../logo/libreta-de-direcciones.png'\r\nimport personas from '../logo/personas.png'\r\nimport doctor from '../logo/doctor.png'\r\nimport medic from '../logo/medico.png'\r\nimport user from '../logo/user.png'\r\nimport nickname from '../logo/nickname.png'\r\nimport telefono from '../logo/phone.png'\r\nimport exclamation from '../logo/exclamation-mark.png'\r\nimport ReactSearchBox from 'react-search-box'\r\n\r\nfunction Prueba(props) {\r\n    const history = useHistory();\r\n    const mensajes = () => history.push(\"/mensajes\");\r\n    let content;\r\n    let buscador;\r\n    buscador = <div class=\"barraBusqueda\">\r\n                <ReactSearchBox\r\n          placeholder=\"Introduce el nombre del paciente\"\r\n          onChange={props.pacienteFilter}\r\n          value={props.inputValue}\r\n        />\r\n        {/* <label htmlFor=\"search\">Search by name</label>\r\n        <input type=\"text\" value={props.inputValue} onChange={props.pacienteFilter} /> */}\r\n    </div>\r\n    content = props.pacientes.map((pacientes) =>\r\n    <div class=\"cards-consulta\">\r\n    <div class=\"topCitas\">\r\n    <img src={pacientes.imgPerfil || user}/>\r\n    </div>\r\n    <div class=\"consulta\" key={pacientes._id}>\r\n        <div class=\"fecha\">\r\n        <p><img class=\"calendar\" src={personas}/><div class=\"fechaPad\">Nombre: {pacientes.nombre}</div></p>\r\n        </div>\r\n        <div class=\"fecha\">\r\n        <p><img class=\"calendar\" src={nickname}/><div class=\"fechaPad\">Nombre usuario: {pacientes.nickname}</div></p>\r\n        </div>\r\n        <div class=\"fecha\">\r\n        <p><img class=\"calendar\" src={telefono}/><div class=\"fechaPad\">Teléfono: {pacientes.telefono}</div></p>\r\n        </div>  \r\n        <div class=\"consultaBotones\">\r\n        <Informes idPaciente={pacientes} />\r\n        </div>\r\n        <div class=\"consultaBotones\">\r\n        <Enfermedades idPaciente={pacientes} />\r\n        </div>\r\n    </div>\r\n    </div>\r\n    );\r\n        return (\r\n            <div class=\"consultaList\">\r\n              {buscador}\r\n              {content}\r\n              <br></br>\r\n            </div>\r\n          );\r\n    \r\n  }\r\n\r\n  function Informes(props){\r\n    const history = useHistory();\r\n    const informes = () => history.push(\"/\"+props.idPaciente._id+\"/informes\");\r\n    return(\r\n        <button className=\"rad-button-2 wwt flat\" onClick={informes}>Informes</button>\r\n      \r\n    );\r\n    }\r\n\r\n    function Enfermedades(props){\r\n        const history = useHistory();\r\n        const enfermedades = () => history.push(\"/\"+props.idPaciente._id+\"/enfermedades\");\r\n        return(\r\n            <button className=\"rad-button-2 wwt flat\" onClick={enfermedades}>Enfermedades</button>\r\n        );\r\n        }\r\n\r\nexport default class MisPacientes extends React.Component{\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            rol: this.props.userData.rol,\r\n            loading: true,\r\n            consulta:null,\r\n            inputValue:'',\r\n            pacientes: [],\r\n\r\n        }\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const { id } = this.state\r\n        const { rol } = this.state\r\n        let url;\r\n        url = await api.getPacientesByMedicoId(id)\r\n        // const response = await fetch(url);\r\n        // const data = await response.json();\r\n        this.setState({pacientes: url.data.data, loading:false, rol:rol});\r\n    }\r\n    \r\n    pacienteFilter = (event) => {\r\n        console.log(\"change\",event)\r\n        this.setState({\r\n            inputValue: event\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const pacientesFiltrados =\r\n        this.state.pacientes.filter(paciente => {\r\n            return paciente.nickname.toLowerCase().includes(this.state.inputValue.toLowerCase())\r\n        })\r\n        return(\r\n            <div>\r\n                {this.state.loading || !this.state.pacientes ? (\r\n                    <div>loading...</div>\r\n                ):(\r\n                    <div>\r\n                        <Prueba pacientes={pacientesFiltrados} rol={this.state.rol} pacienteFilter={this.pacienteFilter}\r\n                        inputValue={this.state.inputValue} />\r\n                        \r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}",{"ruleId":"594","replacedBy":"595"},{"ruleId":"596","replacedBy":"597"},{"ruleId":"598","severity":1,"message":"599","line":2,"column":39,"nodeType":"600","messageId":"601","endLine":2,"endColumn":49},{"ruleId":"598","severity":1,"message":"602","line":2,"column":50,"nodeType":"600","messageId":"601","endLine":2,"endColumn":59},{"ruleId":"603","severity":1,"message":"604","line":70,"column":38,"nodeType":"605","messageId":"606","endLine":70,"endColumn":40},{"ruleId":"603","severity":1,"message":"604","line":102,"column":44,"nodeType":"605","messageId":"606","endLine":102,"endColumn":46},{"ruleId":"598","severity":1,"message":"607","line":169,"column":10,"nodeType":"600","messageId":"601","endLine":169,"endColumn":17},{"ruleId":"598","severity":1,"message":"608","line":4,"column":8,"nodeType":"600","messageId":"601","endLine":4,"endColumn":12},{"ruleId":"598","severity":1,"message":"609","line":1,"column":27,"nodeType":"600","messageId":"601","endLine":1,"endColumn":37},{"ruleId":"598","severity":1,"message":"610","line":4,"column":8,"nodeType":"600","messageId":"601","endLine":4,"endColumn":19},{"ruleId":"611","severity":1,"message":"612","line":143,"column":41,"nodeType":"613","messageId":"614","endLine":143,"endColumn":43},{"ruleId":"611","severity":1,"message":"612","line":165,"column":44,"nodeType":"613","messageId":"614","endLine":165,"endColumn":46},{"ruleId":"611","severity":1,"message":"612","line":228,"column":45,"nodeType":"613","messageId":"614","endLine":228,"endColumn":47},{"ruleId":"598","severity":1,"message":"609","line":1,"column":27,"nodeType":"600","messageId":"601","endLine":1,"endColumn":37},{"ruleId":"611","severity":1,"message":"612","line":143,"column":44,"nodeType":"613","messageId":"614","endLine":143,"endColumn":46},{"ruleId":"611","severity":1,"message":"612","line":206,"column":47,"nodeType":"613","messageId":"614","endLine":206,"endColumn":49},{"ruleId":"598","severity":1,"message":"615","line":1,"column":17,"nodeType":"600","messageId":"601","endLine":1,"endColumn":26},{"ruleId":"598","severity":1,"message":"616","line":2,"column":22,"nodeType":"600","messageId":"601","endLine":2,"endColumn":26},{"ruleId":"598","severity":1,"message":"617","line":6,"column":8,"nodeType":"600","messageId":"601","endLine":6,"endColumn":16},{"ruleId":"598","severity":1,"message":"618","line":7,"column":7,"nodeType":"600","messageId":"601","endLine":7,"endColumn":14},{"ruleId":"598","severity":1,"message":"619","line":2,"column":21,"nodeType":"600","messageId":"601","endLine":2,"endColumn":29},{"ruleId":"598","severity":1,"message":"617","line":10,"column":9,"nodeType":"600","messageId":"601","endLine":10,"endColumn":17},{"ruleId":"598","severity":1,"message":"615","line":1,"column":38,"nodeType":"600","messageId":"601","endLine":1,"endColumn":47},{"ruleId":"598","severity":1,"message":"619","line":2,"column":22,"nodeType":"600","messageId":"601","endLine":2,"endColumn":30},{"ruleId":"598","severity":1,"message":"620","line":6,"column":8,"nodeType":"600","messageId":"601","endLine":6,"endColumn":14},{"ruleId":"598","severity":1,"message":"621","line":7,"column":8,"nodeType":"600","messageId":"601","endLine":7,"endColumn":13},{"ruleId":"598","severity":1,"message":"622","line":9,"column":8,"nodeType":"600","messageId":"601","endLine":9,"endColumn":13},{"ruleId":"598","severity":1,"message":"623","line":17,"column":7,"nodeType":"600","messageId":"601","endLine":17,"endColumn":15},{"ruleId":"598","severity":1,"message":"624","line":18,"column":7,"nodeType":"600","messageId":"601","endLine":18,"endColumn":19},{"ruleId":"603","severity":1,"message":"604","line":46,"column":23,"nodeType":"605","messageId":"606","endLine":46,"endColumn":25},{"ruleId":"603","severity":1,"message":"604","line":77,"column":29,"nodeType":"605","messageId":"606","endLine":77,"endColumn":31},{"ruleId":"598","severity":1,"message":"625","line":3,"column":8,"nodeType":"600","messageId":"601","endLine":3,"endColumn":13},{"ruleId":"594","replacedBy":"626"},{"ruleId":"596","replacedBy":"627"},{"ruleId":"598","severity":1,"message":"628","line":1,"column":17,"nodeType":"600","messageId":"601","endLine":1,"endColumn":25},{"ruleId":"598","severity":1,"message":"609","line":1,"column":27,"nodeType":"600","messageId":"601","endLine":1,"endColumn":37},{"ruleId":"598","severity":1,"message":"625","line":3,"column":8,"nodeType":"600","messageId":"601","endLine":3,"endColumn":13},{"ruleId":"598","severity":1,"message":"610","line":4,"column":8,"nodeType":"600","messageId":"601","endLine":4,"endColumn":19},{"ruleId":"598","severity":1,"message":"629","line":5,"column":8,"nodeType":"600","messageId":"601","endLine":5,"endColumn":19},{"ruleId":"598","severity":1,"message":"630","line":1,"column":17,"nodeType":"600","messageId":"601","endLine":1,"endColumn":26},{"ruleId":"598","severity":1,"message":"615","line":1,"column":28,"nodeType":"600","messageId":"601","endLine":1,"endColumn":37},{"ruleId":"598","severity":1,"message":"631","line":4,"column":15,"nodeType":"600","messageId":"601","endLine":4,"endColumn":45},{"ruleId":"598","severity":1,"message":"632","line":7,"column":8,"nodeType":"600","messageId":"601","endLine":7,"endColumn":19},{"ruleId":"598","severity":1,"message":"633","line":18,"column":11,"nodeType":"600","messageId":"601","endLine":18,"endColumn":19},{"ruleId":"603","severity":1,"message":"604","line":21,"column":17,"nodeType":"605","messageId":"606","endLine":21,"endColumn":19},{"ruleId":"634","severity":1,"message":"635","line":25,"column":9,"nodeType":"636","endLine":25,"endColumn":29},{"ruleId":"634","severity":1,"message":"635","line":29,"column":16,"nodeType":"636","endLine":29,"endColumn":52},{"ruleId":"634","severity":1,"message":"635","line":32,"column":16,"nodeType":"636","endLine":32,"endColumn":54},{"ruleId":"634","severity":1,"message":"635","line":35,"column":16,"nodeType":"636","endLine":35,"endColumn":51},{"ruleId":"634","severity":1,"message":"635","line":47,"column":13,"nodeType":"636","endLine":47,"endColumn":38},{"ruleId":"634","severity":1,"message":"635","line":51,"column":16,"nodeType":"636","endLine":51,"endColumn":54},{"ruleId":"634","severity":1,"message":"635","line":54,"column":16,"nodeType":"636","endLine":54,"endColumn":51},{"ruleId":"634","severity":1,"message":"635","line":72,"column":13,"nodeType":"636","endLine":72,"endColumn":33},{"ruleId":"634","severity":1,"message":"635","line":76,"column":16,"nodeType":"636","endLine":76,"endColumn":52},{"ruleId":"634","severity":1,"message":"635","line":79,"column":16,"nodeType":"636","endLine":79,"endColumn":54},{"ruleId":"634","severity":1,"message":"635","line":82,"column":20,"nodeType":"636","endLine":82,"endColumn":58},{"ruleId":"634","severity":1,"message":"635","line":106,"column":17,"nodeType":"636","endLine":106,"endColumn":42},{"ruleId":"634","severity":1,"message":"635","line":110,"column":20,"nodeType":"636","endLine":110,"endColumn":58},{"ruleId":"634","severity":1,"message":"635","line":113,"column":20,"nodeType":"636","endLine":113,"endColumn":58},{"ruleId":"634","severity":1,"message":"635","line":116,"column":16,"nodeType":"636","endLine":116,"endColumn":55},{"ruleId":"634","severity":1,"message":"635","line":119,"column":16,"nodeType":"636","endLine":119,"endColumn":55},{"ruleId":"598","severity":1,"message":"617","line":159,"column":17,"nodeType":"600","messageId":"601","endLine":159,"endColumn":25},{"ruleId":"598","severity":1,"message":"618","line":208,"column":15,"nodeType":"600","messageId":"601","endLine":208,"endColumn":22},{"ruleId":"603","severity":1,"message":"604","line":234,"column":15,"nodeType":"605","messageId":"606","endLine":234,"endColumn":17},{"ruleId":"598","severity":1,"message":"599","line":3,"column":10,"nodeType":"600","messageId":"601","endLine":3,"endColumn":20},{"ruleId":"634","severity":1,"message":"635","line":15,"column":17,"nodeType":"636","endLine":15,"endColumn":70},{"ruleId":"598","severity":1,"message":"630","line":1,"column":17,"nodeType":"600","messageId":"601","endLine":1,"endColumn":26},{"ruleId":"598","severity":1,"message":"618","line":20,"column":11,"nodeType":"600","messageId":"601","endLine":20,"endColumn":18},{"ruleId":"603","severity":1,"message":"637","line":60,"column":31,"nodeType":"605","messageId":"606","endLine":60,"endColumn":33},{"ruleId":"603","severity":1,"message":"637","line":70,"column":31,"nodeType":"605","messageId":"606","endLine":70,"endColumn":33},{"ruleId":"598","severity":1,"message":"638","line":77,"column":10,"nodeType":"600","messageId":"601","endLine":77,"endColumn":19},{"ruleId":"598","severity":1,"message":"609","line":1,"column":27,"nodeType":"600","messageId":"601","endLine":1,"endColumn":37},{"ruleId":"598","severity":1,"message":"615","line":1,"column":38,"nodeType":"600","messageId":"601","endLine":1,"endColumn":47},{"ruleId":"598","severity":1,"message":"599","line":3,"column":10,"nodeType":"600","messageId":"601","endLine":3,"endColumn":20},{"ruleId":"598","severity":1,"message":"619","line":3,"column":21,"nodeType":"600","messageId":"601","endLine":3,"endColumn":29},{"ruleId":"598","severity":1,"message":"610","line":4,"column":8,"nodeType":"600","messageId":"601","endLine":4,"endColumn":19},{"ruleId":"598","severity":1,"message":"639","line":5,"column":10,"nodeType":"600","messageId":"601","endLine":5,"endColumn":21},{"ruleId":"598","severity":1,"message":"640","line":6,"column":8,"nodeType":"600","messageId":"601","endLine":6,"endColumn":16},{"ruleId":"598","severity":1,"message":"641","line":7,"column":8,"nodeType":"600","messageId":"601","endLine":7,"endColumn":14},{"ruleId":"598","severity":1,"message":"642","line":28,"column":7,"nodeType":"600","messageId":"601","endLine":28,"endColumn":16},{"ruleId":"603","severity":1,"message":"637","line":93,"column":19,"nodeType":"605","messageId":"606","endLine":93,"endColumn":21},{"ruleId":"598","severity":1,"message":"643","line":102,"column":17,"nodeType":"600","messageId":"601","endLine":102,"endColumn":23},{"ruleId":"611","severity":1,"message":"612","line":121,"column":57,"nodeType":"613","messageId":"614","endLine":121,"endColumn":59},{"ruleId":"598","severity":1,"message":"599","line":3,"column":10,"nodeType":"600","messageId":"601","endLine":3,"endColumn":20},{"ruleId":"634","severity":1,"message":"635","line":14,"column":17,"nodeType":"636","endLine":14,"endColumn":59},{"ruleId":"598","severity":1,"message":"630","line":1,"column":17,"nodeType":"600","messageId":"601","endLine":1,"endColumn":26},{"ruleId":"598","severity":1,"message":"615","line":1,"column":28,"nodeType":"600","messageId":"601","endLine":1,"endColumn":37},{"ruleId":"598","severity":1,"message":"618","line":8,"column":11,"nodeType":"600","messageId":"601","endLine":8,"endColumn":18},{"ruleId":"603","severity":1,"message":"604","line":11,"column":17,"nodeType":"605","messageId":"606","endLine":11,"endColumn":19},{"ruleId":"603","severity":1,"message":"604","line":102,"column":22,"nodeType":"605","messageId":"606","endLine":102,"endColumn":24},{"ruleId":"598","severity":1,"message":"617","line":116,"column":17,"nodeType":"600","messageId":"601","endLine":116,"endColumn":25},{"ruleId":"603","severity":1,"message":"604","line":118,"column":26,"nodeType":"605","messageId":"606","endLine":118,"endColumn":28},{"ruleId":"603","severity":1,"message":"604","line":118,"column":60,"nodeType":"605","messageId":"606","endLine":118,"endColumn":62},{"ruleId":"603","severity":1,"message":"604","line":120,"column":32,"nodeType":"605","messageId":"606","endLine":120,"endColumn":34},{"ruleId":"603","severity":1,"message":"604","line":120,"column":66,"nodeType":"605","messageId":"606","endLine":120,"endColumn":68},{"ruleId":"603","severity":1,"message":"604","line":122,"column":32,"nodeType":"605","messageId":"606","endLine":122,"endColumn":34},{"ruleId":"603","severity":1,"message":"604","line":124,"column":32,"nodeType":"605","messageId":"606","endLine":124,"endColumn":34},{"ruleId":"598","severity":1,"message":"617","line":134,"column":17,"nodeType":"600","messageId":"601","endLine":134,"endColumn":25},{"ruleId":"598","severity":1,"message":"618","line":152,"column":15,"nodeType":"600","messageId":"601","endLine":152,"endColumn":22},{"ruleId":"603","severity":1,"message":"604","line":177,"column":15,"nodeType":"605","messageId":"606","endLine":177,"endColumn":17},{"ruleId":"598","severity":1,"message":"615","line":1,"column":38,"nodeType":"600","messageId":"601","endLine":1,"endColumn":47},{"ruleId":"598","severity":1,"message":"619","line":2,"column":22,"nodeType":"600","messageId":"601","endLine":2,"endColumn":30},{"ruleId":"598","severity":1,"message":"644","line":17,"column":19,"nodeType":"600","messageId":"601","endLine":17,"endColumn":30},{"ruleId":"611","severity":1,"message":"612","line":93,"column":43,"nodeType":"613","messageId":"614","endLine":93,"endColumn":45},{"ruleId":"603","severity":1,"message":"604","line":119,"column":18,"nodeType":"605","messageId":"606","endLine":119,"endColumn":20},{"ruleId":"611","severity":1,"message":"612","line":132,"column":39,"nodeType":"613","messageId":"614","endLine":132,"endColumn":41},{"ruleId":"598","severity":1,"message":"609","line":1,"column":27,"nodeType":"600","messageId":"601","endLine":1,"endColumn":37},{"ruleId":"598","severity":1,"message":"615","line":1,"column":38,"nodeType":"600","messageId":"601","endLine":1,"endColumn":47},{"ruleId":"598","severity":1,"message":"599","line":3,"column":10,"nodeType":"600","messageId":"601","endLine":3,"endColumn":20},{"ruleId":"598","severity":1,"message":"619","line":3,"column":21,"nodeType":"600","messageId":"601","endLine":3,"endColumn":29},{"ruleId":"598","severity":1,"message":"610","line":4,"column":8,"nodeType":"600","messageId":"601","endLine":4,"endColumn":19},{"ruleId":"598","severity":1,"message":"639","line":5,"column":10,"nodeType":"600","messageId":"601","endLine":5,"endColumn":21},{"ruleId":"598","severity":1,"message":"640","line":6,"column":8,"nodeType":"600","messageId":"601","endLine":6,"endColumn":16},{"ruleId":"603","severity":1,"message":"637","line":120,"column":19,"nodeType":"605","messageId":"606","endLine":120,"endColumn":21},{"ruleId":"598","severity":1,"message":"615","line":1,"column":38,"nodeType":"600","messageId":"601","endLine":1,"endColumn":47},{"ruleId":"598","severity":1,"message":"619","line":2,"column":22,"nodeType":"600","messageId":"601","endLine":2,"endColumn":30},{"ruleId":"598","severity":1,"message":"620","line":6,"column":8,"nodeType":"600","messageId":"601","endLine":6,"endColumn":14},{"ruleId":"598","severity":1,"message":"621","line":7,"column":8,"nodeType":"600","messageId":"601","endLine":7,"endColumn":13},{"ruleId":"598","severity":1,"message":"645","line":8,"column":8,"nodeType":"600","messageId":"601","endLine":8,"endColumn":11},{"ruleId":"598","severity":1,"message":"615","line":1,"column":38,"nodeType":"600","messageId":"601","endLine":1,"endColumn":47},{"ruleId":"598","severity":1,"message":"619","line":2,"column":22,"nodeType":"600","messageId":"601","endLine":2,"endColumn":30},{"ruleId":"598","severity":1,"message":"620","line":7,"column":8,"nodeType":"600","messageId":"601","endLine":7,"endColumn":14},{"ruleId":"598","severity":1,"message":"621","line":8,"column":8,"nodeType":"600","messageId":"601","endLine":8,"endColumn":13},{"ruleId":"598","severity":1,"message":"645","line":9,"column":8,"nodeType":"600","messageId":"601","endLine":9,"endColumn":11},{"ruleId":"598","severity":1,"message":"615","line":1,"column":38,"nodeType":"600","messageId":"601","endLine":1,"endColumn":47},{"ruleId":"598","severity":1,"message":"619","line":2,"column":22,"nodeType":"600","messageId":"601","endLine":2,"endColumn":30},{"ruleId":"598","severity":1,"message":"646","line":3,"column":8,"nodeType":"600","messageId":"601","endLine":3,"endColumn":16},{"ruleId":"598","severity":1,"message":"620","line":7,"column":8,"nodeType":"600","messageId":"601","endLine":7,"endColumn":14},{"ruleId":"598","severity":1,"message":"621","line":8,"column":8,"nodeType":"600","messageId":"601","endLine":8,"endColumn":13},{"ruleId":"598","severity":1,"message":"645","line":9,"column":8,"nodeType":"600","messageId":"601","endLine":9,"endColumn":11},{"ruleId":"598","severity":1,"message":"615","line":1,"column":38,"nodeType":"600","messageId":"601","endLine":1,"endColumn":47},{"ruleId":"598","severity":1,"message":"619","line":2,"column":22,"nodeType":"600","messageId":"601","endLine":2,"endColumn":30},{"ruleId":"598","severity":1,"message":"646","line":3,"column":8,"nodeType":"600","messageId":"601","endLine":3,"endColumn":16},{"ruleId":"598","severity":1,"message":"620","line":7,"column":8,"nodeType":"600","messageId":"601","endLine":7,"endColumn":14},{"ruleId":"598","severity":1,"message":"621","line":8,"column":8,"nodeType":"600","messageId":"601","endLine":8,"endColumn":13},{"ruleId":"598","severity":1,"message":"645","line":9,"column":8,"nodeType":"600","messageId":"601","endLine":9,"endColumn":11},{"ruleId":"598","severity":1,"message":"630","line":1,"column":17,"nodeType":"600","messageId":"601","endLine":1,"endColumn":26},{"ruleId":"598","severity":1,"message":"615","line":1,"column":28,"nodeType":"600","messageId":"601","endLine":1,"endColumn":37},{"ruleId":"598","severity":1,"message":"618","line":8,"column":11,"nodeType":"600","messageId":"601","endLine":8,"endColumn":18},{"ruleId":"603","severity":1,"message":"604","line":14,"column":17,"nodeType":"605","messageId":"606","endLine":14,"endColumn":19},{"ruleId":"603","severity":1,"message":"604","line":191,"column":13,"nodeType":"605","messageId":"606","endLine":191,"endColumn":15},{"ruleId":"598","severity":1,"message":"618","line":236,"column":15,"nodeType":"600","messageId":"601","endLine":236,"endColumn":22},{"ruleId":"598","severity":1,"message":"618","line":247,"column":15,"nodeType":"600","messageId":"601","endLine":247,"endColumn":22},{"ruleId":"598","severity":1,"message":"618","line":258,"column":15,"nodeType":"600","messageId":"601","endLine":258,"endColumn":22},{"ruleId":"598","severity":1,"message":"618","line":269,"column":15,"nodeType":"600","messageId":"601","endLine":269,"endColumn":22},{"ruleId":"598","severity":1,"message":"609","line":1,"column":27,"nodeType":"600","messageId":"601","endLine":1,"endColumn":37},{"ruleId":"598","severity":1,"message":"615","line":1,"column":38,"nodeType":"600","messageId":"601","endLine":1,"endColumn":47},{"ruleId":"598","severity":1,"message":"599","line":3,"column":10,"nodeType":"600","messageId":"601","endLine":3,"endColumn":20},{"ruleId":"598","severity":1,"message":"619","line":3,"column":21,"nodeType":"600","messageId":"601","endLine":3,"endColumn":29},{"ruleId":"598","severity":1,"message":"610","line":4,"column":8,"nodeType":"600","messageId":"601","endLine":4,"endColumn":19},{"ruleId":"598","severity":1,"message":"639","line":5,"column":10,"nodeType":"600","messageId":"601","endLine":5,"endColumn":21},{"ruleId":"598","severity":1,"message":"640","line":6,"column":8,"nodeType":"600","messageId":"601","endLine":6,"endColumn":16},{"ruleId":"603","severity":1,"message":"637","line":323,"column":19,"nodeType":"605","messageId":"606","endLine":323,"endColumn":21},{"ruleId":"598","severity":1,"message":"647","line":356,"column":16,"nodeType":"600","messageId":"601","endLine":356,"endColumn":18},{"ruleId":"598","severity":1,"message":"609","line":1,"column":27,"nodeType":"600","messageId":"601","endLine":1,"endColumn":37},{"ruleId":"598","severity":1,"message":"615","line":1,"column":38,"nodeType":"600","messageId":"601","endLine":1,"endColumn":47},{"ruleId":"598","severity":1,"message":"599","line":4,"column":10,"nodeType":"600","messageId":"601","endLine":4,"endColumn":20},{"ruleId":"598","severity":1,"message":"619","line":4,"column":21,"nodeType":"600","messageId":"601","endLine":4,"endColumn":29},{"ruleId":"598","severity":1,"message":"610","line":5,"column":8,"nodeType":"600","messageId":"601","endLine":5,"endColumn":19},{"ruleId":"598","severity":1,"message":"639","line":6,"column":10,"nodeType":"600","messageId":"601","endLine":6,"endColumn":21},{"ruleId":"598","severity":1,"message":"640","line":7,"column":8,"nodeType":"600","messageId":"601","endLine":7,"endColumn":16},{"ruleId":"603","severity":1,"message":"637","line":222,"column":19,"nodeType":"605","messageId":"606","endLine":222,"endColumn":21},{"ruleId":"598","severity":1,"message":"609","line":1,"column":27,"nodeType":"600","messageId":"601","endLine":1,"endColumn":37},{"ruleId":"598","severity":1,"message":"615","line":1,"column":38,"nodeType":"600","messageId":"601","endLine":1,"endColumn":47},{"ruleId":"598","severity":1,"message":"646","line":3,"column":8,"nodeType":"600","messageId":"601","endLine":3,"endColumn":16},{"ruleId":"598","severity":1,"message":"599","line":4,"column":10,"nodeType":"600","messageId":"601","endLine":4,"endColumn":20},{"ruleId":"598","severity":1,"message":"619","line":4,"column":21,"nodeType":"600","messageId":"601","endLine":4,"endColumn":29},{"ruleId":"598","severity":1,"message":"610","line":5,"column":8,"nodeType":"600","messageId":"601","endLine":5,"endColumn":19},{"ruleId":"598","severity":1,"message":"639","line":6,"column":10,"nodeType":"600","messageId":"601","endLine":6,"endColumn":21},{"ruleId":"598","severity":1,"message":"640","line":7,"column":8,"nodeType":"600","messageId":"601","endLine":7,"endColumn":16},{"ruleId":"603","severity":1,"message":"637","line":110,"column":19,"nodeType":"605","messageId":"606","endLine":110,"endColumn":21},{"ruleId":"598","severity":1,"message":"647","line":122,"column":16,"nodeType":"600","messageId":"601","endLine":122,"endColumn":18},{"ruleId":"598","severity":1,"message":"609","line":1,"column":27,"nodeType":"600","messageId":"601","endLine":1,"endColumn":37},{"ruleId":"598","severity":1,"message":"615","line":1,"column":38,"nodeType":"600","messageId":"601","endLine":1,"endColumn":47},{"ruleId":"598","severity":1,"message":"646","line":3,"column":8,"nodeType":"600","messageId":"601","endLine":3,"endColumn":16},{"ruleId":"598","severity":1,"message":"599","line":4,"column":10,"nodeType":"600","messageId":"601","endLine":4,"endColumn":20},{"ruleId":"598","severity":1,"message":"619","line":4,"column":21,"nodeType":"600","messageId":"601","endLine":4,"endColumn":29},{"ruleId":"598","severity":1,"message":"610","line":5,"column":8,"nodeType":"600","messageId":"601","endLine":5,"endColumn":19},{"ruleId":"598","severity":1,"message":"639","line":6,"column":10,"nodeType":"600","messageId":"601","endLine":6,"endColumn":21},{"ruleId":"598","severity":1,"message":"640","line":7,"column":8,"nodeType":"600","messageId":"601","endLine":7,"endColumn":16},{"ruleId":"603","severity":1,"message":"637","line":110,"column":19,"nodeType":"605","messageId":"606","endLine":110,"endColumn":21},{"ruleId":"598","severity":1,"message":"647","line":122,"column":16,"nodeType":"600","messageId":"601","endLine":122,"endColumn":18},{"ruleId":"598","severity":1,"message":"630","line":1,"column":17,"nodeType":"600","messageId":"601","endLine":1,"endColumn":26},{"ruleId":"598","severity":1,"message":"615","line":1,"column":28,"nodeType":"600","messageId":"601","endLine":1,"endColumn":37},{"ruleId":"598","severity":1,"message":"641","line":3,"column":8,"nodeType":"600","messageId":"601","endLine":3,"endColumn":14},{"ruleId":"598","severity":1,"message":"632","line":7,"column":8,"nodeType":"600","messageId":"601","endLine":7,"endColumn":19},{"ruleId":"598","severity":1,"message":"648","line":11,"column":8,"nodeType":"600","messageId":"601","endLine":11,"endColumn":13},{"ruleId":"603","severity":1,"message":"604","line":15,"column":17,"nodeType":"605","messageId":"606","endLine":15,"endColumn":19},{"ruleId":"634","severity":1,"message":"635","line":19,"column":9,"nodeType":"636","endLine":19,"endColumn":29},{"ruleId":"634","severity":1,"message":"635","line":23,"column":16,"nodeType":"636","endLine":23,"endColumn":52},{"ruleId":"634","severity":1,"message":"635","line":26,"column":16,"nodeType":"636","endLine":26,"endColumn":54},{"ruleId":"634","severity":1,"message":"635","line":29,"column":16,"nodeType":"636","endLine":29,"endColumn":54},{"ruleId":"634","severity":1,"message":"635","line":32,"column":16,"nodeType":"636","endLine":32,"endColumn":54},{"ruleId":"634","severity":1,"message":"635","line":54,"column":13,"nodeType":"636","endLine":54,"endColumn":33},{"ruleId":"634","severity":1,"message":"635","line":58,"column":16,"nodeType":"636","endLine":58,"endColumn":52},{"ruleId":"634","severity":1,"message":"635","line":61,"column":16,"nodeType":"636","endLine":61,"endColumn":54},{"ruleId":"634","severity":1,"message":"635","line":64,"column":16,"nodeType":"636","endLine":64,"endColumn":54},{"ruleId":"634","severity":1,"message":"635","line":67,"column":16,"nodeType":"636","endLine":67,"endColumn":54},{"ruleId":"598","severity":1,"message":"617","line":97,"column":13,"nodeType":"600","messageId":"601","endLine":97,"endColumn":21},{"ruleId":"598","severity":1,"message":"618","line":116,"column":15,"nodeType":"600","messageId":"601","endLine":116,"endColumn":22},{"ruleId":"598","severity":1,"message":"617","line":117,"column":17,"nodeType":"600","messageId":"601","endLine":117,"endColumn":25},{"ruleId":"598","severity":1,"message":"615","line":1,"column":38,"nodeType":"600","messageId":"601","endLine":1,"endColumn":47},{"ruleId":"598","severity":1,"message":"619","line":2,"column":22,"nodeType":"600","messageId":"601","endLine":2,"endColumn":30},{"ruleId":"611","severity":1,"message":"612","line":60,"column":45,"nodeType":"613","messageId":"614","endLine":60,"endColumn":47},{"ruleId":"598","severity":1,"message":"609","line":1,"column":27,"nodeType":"600","messageId":"601","endLine":1,"endColumn":37},{"ruleId":"598","severity":1,"message":"615","line":1,"column":38,"nodeType":"600","messageId":"601","endLine":1,"endColumn":47},{"ruleId":"598","severity":1,"message":"599","line":3,"column":10,"nodeType":"600","messageId":"601","endLine":3,"endColumn":20},{"ruleId":"598","severity":1,"message":"619","line":3,"column":21,"nodeType":"600","messageId":"601","endLine":3,"endColumn":29},{"ruleId":"598","severity":1,"message":"610","line":4,"column":8,"nodeType":"600","messageId":"601","endLine":4,"endColumn":19},{"ruleId":"598","severity":1,"message":"639","line":5,"column":10,"nodeType":"600","messageId":"601","endLine":5,"endColumn":21},{"ruleId":"598","severity":1,"message":"640","line":6,"column":8,"nodeType":"600","messageId":"601","endLine":6,"endColumn":16},{"ruleId":"598","severity":1,"message":"641","line":7,"column":8,"nodeType":"600","messageId":"601","endLine":7,"endColumn":14},{"ruleId":"603","severity":1,"message":"637","line":92,"column":19,"nodeType":"605","messageId":"606","endLine":92,"endColumn":21},{"ruleId":"598","severity":1,"message":"649","line":102,"column":37,"nodeType":"600","messageId":"601","endLine":102,"endColumn":49},{"ruleId":"598","severity":1,"message":"630","line":1,"column":17,"nodeType":"600","messageId":"601","endLine":1,"endColumn":26},{"ruleId":"598","severity":1,"message":"615","line":1,"column":28,"nodeType":"600","messageId":"601","endLine":1,"endColumn":37},{"ruleId":"598","severity":1,"message":"631","line":4,"column":15,"nodeType":"600","messageId":"601","endLine":4,"endColumn":45},{"ruleId":"598","severity":1,"message":"650","line":6,"column":8,"nodeType":"600","messageId":"601","endLine":6,"endColumn":12},{"ruleId":"598","severity":1,"message":"632","line":8,"column":8,"nodeType":"600","messageId":"601","endLine":8,"endColumn":19},{"ruleId":"598","severity":1,"message":"651","line":9,"column":8,"nodeType":"600","messageId":"601","endLine":9,"endColumn":14},{"ruleId":"598","severity":1,"message":"652","line":10,"column":8,"nodeType":"600","messageId":"601","endLine":10,"endColumn":16},{"ruleId":"598","severity":1,"message":"653","line":11,"column":8,"nodeType":"600","messageId":"601","endLine":11,"endColumn":14},{"ruleId":"598","severity":1,"message":"648","line":12,"column":8,"nodeType":"600","messageId":"601","endLine":12,"endColumn":13},{"ruleId":"598","severity":1,"message":"633","line":16,"column":11,"nodeType":"600","messageId":"601","endLine":16,"endColumn":19},{"ruleId":"598","severity":1,"message":"654","line":18,"column":9,"nodeType":"600","messageId":"601","endLine":18,"endColumn":16},{"ruleId":"598","severity":1,"message":"655","line":19,"column":9,"nodeType":"600","messageId":"601","endLine":19,"endColumn":17},{"ruleId":"603","severity":1,"message":"604","line":20,"column":17,"nodeType":"605","messageId":"606","endLine":20,"endColumn":19},{"ruleId":"634","severity":1,"message":"635","line":25,"column":17,"nodeType":"636","endLine":25,"endColumn":58},{"ruleId":"634","severity":1,"message":"635","line":139,"column":21,"nodeType":"636","endLine":139,"endColumn":62},{"ruleId":"603","severity":1,"message":"604","line":358,"column":15,"nodeType":"605","messageId":"606","endLine":358,"endColumn":17},{"ruleId":"598","severity":1,"message":"615","line":1,"column":38,"nodeType":"600","messageId":"601","endLine":1,"endColumn":47},{"ruleId":"598","severity":1,"message":"619","line":2,"column":22,"nodeType":"600","messageId":"601","endLine":2,"endColumn":30},{"ruleId":"598","severity":1,"message":"617","line":17,"column":9,"nodeType":"600","messageId":"601","endLine":17,"endColumn":17},{"ruleId":"611","severity":1,"message":"612","line":63,"column":46,"nodeType":"613","messageId":"614","endLine":63,"endColumn":48},{"ruleId":"603","severity":1,"message":"604","line":96,"column":27,"nodeType":"605","messageId":"606","endLine":96,"endColumn":29},{"ruleId":"598","severity":1,"message":"630","line":1,"column":17,"nodeType":"600","messageId":"601","endLine":1,"endColumn":26},{"ruleId":"598","severity":1,"message":"615","line":1,"column":28,"nodeType":"600","messageId":"601","endLine":1,"endColumn":37},{"ruleId":"598","severity":1,"message":"609","line":1,"column":39,"nodeType":"600","messageId":"601","endLine":1,"endColumn":49},{"ruleId":"598","severity":1,"message":"599","line":2,"column":10,"nodeType":"600","messageId":"601","endLine":2,"endColumn":20},{"ruleId":"598","severity":1,"message":"610","line":5,"column":8,"nodeType":"600","messageId":"601","endLine":5,"endColumn":19},{"ruleId":"598","severity":1,"message":"632","line":7,"column":8,"nodeType":"600","messageId":"601","endLine":7,"endColumn":19},{"ruleId":"598","severity":1,"message":"648","line":11,"column":8,"nodeType":"600","messageId":"601","endLine":11,"endColumn":13},{"ruleId":"603","severity":1,"message":"604","line":15,"column":17,"nodeType":"605","messageId":"606","endLine":15,"endColumn":19},{"ruleId":"634","severity":1,"message":"635","line":19,"column":9,"nodeType":"636","endLine":19,"endColumn":29},{"ruleId":"634","severity":1,"message":"635","line":23,"column":16,"nodeType":"636","endLine":23,"endColumn":52},{"ruleId":"634","severity":1,"message":"635","line":26,"column":16,"nodeType":"636","endLine":26,"endColumn":54},{"ruleId":"634","severity":1,"message":"635","line":29,"column":16,"nodeType":"636","endLine":29,"endColumn":54},{"ruleId":"634","severity":1,"message":"635","line":32,"column":16,"nodeType":"636","endLine":32,"endColumn":54},{"ruleId":"634","severity":1,"message":"635","line":48,"column":13,"nodeType":"636","endLine":48,"endColumn":33},{"ruleId":"634","severity":1,"message":"635","line":52,"column":16,"nodeType":"636","endLine":52,"endColumn":52},{"ruleId":"634","severity":1,"message":"635","line":55,"column":16,"nodeType":"636","endLine":55,"endColumn":54},{"ruleId":"634","severity":1,"message":"635","line":58,"column":16,"nodeType":"636","endLine":58,"endColumn":54},{"ruleId":"634","severity":1,"message":"635","line":61,"column":16,"nodeType":"636","endLine":61,"endColumn":54},{"ruleId":"598","severity":1,"message":"647","line":90,"column":17,"nodeType":"600","messageId":"601","endLine":90,"endColumn":19},{"ruleId":"598","severity":1,"message":"615","line":1,"column":38,"nodeType":"600","messageId":"601","endLine":1,"endColumn":47},{"ruleId":"598","severity":1,"message":"619","line":2,"column":22,"nodeType":"600","messageId":"601","endLine":2,"endColumn":30},{"ruleId":"598","severity":1,"message":"620","line":6,"column":8,"nodeType":"600","messageId":"601","endLine":6,"endColumn":14},{"ruleId":"598","severity":1,"message":"621","line":7,"column":8,"nodeType":"600","messageId":"601","endLine":7,"endColumn":13},{"ruleId":"598","severity":1,"message":"617","line":15,"column":9,"nodeType":"600","messageId":"601","endLine":15,"endColumn":17},{"ruleId":"598","severity":1,"message":"630","line":1,"column":17,"nodeType":"600","messageId":"601","endLine":1,"endColumn":26},{"ruleId":"598","severity":1,"message":"615","line":1,"column":28,"nodeType":"600","messageId":"601","endLine":1,"endColumn":37},{"ruleId":"598","severity":1,"message":"609","line":1,"column":39,"nodeType":"600","messageId":"601","endLine":1,"endColumn":49},{"ruleId":"598","severity":1,"message":"599","line":2,"column":10,"nodeType":"600","messageId":"601","endLine":2,"endColumn":20},{"ruleId":"598","severity":1,"message":"610","line":5,"column":8,"nodeType":"600","messageId":"601","endLine":5,"endColumn":19},{"ruleId":"598","severity":1,"message":"632","line":7,"column":8,"nodeType":"600","messageId":"601","endLine":7,"endColumn":19},{"ruleId":"598","severity":1,"message":"648","line":11,"column":8,"nodeType":"600","messageId":"601","endLine":11,"endColumn":13},{"ruleId":"603","severity":1,"message":"604","line":15,"column":17,"nodeType":"605","messageId":"606","endLine":15,"endColumn":19},{"ruleId":"634","severity":1,"message":"635","line":19,"column":9,"nodeType":"636","endLine":19,"endColumn":29},{"ruleId":"634","severity":1,"message":"635","line":24,"column":16,"nodeType":"636","endLine":24,"endColumn":54},{"ruleId":"634","severity":1,"message":"635","line":27,"column":16,"nodeType":"636","endLine":27,"endColumn":52},{"ruleId":"634","severity":1,"message":"635","line":30,"column":16,"nodeType":"636","endLine":30,"endColumn":54},{"ruleId":"634","severity":1,"message":"635","line":33,"column":16,"nodeType":"636","endLine":33,"endColumn":54},{"ruleId":"634","severity":1,"message":"635","line":50,"column":13,"nodeType":"636","endLine":50,"endColumn":33},{"ruleId":"634","severity":1,"message":"635","line":54,"column":16,"nodeType":"636","endLine":54,"endColumn":54},{"ruleId":"634","severity":1,"message":"635","line":57,"column":16,"nodeType":"636","endLine":57,"endColumn":52},{"ruleId":"634","severity":1,"message":"635","line":60,"column":16,"nodeType":"636","endLine":60,"endColumn":54},{"ruleId":"634","severity":1,"message":"635","line":63,"column":16,"nodeType":"636","endLine":63,"endColumn":54},{"ruleId":"598","severity":1,"message":"647","line":92,"column":17,"nodeType":"600","messageId":"601","endLine":92,"endColumn":19},{"ruleId":"598","severity":1,"message":"630","line":1,"column":17,"nodeType":"600","messageId":"601","endLine":1,"endColumn":26},{"ruleId":"598","severity":1,"message":"615","line":1,"column":28,"nodeType":"600","messageId":"601","endLine":1,"endColumn":37},{"ruleId":"598","severity":1,"message":"631","line":4,"column":15,"nodeType":"600","messageId":"601","endLine":4,"endColumn":45},{"ruleId":"598","severity":1,"message":"632","line":7,"column":8,"nodeType":"600","messageId":"601","endLine":7,"endColumn":19},{"ruleId":"598","severity":1,"message":"652","line":9,"column":8,"nodeType":"600","messageId":"601","endLine":9,"endColumn":16},{"ruleId":"598","severity":1,"message":"656","line":12,"column":8,"nodeType":"600","messageId":"601","endLine":12,"endColumn":19},{"ruleId":"598","severity":1,"message":"618","line":15,"column":11,"nodeType":"600","messageId":"601","endLine":15,"endColumn":18},{"ruleId":"598","severity":1,"message":"655","line":17,"column":9,"nodeType":"600","messageId":"601","endLine":17,"endColumn":17},{"ruleId":"603","severity":1,"message":"604","line":18,"column":17,"nodeType":"605","messageId":"606","endLine":18,"endColumn":19},{"ruleId":"634","severity":1,"message":"635","line":22,"column":9,"nodeType":"636","endLine":22,"endColumn":29},{"ruleId":"634","severity":1,"message":"635","line":26,"column":16,"nodeType":"636","endLine":26,"endColumn":54},{"ruleId":"634","severity":1,"message":"635","line":29,"column":16,"nodeType":"636","endLine":29,"endColumn":52},{"ruleId":"634","severity":1,"message":"635","line":32,"column":16,"nodeType":"636","endLine":32,"endColumn":51},{"ruleId":"634","severity":1,"message":"635","line":35,"column":16,"nodeType":"636","endLine":35,"endColumn":51},{"ruleId":"634","severity":1,"message":"635","line":53,"column":13,"nodeType":"636","endLine":53,"endColumn":33},{"ruleId":"634","severity":1,"message":"635","line":57,"column":16,"nodeType":"636","endLine":57,"endColumn":54},{"ruleId":"634","severity":1,"message":"635","line":60,"column":16,"nodeType":"636","endLine":60,"endColumn":52},{"ruleId":"634","severity":1,"message":"635","line":63,"column":16,"nodeType":"636","endLine":63,"endColumn":51},{"ruleId":"634","severity":1,"message":"635","line":66,"column":16,"nodeType":"636","endLine":66,"endColumn":51},{"ruleId":"598","severity":1,"message":"615","line":1,"column":38,"nodeType":"600","messageId":"601","endLine":1,"endColumn":47},{"ruleId":"598","severity":1,"message":"619","line":2,"column":22,"nodeType":"600","messageId":"601","endLine":2,"endColumn":30},{"ruleId":"598","severity":1,"message":"620","line":6,"column":8,"nodeType":"600","messageId":"601","endLine":6,"endColumn":14},{"ruleId":"598","severity":1,"message":"621","line":7,"column":8,"nodeType":"600","messageId":"601","endLine":7,"endColumn":13},{"ruleId":"598","severity":1,"message":"645","line":8,"column":8,"nodeType":"600","messageId":"601","endLine":8,"endColumn":11},{"ruleId":"598","severity":1,"message":"615","line":1,"column":38,"nodeType":"600","messageId":"601","endLine":1,"endColumn":47},{"ruleId":"598","severity":1,"message":"619","line":2,"column":22,"nodeType":"600","messageId":"601","endLine":2,"endColumn":30},{"ruleId":"598","severity":1,"message":"620","line":6,"column":8,"nodeType":"600","messageId":"601","endLine":6,"endColumn":14},{"ruleId":"598","severity":1,"message":"621","line":7,"column":8,"nodeType":"600","messageId":"601","endLine":7,"endColumn":13},{"ruleId":"598","severity":1,"message":"630","line":1,"column":17,"nodeType":"600","messageId":"601","endLine":1,"endColumn":26},{"ruleId":"598","severity":1,"message":"615","line":1,"column":28,"nodeType":"600","messageId":"601","endLine":1,"endColumn":37},{"ruleId":"598","severity":1,"message":"631","line":4,"column":15,"nodeType":"600","messageId":"601","endLine":4,"endColumn":45},{"ruleId":"598","severity":1,"message":"632","line":7,"column":8,"nodeType":"600","messageId":"601","endLine":7,"endColumn":19},{"ruleId":"598","severity":1,"message":"652","line":9,"column":8,"nodeType":"600","messageId":"601","endLine":9,"endColumn":16},{"ruleId":"598","severity":1,"message":"656","line":12,"column":8,"nodeType":"600","messageId":"601","endLine":12,"endColumn":19},{"ruleId":"598","severity":1,"message":"618","line":17,"column":11,"nodeType":"600","messageId":"601","endLine":17,"endColumn":18},{"ruleId":"603","severity":1,"message":"604","line":19,"column":17,"nodeType":"605","messageId":"606","endLine":19,"endColumn":19},{"ruleId":"634","severity":1,"message":"635","line":23,"column":9,"nodeType":"636","endLine":23,"endColumn":29},{"ruleId":"634","severity":1,"message":"635","line":28,"column":16,"nodeType":"636","endLine":28,"endColumn":54},{"ruleId":"634","severity":1,"message":"635","line":31,"column":16,"nodeType":"636","endLine":31,"endColumn":52},{"ruleId":"634","severity":1,"message":"635","line":34,"column":16,"nodeType":"636","endLine":34,"endColumn":51},{"ruleId":"634","severity":1,"message":"635","line":37,"column":16,"nodeType":"636","endLine":37,"endColumn":51},{"ruleId":"634","severity":1,"message":"635","line":56,"column":13,"nodeType":"636","endLine":56,"endColumn":33},{"ruleId":"634","severity":1,"message":"635","line":61,"column":16,"nodeType":"636","endLine":61,"endColumn":54},{"ruleId":"634","severity":1,"message":"635","line":64,"column":16,"nodeType":"636","endLine":64,"endColumn":52},{"ruleId":"634","severity":1,"message":"635","line":67,"column":16,"nodeType":"636","endLine":67,"endColumn":51},{"ruleId":"634","severity":1,"message":"635","line":70,"column":16,"nodeType":"636","endLine":70,"endColumn":51},{"ruleId":"603","severity":1,"message":"604","line":92,"column":15,"nodeType":"605","messageId":"606","endLine":92,"endColumn":17},{"ruleId":"603","severity":1,"message":"604","line":138,"column":15,"nodeType":"605","messageId":"606","endLine":138,"endColumn":17},{"ruleId":"598","severity":1,"message":"615","line":1,"column":38,"nodeType":"600","messageId":"601","endLine":1,"endColumn":47},{"ruleId":"598","severity":1,"message":"619","line":2,"column":22,"nodeType":"600","messageId":"601","endLine":2,"endColumn":30},{"ruleId":"598","severity":1,"message":"620","line":7,"column":8,"nodeType":"600","messageId":"601","endLine":7,"endColumn":14},{"ruleId":"598","severity":1,"message":"621","line":8,"column":8,"nodeType":"600","messageId":"601","endLine":8,"endColumn":13},{"ruleId":"598","severity":1,"message":"644","line":16,"column":19,"nodeType":"600","messageId":"601","endLine":16,"endColumn":30},{"ruleId":"598","severity":1,"message":"615","line":1,"column":38,"nodeType":"600","messageId":"601","endLine":1,"endColumn":47},{"ruleId":"598","severity":1,"message":"619","line":2,"column":22,"nodeType":"600","messageId":"601","endLine":2,"endColumn":30},{"ruleId":"598","severity":1,"message":"620","line":7,"column":8,"nodeType":"600","messageId":"601","endLine":7,"endColumn":14},{"ruleId":"598","severity":1,"message":"621","line":8,"column":8,"nodeType":"600","messageId":"601","endLine":8,"endColumn":13},{"ruleId":"598","severity":1,"message":"645","line":9,"column":8,"nodeType":"600","messageId":"601","endLine":9,"endColumn":11},{"ruleId":"598","severity":1,"message":"630","line":1,"column":17,"nodeType":"600","messageId":"601","endLine":1,"endColumn":26},{"ruleId":"598","severity":1,"message":"615","line":1,"column":28,"nodeType":"600","messageId":"601","endLine":1,"endColumn":37},{"ruleId":"598","severity":1,"message":"609","line":1,"column":39,"nodeType":"600","messageId":"601","endLine":1,"endColumn":49},{"ruleId":"598","severity":1,"message":"641","line":3,"column":8,"nodeType":"600","messageId":"601","endLine":3,"endColumn":14},{"ruleId":"598","severity":1,"message":"631","line":4,"column":15,"nodeType":"600","messageId":"601","endLine":4,"endColumn":45},{"ruleId":"598","severity":1,"message":"610","line":5,"column":8,"nodeType":"600","messageId":"601","endLine":5,"endColumn":19},{"ruleId":"598","severity":1,"message":"657","line":6,"column":8,"nodeType":"600","messageId":"601","endLine":6,"endColumn":16},{"ruleId":"598","severity":1,"message":"632","line":7,"column":8,"nodeType":"600","messageId":"601","endLine":7,"endColumn":19},{"ruleId":"598","severity":1,"message":"651","line":8,"column":8,"nodeType":"600","messageId":"601","endLine":8,"endColumn":14},{"ruleId":"598","severity":1,"message":"653","line":10,"column":8,"nodeType":"600","messageId":"601","endLine":10,"endColumn":14},{"ruleId":"598","severity":1,"message":"648","line":11,"column":8,"nodeType":"600","messageId":"601","endLine":11,"endColumn":13},{"ruleId":"598","severity":1,"message":"656","line":15,"column":8,"nodeType":"600","messageId":"601","endLine":15,"endColumn":19},{"ruleId":"598","severity":1,"message":"633","line":20,"column":11,"nodeType":"600","messageId":"601","endLine":20,"endColumn":19},{"ruleId":"634","severity":1,"message":"635","line":35,"column":5,"nodeType":"636","endLine":35,"endColumn":45},{"ruleId":"634","severity":1,"message":"635","line":39,"column":12,"nodeType":"636","endLine":39,"endColumn":50},{"ruleId":"634","severity":1,"message":"635","line":42,"column":12,"nodeType":"636","endLine":42,"endColumn":50},{"ruleId":"634","severity":1,"message":"635","line":45,"column":12,"nodeType":"636","endLine":45,"endColumn":50},"no-native-reassign",["658"],"no-negated-in-lhs",["659"],"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","'useParams' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Usuario' is defined but never used.","'Logo' is defined but never used.","'useContext' is defined but never used.","'UserContext' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useEffect' is defined but never used.","'Link' is defined but never used.","'userData' is assigned a value but never used.","'history' is assigned a value but never used.","'Redirect' is defined but never used.","'Select' is defined but never used.","'Async' is defined but never used.","'error' is assigned a value but never used.","'informes' is assigned a value but never used.","'enfermedades' is assigned a value but never used.","'axios' is defined but never used.",["658"],["659"],"'useState' is defined but never used.","'ErrorNotice' is defined but never used.","'Component' is defined but never used.","'editarConsultaAtencionEspecial' is defined but never used.","'consultaImg' is defined but never used.","'mensajes' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","Expected '!==' and instead saw '!='.","'CerrarDiv' is defined but never used.","'useOktaAuth' is defined but never used.","'firebase' is defined but never used.","'moment' is defined but never used.","'InputText' is assigned a value but never used.","'medico' is assigned a value but never used.","'setUserData' is assigned a value but never used.","'api' is defined but never used.","'Checkbox' is defined but never used.","'id' is assigned a value but never used.","'medic' is defined but never used.","'idEnfermedad' is assigned a value but never used.","'cita' is defined but never used.","'motive' is defined but never used.","'personas' is defined but never used.","'doctor' is defined but never used.","'content' is defined but never used.","'content2' is defined but never used.","'exclamation' is defined but never used.","'calendar' is defined but never used.","no-global-assign","no-unsafe-negation"]